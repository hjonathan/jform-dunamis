{"remainingRequest":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/eslint-loader/index.js??ref--13-0!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/vue2-vuetify/lib/jsonforms-vue2-vuetify.cjs.js","dependencies":[{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/vue2-vuetify/lib/jsonforms-vue2-vuetify.cjs.js","mtime":1645670552493},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js","mtime":1645670388105},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/eslint-loader/index.js","mtime":1645670384358}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIF90eXBlb2YyID0gcmVxdWlyZSgiL1VzZXJzL3Fzcm9kcmkvcG00L2pzb25mb3Jtcy12dWV0aWZ5LXJlbmRlcmVycy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy90eXBlb2YiKS5kZWZhdWx0OwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN5bWJvbC5kZXNjcmlwdGlvbi5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zeW1ib2wuaXRlcmF0b3IuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmlzLW5hbi5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3Rvci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmpvaW4uanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3RhcnRzLXdpdGguanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5zZXQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbmQuanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5zZWFyY2guanMiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKCnZhciBjb3JlID0gcmVxdWlyZSgnQGpzb25mb3Jtcy9jb3JlJyk7Cgp2YXIgY29tcG9zaXRpb25BcGkgPSByZXF1aXJlKCdAdnVlL2NvbXBvc2l0aW9uLWFwaScpOwoKdmFyIHZ1ZTIgPSByZXF1aXJlKCdAanNvbmZvcm1zL3Z1ZTInKTsKCnZhciBjbG9uZURlZXAgPSByZXF1aXJlKCdsb2Rhc2gvY2xvbmVEZWVwJyk7Cgp2YXIgbWVyZ2UgPSByZXF1aXJlKCdsb2Rhc2gvbWVyZ2UnKTsKCnZhciBtZXJnZVdpdGggPSByZXF1aXJlKCdsb2Rhc2gvbWVyZ2VXaXRoJyk7Cgp2YXIgZGF5anMgPSByZXF1aXJlKCdkYXlqcycpOwoKdmFyIGN1c3RvbVBhcnNpbmcgPSByZXF1aXJlKCdkYXlqcy9wbHVnaW4vY3VzdG9tUGFyc2VGb3JtYXQnKTsKCnZhciB1dGMgPSByZXF1aXJlKCdkYXlqcy9wbHVnaW4vdXRjJyk7Cgp2YXIgdGltZXpvbmUgPSByZXF1aXJlKCdkYXlqcy9wbHVnaW4vdGltZXpvbmUnKTsKCnZhciBsaWIgPSByZXF1aXJlKCd2dWV0aWZ5L2xpYicpOwoKdmFyIGZpbmRJbmRleCA9IHJlcXVpcmUoJ2xvZGFzaC9maW5kSW5kZXgnKTsKCnZhciBvbWl0ID0gcmVxdWlyZSgnbG9kYXNoL29taXQnKTsKCnZhciBzdGFydENhc2UgPSByZXF1aXJlKCdsb2Rhc2gvc3RhcnRDYXNlJyk7Cgp2YXIgaXNFbXB0eSA9IHJlcXVpcmUoJ2xvZGFzaC9pc0VtcHR5Jyk7Cgp2YXIgaXNBcnJheSA9IHJlcXVpcmUoJ2xvZGFzaC9pc0FycmF5Jyk7Cgp2YXIgZXZlcnkgPSByZXF1aXJlKCdsb2Rhc2gvZXZlcnknKTsKCnZhciBpc1N0cmluZyA9IHJlcXVpcmUoJ2xvZGFzaC9pc1N0cmluZycpOwoKdmFyIGxvZGFzaCA9IHJlcXVpcmUoJ2xvZGFzaCcpOwoKZnVuY3Rpb24gX2ludGVyb3BEZWZhdWx0TGVnYWN5KGUpIHsKICByZXR1cm4gZSAmJiBfdHlwZW9mMihlKSA9PT0gJ29iamVjdCcgJiYgJ2RlZmF1bHQnIGluIGUgPyBlIDogewogICAgJ2RlZmF1bHQnOiBlCiAgfTsKfQoKdmFyIGNsb25lRGVlcF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koY2xvbmVEZWVwKTsKCnZhciBtZXJnZV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3kobWVyZ2UpOwoKdmFyIG1lcmdlV2l0aF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3kobWVyZ2VXaXRoKTsKCnZhciBkYXlqc19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koZGF5anMpOwoKdmFyIGN1c3RvbVBhcnNpbmdfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KGN1c3RvbVBhcnNpbmcpOwoKdmFyIHV0Y19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3kodXRjKTsKCnZhciB0aW1lem9uZV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3kodGltZXpvbmUpOwoKdmFyIGZpbmRJbmRleF9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koZmluZEluZGV4KTsKCnZhciBvbWl0X19kZWZhdWx0ID0gLyojX19QVVJFX18qL19pbnRlcm9wRGVmYXVsdExlZ2FjeShvbWl0KTsKCnZhciBzdGFydENhc2VfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KHN0YXJ0Q2FzZSk7Cgp2YXIgaXNFbXB0eV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koaXNFbXB0eSk7Cgp2YXIgaXNBcnJheV9fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koaXNBcnJheSk7Cgp2YXIgZXZlcnlfX2RlZmF1bHQgPSAvKiNfX1BVUkVfXyovX2ludGVyb3BEZWZhdWx0TGVnYWN5KGV2ZXJ5KTsKCnZhciBpc1N0cmluZ19fZGVmYXVsdCA9IC8qI19fUFVSRV9fKi9faW50ZXJvcERlZmF1bHRMZWdhY3koaXNTdHJpbmcpOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7CiAgdmFyIGtleXMgPSBPYmplY3Qua2V5cyhvYmplY3QpOwoKICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgewogICAgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7CgogICAgaWYgKGVudW1lcmFibGVPbmx5KSB7CiAgICAgIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7CiAgICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7CiAgICAgIH0pOwogICAgfQoKICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsKICB9CgogIHJldHVybiBrZXlzOwp9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHsKICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgewogICAgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307CgogICAgaWYgKGkgJSAyKSB7CiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOwogICAgICB9KTsKICAgIH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsKICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsKICAgIH0gZWxzZSB7CiAgICAgIG93bktleXMoT2JqZWN0KHNvdXJjZSkpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOwogICAgICB9KTsKICAgIH0KICB9CgogIHJldHVybiB0YXJnZXQ7Cn0KCmZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7CiAgIkBiYWJlbC9oZWxwZXJzIC0gdHlwZW9mIjsKCiAgaWYgKHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gInN5bWJvbCIpIHsKICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogICAgICByZXR1cm4gdHlwZW9mIG9iajsKICAgIH07CiAgfSBlbHNlIHsKICAgIF90eXBlb2YgPSBmdW5jdGlvbiBfdHlwZW9mKG9iaikgewogICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gInN5bWJvbCIgOiB0eXBlb2Ygb2JqOwogICAgfTsKICB9CgogIHJldHVybiBfdHlwZW9mKG9iaik7Cn0KCmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsKICBpZiAoa2V5IGluIG9iaikgewogICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7CiAgICAgIHZhbHVlOiB2YWx1ZSwKICAgICAgZW51bWVyYWJsZTogdHJ1ZSwKICAgICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgICB3cml0YWJsZTogdHJ1ZQogICAgfSk7CiAgfSBlbHNlIHsKICAgIG9ialtrZXldID0gdmFsdWU7CiAgfQoKICByZXR1cm4gb2JqOwp9CgpmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7CiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTsKfQoKZnVuY3Rpb24gX2FycmF5V2l0aG91dEhvbGVzKGFycikgewogIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShhcnIpOwp9CgpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHsKICBpZiAodHlwZW9mIFN5bWJvbCAhPT0gInVuZGVmaW5lZCIgJiYgaXRlcltTeW1ib2wuaXRlcmF0b3JdICE9IG51bGwgfHwgaXRlclsiQEBpdGVyYXRvciJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpOwp9CgpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7CiAgaWYgKCFvKSByZXR1cm47CiAgaWYgKHR5cGVvZiBvID09PSAic3RyaW5nIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7CiAgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOwogIGlmIChuID09PSAiT2JqZWN0IiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOwogIGlmIChuID09PSAiTWFwIiB8fCBuID09PSAiU2V0IikgcmV0dXJuIEFycmF5LmZyb20obyk7CiAgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsKfQoKZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsKICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsKCiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7CiAgICBhcnIyW2ldID0gYXJyW2ldOwogIH0KCiAgcmV0dXJuIGFycjI7Cn0KCmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHsKICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gc3ByZWFkIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsKfQoKZnVuY3Rpb24gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIobywgYWxsb3dBcnJheUxpa2UpIHsKICB2YXIgaXQgPSB0eXBlb2YgU3ltYm9sICE9PSAidW5kZWZpbmVkIiAmJiBvW1N5bWJvbC5pdGVyYXRvcl0gfHwgb1siQEBpdGVyYXRvciJdOwoKICBpZiAoIWl0KSB7CiAgICBpZiAoQXJyYXkuaXNBcnJheShvKSB8fCAoaXQgPSBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobykpIHx8IGFsbG93QXJyYXlMaWtlICYmIG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSAibnVtYmVyIikgewogICAgICBpZiAoaXQpIG8gPSBpdDsKICAgICAgdmFyIGkgPSAwOwoKICAgICAgdmFyIEYgPSBmdW5jdGlvbiBGKCkge307CgogICAgICByZXR1cm4gewogICAgICAgIHM6IEYsCiAgICAgICAgbjogZnVuY3Rpb24gbigpIHsKICAgICAgICAgIGlmIChpID49IG8ubGVuZ3RoKSByZXR1cm4gewogICAgICAgICAgICBkb25lOiB0cnVlCiAgICAgICAgICB9OwogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgZG9uZTogZmFsc2UsCiAgICAgICAgICAgIHZhbHVlOiBvW2krK10KICAgICAgICAgIH07CiAgICAgICAgfSwKICAgICAgICBlOiBmdW5jdGlvbiBlKF9lKSB7CiAgICAgICAgICB0aHJvdyBfZTsKICAgICAgICB9LAogICAgICAgIGY6IEYKICAgICAgfTsKICAgIH0KCiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCJJbnZhbGlkIGF0dGVtcHQgdG8gaXRlcmF0ZSBub24taXRlcmFibGUgaW5zdGFuY2UuXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuIik7CiAgfQoKICB2YXIgbm9ybWFsQ29tcGxldGlvbiA9IHRydWUsCiAgICAgIGRpZEVyciA9IGZhbHNlLAogICAgICBlcnI7CiAgcmV0dXJuIHsKICAgIHM6IGZ1bmN0aW9uIHMoKSB7CiAgICAgIGl0ID0gaXQuY2FsbChvKTsKICAgIH0sCiAgICBuOiBmdW5jdGlvbiBuKCkgewogICAgICB2YXIgc3RlcCA9IGl0Lm5leHQoKTsKICAgICAgbm9ybWFsQ29tcGxldGlvbiA9IHN0ZXAuZG9uZTsKICAgICAgcmV0dXJuIHN0ZXA7CiAgICB9LAogICAgZTogZnVuY3Rpb24gZShfZTIpIHsKICAgICAgZGlkRXJyID0gdHJ1ZTsKICAgICAgZXJyID0gX2UyOwogICAgfSwKICAgIGY6IGZ1bmN0aW9uIGYoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgaWYgKCFub3JtYWxDb21wbGV0aW9uICYmIGl0LnJldHVybiAhPSBudWxsKSBpdC5yZXR1cm4oKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBpZiAoZGlkRXJyKSB0aHJvdyBlcnI7CiAgICAgIH0KICAgIH0KICB9Owp9Cgp2YXIgZGVmYXVsdFN0eWxlcyA9IHsKICBjb250cm9sOiB7CiAgICByb290OiAnY29udHJvbCcsCiAgICBpbnB1dDogJ2lucHV0JwogIH0sCiAgdmVydGljYWxMYXlvdXQ6IHsKICAgIHJvb3Q6ICd2ZXJ0aWNhbC1sYXlvdXQnLAogICAgaXRlbTogJ3ZlcnRpY2FsLWxheW91dC1pdGVtJwogIH0sCiAgaG9yaXpvbnRhbExheW91dDogewogICAgcm9vdDogJ2hvcml6b250YWwtbGF5b3V0JywKICAgIGl0ZW06ICdob3Jpem9udGFsLWxheW91dC1pdGVtJwogIH0sCiAgZ3JvdXA6IHsKICAgIHJvb3Q6ICdncm91cCcsCiAgICBsYWJlbDogJ2dyb3VwLWxhYmVsJywKICAgIGl0ZW06ICdncm91cC1pdGVtJwogIH0sCiAgYXJyYXlMaXN0OiB7CiAgICByb290OiAnYXJyYXktbGlzdCcsCiAgICB0b29sYmFyOiAnYXJyYXktbGlzdC10b29sYmFyJywKICAgIGFkZEJ1dHRvbjogJ2FycmF5LWxpc3QtYWRkJywKICAgIGxhYmVsOiAnYXJyYXktbGlzdC1sYWJlbCcsCiAgICBub0RhdGE6ICdhcnJheS1saXN0LW5vLWRhdGEnLAogICAgaXRlbTogJ2FycmF5LWxpc3QtaXRlbScsCiAgICBpdGVtSGVhZGVyOiAnYXJyYXktbGlzdC1pdGVtLWhlYWRlcicsCiAgICBpdGVtTGFiZWw6ICdhcnJheS1saXN0LWl0ZW0tbGFiZWwnLAogICAgaXRlbUNvbnRlbnQ6ICdhcnJheS1saXN0LWl0ZW0tY29udGVudCcsCiAgICBpdGVtTW92ZVVwOiAnYXJyYXktbGlzdC1pdGVtLW1vdmUtdXAnLAogICAgaXRlbU1vdmVEb3duOiAnYXJyYXktbGlzdC1pdGVtLW1vdmUtZG93bicsCiAgICBpdGVtRGVsZXRlOiAnYXJyYXktbGlzdC1pdGVtLWRlbGV0ZScKICB9LAogIGxpc3RXaXRoRGV0YWlsOiB7CiAgICByb290OiAnbGlzdC13aXRoLWRldGFpbCcsCiAgICB0b29sYmFyOiAnbGlzdC13aXRoLWRldGFpbC10b29sYmFyJywKICAgIGFkZEJ1dHRvbjogJ2xpc3Qtd2l0aC1kZXRhaWwtYWRkJywKICAgIGxhYmVsOiAnbGlzdC13aXRoLWRldGFpbC1sYWJlbCcsCiAgICBub0RhdGE6ICdsaXN0LXdpdGgtZGV0YWlsLW5vLWRhdGEnLAogICAgaXRlbTogJ2xpc3Qtd2l0aC1kZXRhaWwtaXRlbScsCiAgICBpdGVtTGFiZWw6ICdsaXN0LXdpdGgtZGV0YWlsLWl0ZW0tbGFiZWwnLAogICAgaXRlbUNvbnRlbnQ6ICdsaXN0LXdpdGgtZGV0YWlsLWl0ZW0tY29udGVudCcsCiAgICBpdGVtTW92ZVVwOiAnbGlzdC13aXRoLWRldGFpbC1pdGVtLW1vdmUtdXAnLAogICAgaXRlbU1vdmVEb3duOiAnbGlzdC13aXRoLWRldGFpbC1pdGVtLW1vdmUtZG93bicsCiAgICBpdGVtRGVsZXRlOiAnbGlzdC13aXRoLWRldGFpbC1pdGVtLWRlbGV0ZScKICB9LAogIGxhYmVsOiB7CiAgICByb290OiAnbGFiZWwtZWxlbWVudCcKICB9LAogIGNhdGVnb3JpemF0aW9uOiB7CiAgICByb290OiAnY2F0ZWdvcml6YXRpb24nCiAgfQp9OwoKdmFyIGNyZWF0ZUVtcHR5U3R5bGVzID0gZnVuY3Rpb24gY3JlYXRlRW1wdHlTdHlsZXMoKSB7CiAgcmV0dXJuIHsKICAgIGNvbnRyb2w6IHt9LAogICAgdmVydGljYWxMYXlvdXQ6IHt9LAogICAgaG9yaXpvbnRhbExheW91dDoge30sCiAgICBncm91cDoge30sCiAgICBhcnJheUxpc3Q6IHt9LAogICAgbGlzdFdpdGhEZXRhaWw6IHt9LAogICAgbGFiZWw6IHt9LAogICAgY2F0ZWdvcml6YXRpb246IHt9CiAgfTsKfTsKCnZhciB1c2VTdHlsZXMgPSBmdW5jdGlvbiB1c2VTdHlsZXMoZWxlbWVudCkgewogIHZhciBfZWxlbWVudCRvcHRpb25zLCBfZWxlbWVudCRvcHRpb25zMjsKCiAgdmFyIHVzZXJTdHlsZXMgPSBjb21wb3NpdGlvbkFwaS5pbmplY3QoJ3N0eWxlcycsIGRlZmF1bHRTdHlsZXMpOwoKICBpZiAoIShlbGVtZW50ICE9PSBudWxsICYmIGVsZW1lbnQgIT09IHZvaWQgMCAmJiAoX2VsZW1lbnQkb3B0aW9ucyA9IGVsZW1lbnQub3B0aW9ucykgIT09IG51bGwgJiYgX2VsZW1lbnQkb3B0aW9ucyAhPT0gdm9pZCAwICYmIF9lbGVtZW50JG9wdGlvbnMuc3R5bGVzKSkgewogICAgcmV0dXJuIHVzZXJTdHlsZXM7CiAgfQoKICB2YXIgc3R5bGVzID0gY3JlYXRlRW1wdHlTdHlsZXMoKTsKCiAgaWYgKHVzZXJTdHlsZXMpIHsKICAgIG1lcmdlX19kZWZhdWx0WyJkZWZhdWx0Il0oc3R5bGVzLCB1c2VyU3R5bGVzKTsKICB9IGVsc2UgewogICAgbWVyZ2VfX2RlZmF1bHRbImRlZmF1bHQiXShzdHlsZXMsIGRlZmF1bHRTdHlsZXMpOwogIH0KCiAgaWYgKGVsZW1lbnQgIT09IG51bGwgJiYgZWxlbWVudCAhPT0gdm9pZCAwICYmIChfZWxlbWVudCRvcHRpb25zMiA9IGVsZW1lbnQub3B0aW9ucykgIT09IG51bGwgJiYgX2VsZW1lbnQkb3B0aW9uczIgIT09IHZvaWQgMCAmJiBfZWxlbWVudCRvcHRpb25zMi5zdHlsZXMpIHsKICAgIG1lcmdlX19kZWZhdWx0WyJkZWZhdWx0Il0oc3R5bGVzLCBlbGVtZW50Lm9wdGlvbnMuc3R5bGVzKTsKICB9CgogIHJldHVybiBzdHlsZXM7Cn07Cgp2YXIgY2xhc3NlcyA9IGZ1bmN0aW9uIGNsYXNzZXMoc3RyaW5ncykgewogIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCB2YXJpYWJsZXMgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykgewogICAgdmFyaWFibGVzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTsKICB9CgogIHJldHVybiBzdHJpbmdzLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBjdXJyLCBpbmRleCkgewogICAgcmV0dXJuICIiLmNvbmNhdChhY2MpLmNvbmNhdChjdXJyKS5jb25jYXQodmFyaWFibGVzW2luZGV4XSB8fCAnJyk7CiAgfSwgJycpLnRyaW0oKTsKfTsKLyoqDQogKiBIZWxwZXIgZnVuY3Rpb24gdG8gbWVyZ2UgdHdvIHN0eWxlcyBkZWZpbml0aW9ucy4gVGhlIGNvbnRhaW5lZCBjbGFzc2VzIHdpbGwgYmUgY29tYmluZWQsIG5vdCBvdmVyd3JpdHRlbi4NCiAqDQogKiBFeGFtcGxlIHVzYWdlOg0KICogYGBgdHMNCiAqIGNvbnN0IG15U3R5bGVzID0gbWVyZ2VTdHlsZXMoZGVmYXVsdFN0eWxlcywgeyBjb250cm9sOiB7IHJvb3Q6ICdteWNvbnRyb2wnIH0gfSk7DQogKiBgYGANCiAqLwoKCnZhciBtZXJnZVN0eWxlcyA9IGZ1bmN0aW9uIG1lcmdlU3R5bGVzKHN0eWxlc0EsIHN0eWxlc0IpIHsKICB2YXIgc3R5bGVzID0gY2xvbmVEZWVwX19kZWZhdWx0WyJkZWZhdWx0Il0oc3R5bGVzQSk7CiAgbWVyZ2VXaXRoX19kZWZhdWx0WyJkZWZhdWx0Il0oc3R5bGVzLCBzdHlsZXNCLCBmdW5jdGlvbiAoYVZhbHVlLCBiVmFsdWUpIHsKICAgIGlmICh0eXBlb2YgYVZhbHVlID09PSAnc3RyaW5nJyAmJiB0eXBlb2YgYlZhbHVlID09PSAnc3RyaW5nJykgewogICAgICByZXR1cm4gIiIuY29uY2F0KGFWYWx1ZSwgIiAiKS5jb25jYXQoYlZhbHVlKTsKICAgIH0KCiAgICByZXR1cm4gdW5kZWZpbmVkOwogIH0pOwogIHJldHVybiBzdHlsZXM7Cn07Cgp2YXIgdXNlQ29udHJvbEFwcGxpZWRPcHRpb25zID0gZnVuY3Rpb24gdXNlQ29udHJvbEFwcGxpZWRPcHRpb25zKGlucHV0KSB7CiAgcmV0dXJuIGNvbXBvc2l0aW9uQXBpLmNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBtZXJnZV9fZGVmYXVsdFsiZGVmYXVsdCJdKHt9LCBjbG9uZURlZXBfX2RlZmF1bHRbImRlZmF1bHQiXShpbnB1dC5jb250cm9sLnZhbHVlLmNvbmZpZyksIGNsb25lRGVlcF9fZGVmYXVsdFsiZGVmYXVsdCJdKGlucHV0LmNvbnRyb2wudmFsdWUudWlzY2hlbWEub3B0aW9ucykpOwogIH0pOwp9OwoKdmFyIHVzZUNvbXB1dGVkTGFiZWwgPSBmdW5jdGlvbiB1c2VDb21wdXRlZExhYmVsKGlucHV0LCBhcHBsaWVkT3B0aW9ucykgewogIHJldHVybiBjb21wb3NpdGlvbkFwaS5jb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2FwcGxpZWRPcHRpb25zJHZhbHVlOwoKICAgIHJldHVybiBjb3JlLmNvbXB1dGVMYWJlbChpbnB1dC5jb250cm9sLnZhbHVlLmxhYmVsLCBpbnB1dC5jb250cm9sLnZhbHVlLnJlcXVpcmVkLCAhISgoX2FwcGxpZWRPcHRpb25zJHZhbHVlID0gYXBwbGllZE9wdGlvbnMudmFsdWUpICE9PSBudWxsICYmIF9hcHBsaWVkT3B0aW9ucyR2YWx1ZSAhPT0gdm9pZCAwICYmIF9hcHBsaWVkT3B0aW9ucyR2YWx1ZS5oaWRlUmVxdWlyZWRBc3RlcmlzaykpOwogIH0pOwp9OwovKioNCiAqIEFkZHMgc3R5bGVzLCBpc0ZvY3VzZWQsIGFwcGxpZWRPcHRpb25zIGFuZCBvbkNoYW5nZQ0KICovCgoKdmFyIHVzZVZ1ZXRpZnlDb250cm9sID0gZnVuY3Rpb24gdXNlVnVldGlmeUNvbnRyb2woaW5wdXQpIHsKICB2YXIgYWRhcHRWYWx1ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogZnVuY3Rpb24gKHYpIHsKICAgIHJldHVybiB2OwogIH07CiAgdmFyIGFwcGxpZWRPcHRpb25zID0gdXNlQ29udHJvbEFwcGxpZWRPcHRpb25zKGlucHV0KTsKICB2YXIgaXNGb2N1c2VkID0gY29tcG9zaXRpb25BcGkucmVmKGZhbHNlKTsKCiAgdmFyIG9uQ2hhbmdlID0gZnVuY3Rpb24gb25DaGFuZ2UodmFsdWUpIHsKICAgIGlucHV0LmhhbmRsZUNoYW5nZShpbnB1dC5jb250cm9sLnZhbHVlLnBhdGgsIGFkYXB0VmFsdWUodmFsdWUpKTsKICB9OwoKICB2YXIgcGVyc2lzdGVudEhpbnQgPSBmdW5jdGlvbiBwZXJzaXN0ZW50SGludCgpIHsKICAgIHZhciBfYXBwbGllZE9wdGlvbnMkdmFsdWUyOwoKICAgIHJldHVybiAhY29yZS5pc0Rlc2NyaXB0aW9uSGlkZGVuKGlucHV0LmNvbnRyb2wudmFsdWUudmlzaWJsZSwgaW5wdXQuY29udHJvbC52YWx1ZS5kZXNjcmlwdGlvbiwgaXNGb2N1c2VkLnZhbHVlLCAhISgoX2FwcGxpZWRPcHRpb25zJHZhbHVlMiA9IGFwcGxpZWRPcHRpb25zLnZhbHVlKSAhPT0gbnVsbCAmJiBfYXBwbGllZE9wdGlvbnMkdmFsdWUyICE9PSB2b2lkIDAgJiYgX2FwcGxpZWRPcHRpb25zJHZhbHVlMi5zaG93VW5mb2N1c2VkRGVzY3JpcHRpb24pKTsKICB9OwoKICB2YXIgY29tcHV0ZWRMYWJlbCA9IHVzZUNvbXB1dGVkTGFiZWwoaW5wdXQsIGFwcGxpZWRPcHRpb25zKTsKICB2YXIgY29udHJvbFdyYXBwZXIgPSBjb21wb3NpdGlvbkFwaS5jb21wdXRlZChmdW5jdGlvbiAoKSB7CiAgICB2YXIgX2lucHV0JGNvbnRyb2wkdmFsdWUgPSBpbnB1dC5jb250cm9sLnZhbHVlLAogICAgICAgIGlkID0gX2lucHV0JGNvbnRyb2wkdmFsdWUuaWQsCiAgICAgICAgZGVzY3JpcHRpb24gPSBfaW5wdXQkY29udHJvbCR2YWx1ZS5kZXNjcmlwdGlvbiwKICAgICAgICBlcnJvcnMgPSBfaW5wdXQkY29udHJvbCR2YWx1ZS5lcnJvcnMsCiAgICAgICAgbGFiZWwgPSBfaW5wdXQkY29udHJvbCR2YWx1ZS5sYWJlbCwKICAgICAgICB2aXNpYmxlID0gX2lucHV0JGNvbnRyb2wkdmFsdWUudmlzaWJsZSwKICAgICAgICByZXF1aXJlZCA9IF9pbnB1dCRjb250cm9sJHZhbHVlLnJlcXVpcmVkOwogICAgcmV0dXJuIHsKICAgICAgaWQ6IGlkLAogICAgICBkZXNjcmlwdGlvbjogZGVzY3JpcHRpb24sCiAgICAgIGVycm9yczogZXJyb3JzLAogICAgICBsYWJlbDogbGFiZWwsCiAgICAgIHZpc2libGU6IHZpc2libGUsCiAgICAgIHJlcXVpcmVkOiByZXF1aXJlZAogICAgfTsKICB9KTsKICB2YXIgc3R5bGVzID0gdXNlU3R5bGVzKGlucHV0LmNvbnRyb2wudmFsdWUudWlzY2hlbWEpOwogIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgaW5wdXQpLCB7fSwgewogICAgc3R5bGVzOiBzdHlsZXMsCiAgICBpc0ZvY3VzZWQ6IGlzRm9jdXNlZCwKICAgIGFwcGxpZWRPcHRpb25zOiBhcHBsaWVkT3B0aW9ucywKICAgIGNvbnRyb2xXcmFwcGVyOiBjb250cm9sV3JhcHBlciwKICAgIG9uQ2hhbmdlOiBvbkNoYW5nZSwKICAgIHBlcnNpc3RlbnRIaW50OiBwZXJzaXN0ZW50SGludCwKICAgIGNvbXB1dGVkTGFiZWw6IGNvbXB1dGVkTGFiZWwKICB9KTsKfTsKCnZhciB1c2VUcmFuc2xhdG9yID0gZnVuY3Rpb24gdXNlVHJhbnNsYXRvcigpIHsKICB2YXIganNvbmZvcm1zID0gY29tcG9zaXRpb25BcGkuaW5qZWN0KCdqc29uZm9ybXMnKTsKCiAgaWYgKCFqc29uZm9ybXMpIHsKICAgIHRocm93IG5ldyBFcnJvcigiJ2pzb25mb3JtcyBjb3VsZG4ndCBiZSBpbmplY3RlZC4gQXJlIHlvdSB3aXRoaW4gSlNPTiBGb3Jtcz8iKTsKICB9CgogIGlmICghanNvbmZvcm1zLmkxOG4gfHwgIWpzb25mb3Jtcy5pMThuLnRyYW5zbGF0ZSkgewogICAgdGhyb3cgbmV3IEVycm9yKCInanNvbmZvcm1zIGkxOG4gY291bGRuJ3QgYmUgaW5qZWN0ZWQuIEFyZSB5b3Ugd2l0aGluIEpTT04gRm9ybXM/Iik7CiAgfQoKICB2YXIgdHJhbnNsYXRlID0gY29tcG9zaXRpb25BcGkuY29tcHV0ZWQoZnVuY3Rpb24gKCkgewogICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb24KICAgIHJldHVybiBqc29uZm9ybXMuaTE4bi50cmFuc2xhdGU7CiAgfSk7CiAgcmV0dXJuIHRyYW5zbGF0ZTsKfTsKLyoqDQogKiBBZGRzIHN0eWxlcyBhbmQgYXBwbGllZE9wdGlvbnMNCiAqLwoKCnZhciB1c2VWdWV0aWZ5TGF5b3V0ID0gZnVuY3Rpb24gdXNlVnVldGlmeUxheW91dChpbnB1dCkgewogIHZhciBhcHBsaWVkT3B0aW9ucyA9IGNvbXBvc2l0aW9uQXBpLmNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgIHJldHVybiBtZXJnZV9fZGVmYXVsdFsiZGVmYXVsdCJdKHt9LCBjbG9uZURlZXBfX2RlZmF1bHRbImRlZmF1bHQiXShpbnB1dC5sYXlvdXQudmFsdWUuY29uZmlnKSwgY2xvbmVEZWVwX19kZWZhdWx0WyJkZWZhdWx0Il0oaW5wdXQubGF5b3V0LnZhbHVlLnVpc2NoZW1hLm9wdGlvbnMpKTsKICB9KTsKICByZXR1cm4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIGlucHV0KSwge30sIHsKICAgIHN0eWxlczogdXNlU3R5bGVzKGlucHV0LmxheW91dC52YWx1ZS51aXNjaGVtYSksCiAgICBhcHBsaWVkT3B0aW9uczogYXBwbGllZE9wdGlvbnMKICB9KTsKfTsKLyoqDQogKiBBZGRzIHN0eWxlcywgYXBwbGllZE9wdGlvbnMgYW5kIGNoaWxkVWlTY2hlbWENCiAqLwoKCnZhciB1c2VWdWV0aWZ5QXJyYXlDb250cm9sID0gZnVuY3Rpb24gdXNlVnVldGlmeUFycmF5Q29udHJvbChpbnB1dCkgewogIHZhciBhcHBsaWVkT3B0aW9ucyA9IHVzZUNvbnRyb2xBcHBsaWVkT3B0aW9ucyhpbnB1dCk7CiAgdmFyIGNvbXB1dGVkTGFiZWwgPSB1c2VDb21wdXRlZExhYmVsKGlucHV0LCBhcHBsaWVkT3B0aW9ucyk7CgogIHZhciBjaGlsZExhYmVsRm9ySW5kZXggPSBmdW5jdGlvbiBjaGlsZExhYmVsRm9ySW5kZXgoaW5kZXgpIHsKICAgIHZhciBfaW5wdXQkY29udHJvbCR2YWx1ZSQsIF9pbnB1dCRjb250cm9sJHZhbHVlJDI7CgogICAgdmFyIGNoaWxkTGFiZWxQcm9wID0gKF9pbnB1dCRjb250cm9sJHZhbHVlJCA9IChfaW5wdXQkY29udHJvbCR2YWx1ZSQyID0gaW5wdXQuY29udHJvbC52YWx1ZS51aXNjaGVtYS5vcHRpb25zKSA9PT0gbnVsbCB8fCBfaW5wdXQkY29udHJvbCR2YWx1ZSQyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfaW5wdXQkY29udHJvbCR2YWx1ZSQyLmNoaWxkTGFiZWxQcm9wKSAhPT0gbnVsbCAmJiBfaW5wdXQkY29udHJvbCR2YWx1ZSQgIT09IHZvaWQgMCA/IF9pbnB1dCRjb250cm9sJHZhbHVlJCA6IGNvcmUuZ2V0Rmlyc3RQcmltaXRpdmVQcm9wKGlucHV0LmNvbnRyb2wudmFsdWUuc2NoZW1hKTsKCiAgICBpZiAoIWNoaWxkTGFiZWxQcm9wKSB7CiAgICAgIHJldHVybiAiIi5jb25jYXQoaW5kZXgpOwogICAgfQoKICAgIHZhciBsYWJlbFZhbHVlID0gY29yZS5SZXNvbHZlLmRhdGEoaW5wdXQuY29udHJvbC52YWx1ZS5kYXRhLCBjb3JlLmNvbXBvc2VQYXRocygiIi5jb25jYXQoaW5kZXgpLCBjaGlsZExhYmVsUHJvcCkpOwoKICAgIGlmIChsYWJlbFZhbHVlID09PSB1bmRlZmluZWQgfHwgbGFiZWxWYWx1ZSA9PT0gbnVsbCB8fCBOdW1iZXIuaXNOYU4obGFiZWxWYWx1ZSkpIHsKICAgICAgcmV0dXJuICcnOwogICAgfQoKICAgIHJldHVybiAiIi5jb25jYXQobGFiZWxWYWx1ZSk7CiAgfTsKCiAgcmV0dXJuIF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBpbnB1dCksIHt9LCB7CiAgICBzdHlsZXM6IHVzZVN0eWxlcyhpbnB1dC5jb250cm9sLnZhbHVlLnVpc2NoZW1hKSwKICAgIGFwcGxpZWRPcHRpb25zOiBhcHBsaWVkT3B0aW9ucywKICAgIGNoaWxkTGFiZWxGb3JJbmRleDogY2hpbGRMYWJlbEZvckluZGV4LAogICAgY29tcHV0ZWRMYWJlbDogY29tcHV0ZWRMYWJlbAogIH0pOwp9OwovKioNCiAqIEFkZHMgc3R5bGVzIGFuZCBhcHBsaWVkT3B0aW9ucw0KICovCgoKdmFyIHVzZVZ1ZXRpZnlCYXNpY0NvbnRyb2wgPSBmdW5jdGlvbiB1c2VWdWV0aWZ5QmFzaWNDb250cm9sKGlucHV0KSB7CiAgdmFyIGFwcGxpZWRPcHRpb25zID0gdXNlQ29udHJvbEFwcGxpZWRPcHRpb25zKGlucHV0KTsKICByZXR1cm4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIGlucHV0KSwge30sIHsKICAgIHN0eWxlczogdXNlU3R5bGVzKGlucHV0LmNvbnRyb2wudmFsdWUudWlzY2hlbWEpLAogICAgYXBwbGllZE9wdGlvbnM6IGFwcGxpZWRPcHRpb25zCiAgfSk7Cn07Ci8qKg0KICogRXh0cmFjdHMgQWp2IGZyb20gSlNPTiBGb3Jtcw0KICovCgoKdmFyIHVzZUFqdiA9IGZ1bmN0aW9uIHVzZUFqdigpIHsKICB2YXIgX2pzb25mb3JtcyRjb3JlOwoKICB2YXIganNvbmZvcm1zID0gY29tcG9zaXRpb25BcGkuaW5qZWN0KCdqc29uZm9ybXMnKTsKCiAgaWYgKCFqc29uZm9ybXMpIHsKICAgIHRocm93IG5ldyBFcnJvcigiJ2pzb25mb3JtcycgY291bGRuJ3QgYmUgaW5qZWN0ZWQuIEFyZSB5b3Ugd2l0aGluIEpTT04gRm9ybXM/Iik7CiAgfSAvLyBzaG91bGQgYWx3YXlzIGV4aXN0CgoKICByZXR1cm4gKF9qc29uZm9ybXMkY29yZSA9IGpzb25mb3Jtcy5jb3JlKSA9PT0gbnVsbCB8fCBfanNvbmZvcm1zJGNvcmUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9qc29uZm9ybXMkY29yZS5hanY7Cn07Cgp2YXIgY3JlYXRlQWp2ID0gZnVuY3Rpb24gY3JlYXRlQWp2KG9wdGlvbnMpIHsKICB2YXIgYWp2ID0gY29yZS5jcmVhdGVBanYob3B0aW9ucyk7CiAgYWp2LmFkZEZvcm1hdCgncGFzc3dvcmQnLCBmdW5jdGlvbiAoXykgewogICAgcmV0dXJuIHRydWU7CiAgfSk7CiAgcmV0dXJuIGFqdjsKfTsgLy8gcmVxdWlyZWQgZm9yIHRoZSBjdXN0b20gc2F2ZSBmb3JtYXRzIGluIHRoZSBkYXRlLCB0aW1lIGFuZCBkYXRlLXRpbWUgcGlja2VycwoKCmRheWpzX19kZWZhdWx0WyJkZWZhdWx0Il0uZXh0ZW5kKGN1c3RvbVBhcnNpbmdfX2RlZmF1bHRbImRlZmF1bHQiXSk7CmRheWpzX19kZWZhdWx0WyJkZWZhdWx0Il0uZXh0ZW5kKHV0Y19fZGVmYXVsdFsiZGVmYXVsdCJdKTsKZGF5anNfX2RlZmF1bHRbImRlZmF1bHQiXS5leHRlbmQodGltZXpvbmVfX2RlZmF1bHRbImRlZmF1bHQiXSk7Cgp2YXIgcGFyc2VEYXRlVGltZSA9IGZ1bmN0aW9uIHBhcnNlRGF0ZVRpbWUoZGF0YSwgZm9ybWF0KSB7CiAgaWYgKCFkYXRhKSB7CiAgICByZXR1cm4gbnVsbDsKICB9CgogIHZhciBkYXlqc0RhdGEgPSBkYXlqc19fZGVmYXVsdFsiZGVmYXVsdCJdKGRhdGEsIGZvcm1hdCk7CgogIGlmICghZGF5anNEYXRhLmlzVmFsaWQoKSkgewogICAgcmV0dXJuIG51bGw7CiAgfQoKICByZXR1cm4gZGF5anNEYXRhOwp9OwoKdmFyIGxhYmVsUmVuZGVyZXIgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdsYWJlbC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyLAogICAgVkxhYmVsOiBsaWIuVkxhYmVsCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHZhciB0ID0gdXNlVHJhbnNsYXRvcigpOwogICAgdmFyIGxheW91dCA9IHVzZVZ1ZXRpZnlMYXlvdXQodnVlMi51c2VKc29uRm9ybXNMYXlvdXQocHJvcHMpKTsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgbGF5b3V0KSwge30sIHsKICAgICAgdDogdAogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgdHJhbnNsYXRlZExhYmVsOiBmdW5jdGlvbiB0cmFuc2xhdGVkTGFiZWwoKSB7CiAgICAgIHZhciBfdGhpcyRsYXlvdXQkdWlzY2hlbWE7CgogICAgICBpZiAoKF90aGlzJGxheW91dCR1aXNjaGVtYSA9IHRoaXMubGF5b3V0LnVpc2NoZW1hLm9wdGlvbnMpICE9PSBudWxsICYmIF90aGlzJGxheW91dCR1aXNjaGVtYSAhPT0gdm9pZCAwICYmIF90aGlzJGxheW91dCR1aXNjaGVtYS5pMThuKSB7CiAgICAgICAgcmV0dXJuIHRoaXMudCh0aGlzLmxheW91dC51aXNjaGVtYS5vcHRpb25zLmkxOG4sIHRoaXMubGF5b3V0LnVpc2NoZW1hLnRleHQpOwogICAgICB9CgogICAgICByZXR1cm4gdGhpcy50KHRoaXMubGF5b3V0LnVpc2NoZW1hLnRleHQsIHRoaXMubGF5b3V0LnVpc2NoZW1hLnRleHQpOwogICAgfQogIH0KfSk7CnZhciBlbnRyeSR5ID0gewogIHJlbmRlcmVyOiBsYWJlbFJlbmRlcmVyLAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCgxLCBjb3JlLnVpVHlwZUlzKCdMYWJlbCcpKQp9OwoKZnVuY3Rpb24gbm9ybWFsaXplQ29tcG9uZW50KHRlbXBsYXRlLCBzdHlsZSwgc2NyaXB0LCBzY29wZUlkLCBpc0Z1bmN0aW9uYWxUZW1wbGF0ZSwgbW9kdWxlSWRlbnRpZmllcgovKiBzZXJ2ZXIgb25seSAqLwosIHNoYWRvd01vZGUsIGNyZWF0ZUluamVjdG9yLCBjcmVhdGVJbmplY3RvclNTUiwgY3JlYXRlSW5qZWN0b3JTaGFkb3cpIHsKICBpZiAodHlwZW9mIHNoYWRvd01vZGUgIT09ICdib29sZWFuJykgewogICAgY3JlYXRlSW5qZWN0b3JTU1IgPSBjcmVhdGVJbmplY3RvcjsKICAgIGNyZWF0ZUluamVjdG9yID0gc2hhZG93TW9kZTsKICAgIHNoYWRvd01vZGUgPSBmYWxzZTsKICB9IC8vIFZ1ZS5leHRlbmQgY29uc3RydWN0b3IgZXhwb3J0IGludGVyb3AuCgoKICB2YXIgb3B0aW9ucyA9IHR5cGVvZiBzY3JpcHQgPT09ICdmdW5jdGlvbicgPyBzY3JpcHQub3B0aW9ucyA6IHNjcmlwdDsgLy8gcmVuZGVyIGZ1bmN0aW9ucwoKICBpZiAodGVtcGxhdGUgJiYgdGVtcGxhdGUucmVuZGVyKSB7CiAgICBvcHRpb25zLnJlbmRlciA9IHRlbXBsYXRlLnJlbmRlcjsKICAgIG9wdGlvbnMuc3RhdGljUmVuZGVyRm5zID0gdGVtcGxhdGUuc3RhdGljUmVuZGVyRm5zOwogICAgb3B0aW9ucy5fY29tcGlsZWQgPSB0cnVlOyAvLyBmdW5jdGlvbmFsIHRlbXBsYXRlCgogICAgaWYgKGlzRnVuY3Rpb25hbFRlbXBsYXRlKSB7CiAgICAgIG9wdGlvbnMuZnVuY3Rpb25hbCA9IHRydWU7CiAgICB9CiAgfSAvLyBzY29wZWRJZAoKCiAgaWYgKHNjb3BlSWQpIHsKICAgIG9wdGlvbnMuX3Njb3BlSWQgPSBzY29wZUlkOwogIH0KCiAgdmFyIGhvb2s7CgogIGlmIChtb2R1bGVJZGVudGlmaWVyKSB7CiAgICAvLyBzZXJ2ZXIgYnVpbGQKICAgIGhvb2sgPSBmdW5jdGlvbiBob29rKGNvbnRleHQpIHsKICAgICAgLy8gMi4zIGluamVjdGlvbgogICAgICBjb250ZXh0ID0gY29udGV4dCB8fCB0aGlzLiR2bm9kZSAmJiB0aGlzLiR2bm9kZS5zc3JDb250ZXh0IHx8IHRoaXMucGFyZW50ICYmIHRoaXMucGFyZW50LiR2bm9kZSAmJiB0aGlzLnBhcmVudC4kdm5vZGUuc3NyQ29udGV4dDsgLy8gZnVuY3Rpb25hbAogICAgICAvLyAyLjIgd2l0aCBydW5Jbk5ld0NvbnRleHQ6IHRydWUKCiAgICAgIGlmICghY29udGV4dCAmJiB0eXBlb2YgX19WVUVfU1NSX0NPTlRFWFRfXyAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgICAgICBjb250ZXh0ID0gX19WVUVfU1NSX0NPTlRFWFRfXzsKICAgICAgfSAvLyBpbmplY3QgY29tcG9uZW50IHN0eWxlcwoKCiAgICAgIGlmIChzdHlsZSkgewogICAgICAgIHN0eWxlLmNhbGwodGhpcywgY3JlYXRlSW5qZWN0b3JTU1IoY29udGV4dCkpOwogICAgICB9IC8vIHJlZ2lzdGVyIGNvbXBvbmVudCBtb2R1bGUgaWRlbnRpZmllciBmb3IgYXN5bmMgY2h1bmsgaW5mZXJlbmNlCgoKICAgICAgaWYgKGNvbnRleHQgJiYgY29udGV4dC5fcmVnaXN0ZXJlZENvbXBvbmVudHMpIHsKICAgICAgICBjb250ZXh0Ll9yZWdpc3RlcmVkQ29tcG9uZW50cy5hZGQobW9kdWxlSWRlbnRpZmllcik7CiAgICAgIH0KICAgIH07IC8vIHVzZWQgYnkgc3NyIGluIGNhc2UgY29tcG9uZW50IGlzIGNhY2hlZCBhbmQgYmVmb3JlQ3JlYXRlCiAgICAvLyBuZXZlciBnZXRzIGNhbGxlZAoKCiAgICBvcHRpb25zLl9zc3JSZWdpc3RlciA9IGhvb2s7CiAgfSBlbHNlIGlmIChzdHlsZSkgewogICAgaG9vayA9IHNoYWRvd01vZGUgPyBmdW5jdGlvbiAoY29udGV4dCkgewogICAgICBzdHlsZS5jYWxsKHRoaXMsIGNyZWF0ZUluamVjdG9yU2hhZG93KGNvbnRleHQsIHRoaXMuJHJvb3QuJG9wdGlvbnMuc2hhZG93Um9vdCkpOwogICAgfSA6IGZ1bmN0aW9uIChjb250ZXh0KSB7CiAgICAgIHN0eWxlLmNhbGwodGhpcywgY3JlYXRlSW5qZWN0b3IoY29udGV4dCkpOwogICAgfTsKICB9CgogIGlmIChob29rKSB7CiAgICBpZiAob3B0aW9ucy5mdW5jdGlvbmFsKSB7CiAgICAgIC8vIHJlZ2lzdGVyIGZvciBmdW5jdGlvbmFsIGNvbXBvbmVudCBpbiB2dWUgZmlsZQogICAgICB2YXIgb3JpZ2luYWxSZW5kZXIgPSBvcHRpb25zLnJlbmRlcjsKCiAgICAgIG9wdGlvbnMucmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyV2l0aFN0eWxlSW5qZWN0aW9uKGgsIGNvbnRleHQpIHsKICAgICAgICBob29rLmNhbGwoY29udGV4dCk7CiAgICAgICAgcmV0dXJuIG9yaWdpbmFsUmVuZGVyKGgsIGNvbnRleHQpOwogICAgICB9OwogICAgfSBlbHNlIHsKICAgICAgLy8gaW5qZWN0IGNvbXBvbmVudCByZWdpc3RyYXRpb24gYXMgYmVmb3JlQ3JlYXRlIGhvb2sKICAgICAgdmFyIGV4aXN0aW5nID0gb3B0aW9ucy5iZWZvcmVDcmVhdGU7CiAgICAgIG9wdGlvbnMuYmVmb3JlQ3JlYXRlID0gZXhpc3RpbmcgPyBbXS5jb25jYXQoZXhpc3RpbmcsIGhvb2spIDogW2hvb2tdOwogICAgfQogIH0KCiAgcmV0dXJuIHNjcmlwdDsKfQovKiBzY3JpcHQgKi8KCgp2YXIgX192dWVfc2NyaXB0X18kQyA9IGxhYmVsUmVuZGVyZXI7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kQyA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF92bS5sYXlvdXQudmlzaWJsZSA/IF9jKCd2LWxhYmVsJywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5sYWJlbC5yb290CiAgfSwgW192bS5fdigiXG4gICIgKyBfdm0uX3MoX3ZtLnRyYW5zbGF0ZWRMYWJlbCkgKyAiXG4iKV0pIDogX3ZtLl9lKCk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kQyA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyRDID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJEMgPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRDID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJEMgPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJEMgPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJEMsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRDCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyRDLCBfX3Z1ZV9zY3JpcHRfXyRDLCBfX3Z1ZV9zY29wZV9pZF9fJEMsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRDLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJEMsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBzY3JpcHQkMyA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ3ZhbGlkYXRpb24tYmFkZ2UnLAogIGNvbXBvbmVudHM6IHsKICAgIFZCYWRnZTogbGliLlZCYWRnZSwKICAgIFZUb29sdGlwOiBsaWIuVlRvb2x0aXAKICB9LAogIHByb3BzOiB7CiAgICBlcnJvcnM6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IEFycmF5CiAgICB9LAogICAgYm9yZGVyZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfSwKICAgIGNvbG9yOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnZXJyb3InCiAgICB9LAogICAgaW5saW5lOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgIH0sCiAgICBvZmZzZXRYOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgICJkZWZhdWx0IjogdW5kZWZpbmVkCiAgICB9LAogICAgb2Zmc2V0WTogewogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLAogICAgICAiZGVmYXVsdCI6IHVuZGVmaW5lZAogICAgfSwKICAgIG92ZXJsYXA6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHRvb2x0aXBNZXNzYWdlczogZnVuY3Rpb24gdG9vbHRpcE1lc3NhZ2VzKCkgewogICAgICB2YXIgZXJyb3IgPSBbXTsKCiAgICAgIHZhciBfaXRlcmF0b3IgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLmVycm9ycyksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICB2YXIgZXJyb3JPYmplY3QgPSBlOwogICAgICAgICAgdmFyIGluZGV4ID0gZmluZEluZGV4X19kZWZhdWx0WyJkZWZhdWx0Il0oZXJyb3IsIHsKICAgICAgICAgICAgc2NoZW1hUGF0aDogZXJyb3JPYmplY3Quc2NoZW1hUGF0aAogICAgICAgICAgfSk7CgogICAgICAgICAgaWYgKGVycm9yT2JqZWN0Lm1lc3NhZ2UpIHsKICAgICAgICAgICAgaWYgKGluZGV4ID09IC0xKSB7CiAgICAgICAgICAgICAgZXJyb3IucHVzaCh7CiAgICAgICAgICAgICAgICBzY2hlbWFQYXRoOiBlcnJvck9iamVjdC5zY2hlbWFQYXRoLAogICAgICAgICAgICAgICAgaW5zdGFuY2VQYXRoOiBlcnJvck9iamVjdC5pbnN0YW5jZVBhdGgsCiAgICAgICAgICAgICAgICBsYWJlbHM6IFtjb3JlLmNyZWF0ZUxhYmVsRGVzY3JpcHRpb25Gcm9tKGNvcmUuY3JlYXRlQ29udHJvbEVsZW1lbnQoZXJyb3JPYmplY3QuaW5zdGFuY2VQYXRoKSwgZXJyb3JPYmplY3Quc2NoZW1hKS50ZXh0XSwKICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yT2JqZWN0Lm1lc3NhZ2UKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBlcnJvcltpbmRleF0ubGFiZWxzLnB1c2goY29yZS5jcmVhdGVMYWJlbERlc2NyaXB0aW9uRnJvbShjb3JlLmNyZWF0ZUNvbnRyb2xFbGVtZW50KGVycm9yT2JqZWN0Lmluc3RhbmNlUGF0aCksIGVycm9yT2JqZWN0LnNjaGVtYSkudGV4dCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGVycm9yLm1hcChmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiB2LmxhYmVscy5qb2luKCcsJykgKyAnOiAnICsgdi5tZXNzYWdlOwogICAgICB9KTsKICAgIH0KICB9Cn0pOwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRCID0gc2NyaXB0JDM7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kQiA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdkaXYnLCBbX3ZtLmVycm9ycy5sZW5ndGggPiAwID8gX2MoJ3YtdG9vbHRpcCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJib3R0b20iOiAiIgogICAgfSwKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKHJlZikgewogICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgcmV0dXJuIFtfYygndi1iYWRnZScsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJjb2xvciI6IF92bS5jb2xvciwKICAgICAgICAgICAgImJvcmRlcmVkIjogX3ZtLmJvcmRlcmVkLAogICAgICAgICAgICAiaW5saW5lIjogX3ZtLmlubGluZSwKICAgICAgICAgICAgIm9mZnNldFgiOiBfdm0ub2Zmc2V0WCwKICAgICAgICAgICAgIm9mZnNldFkiOiBfdm0ub2Zmc2V0WSwKICAgICAgICAgICAgIm92ZXJsYXAiOiBfdm0ub3ZlcmxhcAogICAgICAgICAgfSwKICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAgICAgICAga2V5OiAiYmFkZ2UiLAogICAgICAgICAgICBmbjogZnVuY3Rpb24gZm4oKSB7CiAgICAgICAgICAgICAgcmV0dXJuIFtfdm0uX3YoIlxuICAgICAgICAgICIgKyBfdm0uX3MoX3ZtLmVycm9ycy5sZW5ndGgpICsgIlxuICAgICAgICAiKV07CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHByb3h5OiB0cnVlCiAgICAgICAgICB9XSwgbnVsbCwgdHJ1ZSkKICAgICAgICB9LCBbX3ZtLl92KCIgIiksIF9jKCdkaXYnLCBfdm0uX2coe30sIG9uVG9vbHRpcCksIFtfdm0uX3QoImRlZmF1bHQiKV0sIDIpXSldOwogICAgICB9CiAgICB9XSwgbnVsbCwgdHJ1ZSkKICB9LCBbX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiVmFsaWRhdGlvbiBFcnJvcnMiKV0pLCBfdm0uX3YoIiAiKSwgX3ZtLl9sKF92bS50b29sdGlwTWVzc2FnZXMsIGZ1bmN0aW9uIChtZXNzYWdlLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdwJywgewogICAgICBrZXk6ICIiICsgaW5kZXgsCiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIKICAgIH0sIFtfdm0uX3YoIlxuICAgICAgIiArIF92bS5fcyhtZXNzYWdlKSArICJcbiAgICAiKV0pOwogIH0pXSwgMikgOiBfdm0uX3QoImRlZmF1bHQiKV0sIDIpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJEIgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kQiA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRCID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kQiA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRCID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRCID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRCLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kQgp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kQiwgX192dWVfc2NyaXB0X18kQiwgX192dWVfc2NvcGVfaWRfXyRCLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kQiwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRCLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgc2NyaXB0JDIgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICd2YWxpZGF0aW9uLWljb24nLAogIGNvbXBvbmVudHM6IHsKICAgIFZhbGlkYXRpb25CYWRnZTogX192dWVfY29tcG9uZW50X18kQiwKICAgIFZJY29uOiBsaWIuVkljb24KICB9LAogIHByb3BzOiB7CiAgICBlcnJvcnM6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IEFycmF5CiAgICB9CiAgfQp9KTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kQSA9IHNjcmlwdCQyOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJEEgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0uZXJyb3JzICYmIF92bS5lcnJvcnMubGVuZ3RoID4gMCA/IF9jKCd2YWxpZGF0aW9uLWJhZGdlJywgewogICAgYXR0cnM6IHsKICAgICAgImVycm9ycyI6IF92bS5lcnJvcnMKICAgIH0KICB9LCBbX2MoJ3YtaWNvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xvciI6ICJlcnJvciIKICAgIH0KICB9LCBbX3ZtLl92KCJtZGktYWxlcnQtY2lyY2xlLW91dGxpbmUiKV0pXSwgMSkgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRBID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJEEgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kQSA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJEEgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kQSA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kQSA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kQSwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJEEKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJEEsIF9fdnVlX3NjcmlwdF9fJEEsIF9fdnVlX3Njb3BlX2lkX18kQSwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJEEsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kQSwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciRzID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnbGlzdC13aXRoLWRldGFpbC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyLAogICAgVkxpc3Q6IGxpYi5WTGlzdCwKICAgIFZMaXN0SXRlbUdyb3VwOiBsaWIuVkxpc3RJdGVtR3JvdXAsCiAgICBWTGlzdEl0ZW06IGxpYi5WTGlzdEl0ZW0sCiAgICBWTGlzdEl0ZW1UaXRsZTogbGliLlZMaXN0SXRlbVRpdGxlLAogICAgVkxpc3RJdGVtQ29udGVudDogbGliLlZMaXN0SXRlbUNvbnRlbnQsCiAgICBWTGlzdEl0ZW1BY3Rpb246IGxpYi5WTGlzdEl0ZW1BY3Rpb24sCiAgICBWTGlzdEl0ZW1BdmF0YXI6IGxpYi5WTGlzdEl0ZW1BdmF0YXIsCiAgICBWQXZhdGFyOiBsaWIuVkF2YXRhciwKICAgIFZSb3c6IGxpYi5WUm93LAogICAgVkNvbDogbGliLlZDb2wsCiAgICBWVG9vbGJhcjogbGliLlZUb29sYmFyLAogICAgVlRvb2xiYXJUaXRsZTogbGliLlZUb29sYmFyVGl0bGUsCiAgICBWVG9vbHRpcDogbGliLlZUb29sdGlwLAogICAgVkJ0bjogbGliLlZCdG4sCiAgICBWSWNvbjogbGliLlZJY29uLAogICAgVlNwYWNlcjogbGliLlZTcGFjZXIsCiAgICBWRXhwYW5zaW9uUGFuZWxzOiBsaWIuVkV4cGFuc2lvblBhbmVscywKICAgIFZFeHBhbnNpb25QYW5lbDogbGliLlZFeHBhbnNpb25QYW5lbCwKICAgIFZFeHBhbnNpb25QYW5lbEhlYWRlcjogbGliLlZFeHBhbnNpb25QYW5lbEhlYWRlciwKICAgIFZFeHBhbnNpb25QYW5lbENvbnRlbnQ6IGxpYi5WRXhwYW5zaW9uUGFuZWxDb250ZW50LAogICAgVkNvbnRhaW5lcjogbGliLlZDb250YWluZXIsCiAgICBWVmlydHVhbFNjcm9sbDogbGliLlZWaXJ0dWFsU2Nyb2xsLAogICAgVmFsaWRhdGlvbkljb246IF9fdnVlX2NvbXBvbmVudF9fJEEsCiAgICBWYWxpZGF0aW9uQmFkZ2U6IF9fdnVlX2NvbXBvbmVudF9fJEIKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgdmFyIHNlbGVjdGVkSW5kZXggPSBjb21wb3NpdGlvbkFwaS5yZWYodW5kZWZpbmVkKTsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgdXNlVnVldGlmeUFycmF5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0FycmF5Q29udHJvbChwcm9wcykpKSwge30sIHsKICAgICAgc2VsZWN0ZWRJbmRleDogc2VsZWN0ZWRJbmRleAogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgbm9EYXRhOiBmdW5jdGlvbiBub0RhdGEoKSB7CiAgICAgIHJldHVybiAhdGhpcy5jb250cm9sLmRhdGEgfHwgdGhpcy5jb250cm9sLmRhdGEubGVuZ3RoID09PSAwOwogICAgfSwKICAgIGZvdW5kVUlTY2hlbWE6IGZ1bmN0aW9uIGZvdW5kVUlTY2hlbWEoKSB7CiAgICAgIHJldHVybiBjb3JlLmZpbmRVSVNjaGVtYSh0aGlzLmNvbnRyb2wudWlzY2hlbWFzLCB0aGlzLmNvbnRyb2wuc2NoZW1hLCB0aGlzLmNvbnRyb2wudWlzY2hlbWEuc2NvcGUsIHRoaXMuY29udHJvbC5wYXRoLCB1bmRlZmluZWQsIHRoaXMuY29udHJvbC51aXNjaGVtYSk7CiAgICB9LAogICAgYXJyYXlTY2hlbWE6IGZ1bmN0aW9uIGFycmF5U2NoZW1hKCkgewogICAgICByZXR1cm4gY29yZS5SZXNvbHZlLnNjaGVtYSh0aGlzLmNvbnRyb2wucm9vdFNjaGVtYSwgdGhpcy5jb250cm9sLnVpc2NoZW1hLnNjb3BlLCB0aGlzLmNvbnRyb2wucm9vdFNjaGVtYSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjb21wb3NlUGF0aHM6IGNvcmUuY29tcG9zZVBhdGhzLAogICAgY3JlYXRlRGVmYXVsdFZhbHVlOiBjb3JlLmNyZWF0ZURlZmF1bHRWYWx1ZSwKICAgIGFkZEJ1dHRvbkNsaWNrOiBmdW5jdGlvbiBhZGRCdXR0b25DbGljaygpIHsKICAgICAgdGhpcy5hZGRJdGVtKHRoaXMuY29udHJvbC5wYXRoLCBjb3JlLmNyZWF0ZURlZmF1bHRWYWx1ZSh0aGlzLmNvbnRyb2wuc2NoZW1hKSkoKTsKICAgIH0sCiAgICBtb3ZlVXBDbGljazogZnVuY3Rpb24gbW92ZVVwQ2xpY2soZXZlbnQsIHRvTW92ZSkgewogICAgICB2YXIgX3RoaXMkbW92ZVVwOwoKICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgIChfdGhpcyRtb3ZlVXAgPSB0aGlzLm1vdmVVcCkgPT09IG51bGwgfHwgX3RoaXMkbW92ZVVwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRtb3ZlVXAuY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdG9Nb3ZlKSgpOwogICAgfSwKICAgIG1vdmVEb3duQ2xpY2s6IGZ1bmN0aW9uIG1vdmVEb3duQ2xpY2soZXZlbnQsIHRvTW92ZSkgewogICAgICB2YXIgX3RoaXMkbW92ZURvd247CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgKF90aGlzJG1vdmVEb3duID0gdGhpcy5tb3ZlRG93bikgPT09IG51bGwgfHwgX3RoaXMkbW92ZURvd24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1vdmVEb3duLmNhbGwodGhpcywgdGhpcy5jb250cm9sLnBhdGgsIHRvTW92ZSkoKTsKICAgIH0sCiAgICByZW1vdmVJdGVtc0NsaWNrOiBmdW5jdGlvbiByZW1vdmVJdGVtc0NsaWNrKGV2ZW50LCB0b0RlbGV0ZSkgewogICAgICB2YXIgX3RoaXMkcmVtb3ZlSXRlbXM7CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgKF90aGlzJHJlbW92ZUl0ZW1zID0gdGhpcy5yZW1vdmVJdGVtcykgPT09IG51bGwgfHwgX3RoaXMkcmVtb3ZlSXRlbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHJlbW92ZUl0ZW1zLmNhbGwodGhpcywgdGhpcy5jb250cm9sLnBhdGgsIHRvRGVsZXRlKSgpOwogICAgfSwKICAgIGNoaWxkRXJyb3JzOiBmdW5jdGlvbiBjaGlsZEVycm9ycyhpbmRleCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMuY29udHJvbC5jaGlsZEVycm9ycy5maWx0ZXIoZnVuY3Rpb24gKGUpIHsKICAgICAgICByZXR1cm4gZS5pbnN0YW5jZVBhdGguc3RhcnRzV2l0aChfdGhpcy5jb21wb3NlUGF0aHMoX3RoaXMuY29udHJvbC5wYXRoLCAiIi5jb25jYXQoaW5kZXgpKSk7CiAgICAgIH0pOwogICAgfQogIH0KfSk7CnZhciBlbnRyeSR4ID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkcywKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoNCwgY29yZS5hbmQoY29yZS51aVR5cGVJcygnTGlzdFdpdGhEZXRhaWwnKSwgY29yZS5pc09iamVjdEFycmF5KSkKfTsKdmFyIGlzT2xkSUUgPSB0eXBlb2YgbmF2aWdhdG9yICE9PSAndW5kZWZpbmVkJyAmJiAvbXNpZSBbNi05XVxcYi8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpOwoKZnVuY3Rpb24gY3JlYXRlSW5qZWN0b3IoY29udGV4dCkgewogIHJldHVybiBmdW5jdGlvbiAoaWQsIHN0eWxlKSB7CiAgICByZXR1cm4gYWRkU3R5bGUoaWQsIHN0eWxlKTsKICB9Owp9Cgp2YXIgSEVBRDsKdmFyIHN0eWxlcyA9IHt9OwoKZnVuY3Rpb24gYWRkU3R5bGUoaWQsIGNzcykgewogIHZhciBncm91cCA9IGlzT2xkSUUgPyBjc3MubWVkaWEgfHwgJ2RlZmF1bHQnIDogaWQ7CiAgdmFyIHN0eWxlID0gc3R5bGVzW2dyb3VwXSB8fCAoc3R5bGVzW2dyb3VwXSA9IHsKICAgIGlkczogbmV3IFNldCgpLAogICAgc3R5bGVzOiBbXQogIH0pOwoKICBpZiAoIXN0eWxlLmlkcy5oYXMoaWQpKSB7CiAgICBzdHlsZS5pZHMuYWRkKGlkKTsKICAgIHZhciBjb2RlID0gY3NzLnNvdXJjZTsKCiAgICBpZiAoY3NzLm1hcCkgewogICAgICAvLyBodHRwczovL2RldmVsb3Blci5jaHJvbWUuY29tL2RldnRvb2xzL2RvY3MvamF2YXNjcmlwdC1kZWJ1Z2dpbmcKICAgICAgLy8gdGhpcyBtYWtlcyBzb3VyY2UgbWFwcyBpbnNpZGUgc3R5bGUgdGFncyB3b3JrIHByb3Blcmx5IGluIENocm9tZQogICAgICBjb2RlICs9ICdcbi8qIyBzb3VyY2VVUkw9JyArIGNzcy5tYXAuc291cmNlc1swXSArICcgKi8nOyAvLyBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vYS8yNjYwMzg3NQoKICAgICAgY29kZSArPSAnXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LCcgKyBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3MubWFwKSkpKSArICcgKi8nOwogICAgfQoKICAgIGlmICghc3R5bGUuZWxlbWVudCkgewogICAgICBzdHlsZS5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKTsKICAgICAgc3R5bGUuZWxlbWVudC50eXBlID0gJ3RleHQvY3NzJzsKICAgICAgaWYgKGNzcy5tZWRpYSkgc3R5bGUuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgY3NzLm1lZGlhKTsKCiAgICAgIGlmIChIRUFEID09PSB1bmRlZmluZWQpIHsKICAgICAgICBIRUFEID0gZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdOwogICAgICB9CgogICAgICBIRUFELmFwcGVuZENoaWxkKHN0eWxlLmVsZW1lbnQpOwogICAgfQoKICAgIGlmICgnc3R5bGVTaGVldCcgaW4gc3R5bGUuZWxlbWVudCkgewogICAgICBzdHlsZS5zdHlsZXMucHVzaChjb2RlKTsKICAgICAgc3R5bGUuZWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBzdHlsZS5zdHlsZXMuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xuJyk7CiAgICB9IGVsc2UgewogICAgICB2YXIgaW5kZXggPSBzdHlsZS5pZHMuc2l6ZSAtIDE7CiAgICAgIHZhciB0ZXh0Tm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNvZGUpOwogICAgICB2YXIgbm9kZXMgPSBzdHlsZS5lbGVtZW50LmNoaWxkTm9kZXM7CiAgICAgIGlmIChub2Rlc1tpbmRleF0pIHN0eWxlLmVsZW1lbnQucmVtb3ZlQ2hpbGQobm9kZXNbaW5kZXhdKTsKICAgICAgaWYgKG5vZGVzLmxlbmd0aCkgc3R5bGUuZWxlbWVudC5pbnNlcnRCZWZvcmUodGV4dE5vZGUsIG5vZGVzW2luZGV4XSk7ZWxzZSBzdHlsZS5lbGVtZW50LmFwcGVuZENoaWxkKHRleHROb2RlKTsKICAgIH0KICB9Cn0KLyogc2NyaXB0ICovCgoKdmFyIF9fdnVlX3NjcmlwdF9fJHogPSBjb250cm9sUmVuZGVyZXIkczsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyR6ID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX3ZtLmNvbnRyb2wudmlzaWJsZSA/IF9jKCd2LWNvbnRhaW5lcicsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMubGlzdFdpdGhEZXRhaWwucm9vdCwKICAgIGF0dHJzOiB7CiAgICAgICJmaWxsLWhlaWdodCI6ICIiCiAgICB9CiAgfSwgW19jKCd2LXJvdycsIFtfYygndi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInBhLTAiCiAgfSwgW19jKCd2LXRvb2xiYXInLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmxpc3RXaXRoRGV0YWlsLnRvb2xiYXIsCiAgICBhdHRyczogewogICAgICAiZmxhdCI6ICIiCiAgICB9CiAgfSwgW19jKCd2LXRvb2xiYXItdGl0bGUnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmxpc3RXaXRoRGV0YWlsLmxhYmVsCiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmNvbXB1dGVkTGFiZWwpKV0pLCBfdm0uX3YoIiAiKSwgX3ZtLmNvbnRyb2wuY2hpbGRFcnJvcnMubGVuZ3RoID4gMCA/IF9jKCd2YWxpZGF0aW9uLWljb24nLCB7CiAgICBhdHRyczogewogICAgICAiZXJyb3JzIjogX3ZtLmNvbnRyb2wuY2hpbGRFcnJvcnMKICAgIH0KICB9KSA6IF92bS5fZSgpLCBfdm0uX3YoIiAiKSwgX2MoJ3Ytc3BhY2VyJyksIF92bS5fdigiICIpLCBfYygndi10b29sdGlwJywgewogICAgYXR0cnM6IHsKICAgICAgImJvdHRvbSI6ICIiCiAgICB9LAogICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICBrZXk6ICJhY3RpdmF0b3IiLAogICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgdmFyIG9uVG9vbHRpcCA9IHJlZi5vbjsKICAgICAgICByZXR1cm4gW19jKCd2LWJ0bicsIF92bS5fZyh7CiAgICAgICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmxpc3RXaXRoRGV0YWlsLmFkZEJ1dHRvbiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJmYWIiOiAiIiwKICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgInNtYWxsIjogIiIsCiAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkFkZCB0byAiICsgX3ZtLmNvbnRyb2wubGFiZWwsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkIHx8IF92bS5hcHBsaWVkT3B0aW9ucy5yZXN0cmljdCAmJiBfdm0uYXJyYXlTY2hlbWEgIT09IHVuZGVmaW5lZCAmJiBfdm0uYXJyYXlTY2hlbWEubWF4SXRlbXMgIT09IHVuZGVmaW5lZCAmJiBfdm0uY29udHJvbC5kYXRhLmxlbmd0aCA+PSBfdm0uYXJyYXlTY2hlbWEubWF4SXRlbXMKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2xpY2siOiBfdm0uYWRkQnV0dG9uQ2xpY2sKICAgICAgICAgIH0KICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIFtfdm0uX3YoIm1kaS1wbHVzIildKV0sIDEpXTsKICAgICAgfQogICAgfV0sIG51bGwsIGZhbHNlLCAzNjkzMzE4NjA5KQogIH0sIFtfdm0uX3YoIlxuICAgICAgICAgICIgKyBfdm0uX3MoIkFkZCB0byAiICsgX3ZtLmNvbnRyb2wubGFiZWwpICsgIlxuICAgICAgICAiKV0pXSwgMSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX3ZtLm5vRGF0YSA/IF9jKCd2LXJvdycsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMubGlzdFdpdGhEZXRhaWwubm9EYXRhCiAgfSwgW19jKCd2LWNvbCcsIFtfdm0uX3YoIk5vIGRhdGEiKV0pXSwgMSkgOiBfYygndi1yb3cnLCBbX2MoJ3YtY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJzaHJpbmsgcGEtMCIKICB9LCBbX2MoJ3YtbGlzdC1pdGVtLWdyb3VwJywgewogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5zZWxlY3RlZEluZGV4LAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLnNlbGVjdGVkSW5kZXggPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJzZWxlY3RlZEluZGV4IgogICAgfQogIH0sIFtfYygndi12aXJ0dWFsLXNjcm9sbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpdGVtcyI6IF92bS5jb250cm9sLmRhdGEsCiAgICAgICJpdGVtLWhlaWdodCI6IDY0LAogICAgICAiYmVuY2giOiAiNCIsCiAgICAgICJtaW4taGVpZ2h0IjogIiIgKyA0ICogNjQsCiAgICAgICJtYXgtaGVpZ2h0IjogIiIgKyA2ICogNjQsCiAgICAgICJtaW4td2lkdGgiOiBfdm0uYXBwbGllZE9wdGlvbnMuc2hvd1NvcnRCdXR0b25zID8gMzUwIDogMjUwLAogICAgICAibWF4LXdpZHRoIjogIjM1MCIKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgdmFyIGluZGV4ID0gcmVmLmluZGV4OwogICAgICAgIHJldHVybiBbX2MoJ3YtbGlzdC1pdGVtJywgewogICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5saXN0V2l0aERldGFpbC5pdGVtLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImRlbnNlIjogIiIsCiAgICAgICAgICAgICJ2YWx1ZSI6IGluZGV4CiAgICAgICAgICB9CiAgICAgICAgfSwgW19jKCd2LWxpc3QtaXRlbS1hdmF0YXInLCB7CiAgICAgICAgICBzdGF0aWNDbGFzczogIm1hLTAiLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiSW5kZXgiLAogICAgICAgICAgICAic2l6ZSI6ICI2NCIsCiAgICAgICAgICAgICJ0aWxlIjogIiIsCiAgICAgICAgICAgICJjb2xvciI6ICJyZ2JhKDAsMCwwLDApIgogICAgICAgICAgfQogICAgICAgIH0sIFtfYygndmFsaWRhdGlvbi1iYWRnZScsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJvdmVybGFwIjogIiIsCiAgICAgICAgICAgICJib3JkZXJlZCI6ICIiLAogICAgICAgICAgICAiZXJyb3JzIjogX3ZtLmNoaWxkRXJyb3JzKGluZGV4KQogICAgICAgICAgfQogICAgICAgIH0sIFtfYygndi1hdmF0YXInLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAic2l6ZSI6ICI0MCIsCiAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkluZGV4IiwKICAgICAgICAgICAgImNvbG9yIjogImluZm8iCiAgICAgICAgICB9CiAgICAgICAgfSwgW19jKCdzcGFuJywgewogICAgICAgICAgc3RhdGljQ2xhc3M6ICJpbmZvLS10ZXh0IHRleHQtLWxpZ2h0ZW4tNSIKICAgICAgICB9LCBbX3ZtLl92KF92bS5fcyhpbmRleCArIDEpKV0pXSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtbGlzdC1pdGVtLWNvbnRlbnQnLCBbX2MoJ3YtbGlzdC1pdGVtLXRpdGxlJywgW19jKCd2LXRvb2x0aXAnLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAiYm90dG9tIjogIiIKICAgICAgICAgIH0sCiAgICAgICAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgICAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgICAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgICAgICAgIHJldHVybiBbX2MoJ3NwYW4nLCBfdm0uX2coewogICAgICAgICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5saXN0V2l0aERldGFpbC5pdGVtTGFiZWwKICAgICAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgICAgICAgICIgKyBfdm0uX3MoX3ZtLmNoaWxkTGFiZWxGb3JJbmRleChpbmRleCkpKV0pXTsKICAgICAgICAgICAgfQogICAgICAgICAgfV0sIG51bGwsIHRydWUpCiAgICAgICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICAgICIgKyBfdm0uX3MoX3ZtLmNoaWxkTGFiZWxGb3JJbmRleChpbmRleCkpICsgIlxuICAgICAgICAgICAgICAgICAgIildKV0sIDEpXSwgMSksIF92bS5fdigiICIpLCBfdm0uYXBwbGllZE9wdGlvbnMuc2hvd1NvcnRCdXR0b25zID8gX2MoJ3YtbGlzdC1pdGVtLWFjdGlvbicsIFtfYygndi10b29sdGlwJywgewogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImJvdHRvbSI6ICIiCiAgICAgICAgICB9LAogICAgICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICAgICAgICBrZXk6ICJhY3RpdmF0b3IiLAogICAgICAgICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgICAgICAgdmFyIG9uVG9vbHRpcCA9IHJlZi5vbjsKICAgICAgICAgICAgICByZXR1cm4gW19jKCd2LWJ0bicsIF92bS5fZyh7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1hLTAiLAogICAgICAgICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5saXN0V2l0aERldGFpbC5pdGVtTW92ZVVwLAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAgICAgICAidGV4dCI6ICIiLAogICAgICAgICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiTW92ZSB1cCIsCiAgICAgICAgICAgICAgICAgICJkaXNhYmxlZCI6IGluZGV4IDw9IDAgfHwgIV92bS5jb250cm9sLmVuYWJsZWQKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBuYXRpdmVPbjogewogICAgICAgICAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm1vdmVVcENsaWNrKCRldmVudCwgaW5kZXgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwgb25Ub29sdGlwKSwgW19jKCd2LWljb24nLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm5vdHJhbnNsYXRlIgogICAgICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1hcnJvdy11cCIpXSldLCAxKV07CiAgICAgICAgICAgIH0KICAgICAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgICAgIH0sIFtfdm0uX3YoIlxuICAgICAgICAgICAgICAgICAgTW92ZSBVcFxuICAgICAgICAgICAgICAgICIpXSldLCAxKSA6IF92bS5fZSgpLCBfdm0uX3YoIiAiKSwgX3ZtLmFwcGxpZWRPcHRpb25zLnNob3dTb3J0QnV0dG9ucyA/IF9jKCd2LWxpc3QtaXRlbS1hY3Rpb24nLCBbX2MoJ3YtdG9vbHRpcCcsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJib3R0b20iOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAgICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgICAgICAgZm46IGZ1bmN0aW9uIGZuKHJlZikgewogICAgICAgICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgICAgICAgcmV0dXJuIFtfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYS0wIiwKICAgICAgICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMubGlzdFdpdGhEZXRhaWwuaXRlbU1vdmVEb3duLAogICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAgICAgICAidGV4dCI6ICIiLAogICAgICAgICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiTW92ZSBkb3duIiwKICAgICAgICAgICAgICAgICAgImRpc2FibGVkIjogaW5kZXggPj0gX3ZtLmNvbnRyb2wuZGF0YS5sZW5ndGggLSAxIHx8ICFfdm0uY29udHJvbC5lbmFibGVkCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5tb3ZlRG93bkNsaWNrKCRldmVudCwgaW5kZXgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwgb25Ub29sdGlwKSwgW19jKCd2LWljb24nLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm5vdHJhbnNsYXRlIgogICAgICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1hcnJvdy1kb3duIildKV0sIDEpXTsKICAgICAgICAgICAgfQogICAgICAgICAgfV0sIG51bGwsIHRydWUpCiAgICAgICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICBNb3ZlIERvd25cbiAgICAgICAgICAgICAgICAiKV0pXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLl92KCIgIiksIF9jKCd2LWxpc3QtaXRlbS1hY3Rpb24nLCBbX2MoJ3YtdG9vbHRpcCcsIHsKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJib3R0b20iOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAgICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgICAgICAgZm46IGZ1bmN0aW9uIGZuKHJlZikgewogICAgICAgICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgICAgICAgcmV0dXJuIFtfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtYS0wIiwKICAgICAgICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMubGlzdFdpdGhEZXRhaWwuaXRlbURlbGV0ZSwKICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICJmYWIiOiAiIiwKICAgICAgICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgICAgICAgInNtYWxsIjogIiIsCiAgICAgICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkRlbGV0ZSIsCiAgICAgICAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkIHx8IF92bS5hcHBsaWVkT3B0aW9ucy5yZXN0cmljdCAmJiBfdm0uYXJyYXlTY2hlbWEgIT09IHVuZGVmaW5lZCAmJiBfdm0uYXJyYXlTY2hlbWEubWluSXRlbXMgIT09IHVuZGVmaW5lZCAmJiBfdm0uY29udHJvbC5kYXRhLmxlbmd0aCA8PSBfdm0uYXJyYXlTY2hlbWEubWluSXRlbXMKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBuYXRpdmVPbjogewogICAgICAgICAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlbW92ZUl0ZW1zQ2xpY2soJGV2ZW50LCBbaW5kZXhdKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sIG9uVG9vbHRpcCksIFtfYygndi1pY29uJywgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgICAgICB9LCBbX3ZtLl92KCJtZGktZGVsZXRlIildKV0sIDEpXTsKICAgICAgICAgICAgfQogICAgICAgICAgfV0sIG51bGwsIHRydWUpCiAgICAgICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICBEZWxldGVcbiAgICAgICAgICAgICAgICAiKV0pXSwgMSldLCAxKV07CiAgICAgIH0KICAgIH1dLCBudWxsLCBmYWxzZSwgMzQ5OTcyNDE4MSkKICB9KV0sIDEpXSwgMSksIF92bS5fdigiICIpLCBfdm0uc2VsZWN0ZWRJbmRleCA9PT0gdW5kZWZpbmVkID8gX2MoJ3YtY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJncm93IgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1oNiIKICB9LCBbX3ZtLl92KCJObyBTZWxlY3Rpb24iKV0pXSkgOiBfYygndi1jb2wnLCB7CiAgICAiY2xhc3MiOiAiZ3JvdyAiICsgX3ZtLnN0eWxlcy5saXN0V2l0aERldGFpbC5pdGVtQ29udGVudAogIH0sIFtfYygnZGlzcGF0Y2gtcmVuZGVyZXInLCB7CiAgICBhdHRyczogewogICAgICAic2NoZW1hIjogX3ZtLmNvbnRyb2wuc2NoZW1hLAogICAgICAidWlzY2hlbWEiOiBfdm0uZm91bmRVSVNjaGVtYSwKICAgICAgInBhdGgiOiBfdm0uY29tcG9zZVBhdGhzKF92bS5jb250cm9sLnBhdGgsICIiICsgX3ZtLnNlbGVjdGVkSW5kZXgpLAogICAgICAiZW5hYmxlZCI6IF92bS5jb250cm9sLmVuYWJsZWQsCiAgICAgICJyZW5kZXJlcnMiOiBfdm0uY29udHJvbC5yZW5kZXJlcnMsCiAgICAgICJjZWxscyI6IF92bS5jb250cm9sLmNlbGxzCiAgICB9CiAgfSldLCAxKV0sIDEpXSwgMSkgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyR6ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJHogPSBmdW5jdGlvbiBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18oaW5qZWN0KSB7CiAgaWYgKCFpbmplY3QpIHJldHVybjsKICBpbmplY3QoImRhdGEtdi0xNGJmYWNkYl8wIiwgewogICAgc291cmNlOiAiLm5vdHJhbnNsYXRlW2RhdGEtdi0xNGJmYWNkYl17dHJhbnNmb3JtOm5vbmUhaW1wb3J0YW50fSIsCiAgICBtYXA6IHVuZGVmaW5lZCwKICAgIG1lZGlhOiB1bmRlZmluZWQKICB9KTsKfTsKLyogc2NvcGVkICovCgoKdmFyIF9fdnVlX3Njb3BlX2lkX18keiA9ICJkYXRhLXYtMTRiZmFjZGIiOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18keiA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyR6ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18keiA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18keiwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHoKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJHosIF9fdnVlX3NjcmlwdF9fJHosIF9fdnVlX3Njb3BlX2lkX18keiwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHosIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18keiwgZmFsc2UsIGNyZWF0ZUluamVjdG9yLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgYWRkaXRpb25hbFJlbmRlcmVycyA9IFtlbnRyeSR5LCBlbnRyeSR4XTsKdmFyIGNvbnRyb2xSZW5kZXJlciRyID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnYXJyYXktbGF5b3V0LXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBEaXNwYXRjaFJlbmRlcmVyOiB2dWUyLkRpc3BhdGNoUmVuZGVyZXIsCiAgICBWQ2FyZDogbGliLlZDYXJkLAogICAgVkNhcmRUaXRsZTogbGliLlZDYXJkVGl0bGUsCiAgICBWQ2FyZFRleHQ6IGxpYi5WQ2FyZFRleHQsCiAgICBWQXZhdGFyOiBsaWIuVkF2YXRhciwKICAgIFZSb3c6IGxpYi5WUm93LAogICAgVkNvbDogbGliLlZDb2wsCiAgICBWVG9vbGJhcjogbGliLlZUb29sYmFyLAogICAgVlRvb2xiYXJUaXRsZTogbGliLlZUb29sYmFyVGl0bGUsCiAgICBWVG9vbHRpcDogbGliLlZUb29sdGlwLAogICAgVkljb246IGxpYi5WSWNvbiwKICAgIFZCdG46IGxpYi5WQnRuLAogICAgVlNwYWNlcjogbGliLlZTcGFjZXIsCiAgICBWRXhwYW5zaW9uUGFuZWxzOiBsaWIuVkV4cGFuc2lvblBhbmVscywKICAgIFZFeHBhbnNpb25QYW5lbDogbGliLlZFeHBhbnNpb25QYW5lbCwKICAgIFZFeHBhbnNpb25QYW5lbEhlYWRlcjogbGliLlZFeHBhbnNpb25QYW5lbEhlYWRlciwKICAgIFZFeHBhbnNpb25QYW5lbENvbnRlbnQ6IGxpYi5WRXhwYW5zaW9uUGFuZWxDb250ZW50LAogICAgVkNvbnRhaW5lcjogbGliLlZDb250YWluZXIsCiAgICBWYWxpZGF0aW9uSWNvbjogX192dWVfY29tcG9uZW50X18kQSwKICAgIFZhbGlkYXRpb25CYWRnZTogX192dWVfY29tcG9uZW50X18kQgogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUFycmF5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0FycmF5Q29udHJvbChwcm9wcykpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIG5vRGF0YTogZnVuY3Rpb24gbm9EYXRhKCkgewogICAgICByZXR1cm4gIXRoaXMuY29udHJvbC5kYXRhIHx8IHRoaXMuY29udHJvbC5kYXRhLmxlbmd0aCA9PT0gMDsKICAgIH0sCiAgICBmb3VuZFVJU2NoZW1hOiBmdW5jdGlvbiBmb3VuZFVJU2NoZW1hKCkgewogICAgICByZXR1cm4gY29yZS5maW5kVUlTY2hlbWEodGhpcy5jb250cm9sLnVpc2NoZW1hcywgdGhpcy5jb250cm9sLnNjaGVtYSwgdGhpcy5jb250cm9sLnVpc2NoZW1hLnNjb3BlLCB0aGlzLmNvbnRyb2wucGF0aCwgdW5kZWZpbmVkLCB0aGlzLmNvbnRyb2wudWlzY2hlbWEsIHRoaXMuY29udHJvbC5yb290U2NoZW1hKTsKICAgIH0sCiAgICBhcnJheVNjaGVtYTogZnVuY3Rpb24gYXJyYXlTY2hlbWEoKSB7CiAgICAgIHJldHVybiBjb3JlLlJlc29sdmUuc2NoZW1hKHRoaXMuY29udHJvbC5yb290U2NoZW1hLCB0aGlzLmNvbnRyb2wudWlzY2hlbWEuc2NvcGUsIHRoaXMuY29udHJvbC5yb290U2NoZW1hKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNvbXBvc2VQYXRoczogY29yZS5jb21wb3NlUGF0aHMsCiAgICBjcmVhdGVEZWZhdWx0VmFsdWU6IGNvcmUuY3JlYXRlRGVmYXVsdFZhbHVlLAogICAgYWRkQnV0dG9uQ2xpY2s6IGZ1bmN0aW9uIGFkZEJ1dHRvbkNsaWNrKCkgewogICAgICB0aGlzLmFkZEl0ZW0odGhpcy5jb250cm9sLnBhdGgsIGNvcmUuY3JlYXRlRGVmYXVsdFZhbHVlKHRoaXMuY29udHJvbC5zY2hlbWEpKSgpOwogICAgfSwKICAgIG1vdmVVcENsaWNrOiBmdW5jdGlvbiBtb3ZlVXBDbGljayhldmVudCwgdG9Nb3ZlKSB7CiAgICAgIHZhciBfdGhpcyRtb3ZlVXA7CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgKF90aGlzJG1vdmVVcCA9IHRoaXMubW92ZVVwKSA9PT0gbnVsbCB8fCBfdGhpcyRtb3ZlVXAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1vdmVVcC5jYWxsKHRoaXMsIHRoaXMuY29udHJvbC5wYXRoLCB0b01vdmUpKCk7CiAgICB9LAogICAgbW92ZURvd25DbGljazogZnVuY3Rpb24gbW92ZURvd25DbGljayhldmVudCwgdG9Nb3ZlKSB7CiAgICAgIHZhciBfdGhpcyRtb3ZlRG93bjsKCiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAoX3RoaXMkbW92ZURvd24gPSB0aGlzLm1vdmVEb3duKSA9PT0gbnVsbCB8fCBfdGhpcyRtb3ZlRG93biA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkbW92ZURvd24uY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdG9Nb3ZlKSgpOwogICAgfSwKICAgIHJlbW92ZUl0ZW1zQ2xpY2s6IGZ1bmN0aW9uIHJlbW92ZUl0ZW1zQ2xpY2soZXZlbnQsIHRvRGVsZXRlKSB7CiAgICAgIHZhciBfdGhpcyRyZW1vdmVJdGVtczsKCiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAoX3RoaXMkcmVtb3ZlSXRlbXMgPSB0aGlzLnJlbW92ZUl0ZW1zKSA9PT0gbnVsbCB8fCBfdGhpcyRyZW1vdmVJdGVtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkcmVtb3ZlSXRlbXMuY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdG9EZWxldGUpKCk7CiAgICB9LAogICAgY2hpbGRFcnJvcnM6IGZ1bmN0aW9uIGNoaWxkRXJyb3JzKGluZGV4KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5jb250cm9sLmNoaWxkRXJyb3JzLmZpbHRlcihmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBlLmluc3RhbmNlUGF0aC5zdGFydHNXaXRoKF90aGlzLmNvbXBvc2VQYXRocyhfdGhpcy5jb250cm9sLnBhdGgsICIiLmNvbmNhdChpbmRleCkpKTsKICAgICAgfSk7CiAgICB9CiAgfQp9KTsKdmFyIGVudHJ5JHcgPSB7CiAgcmVuZGVyZXI6IGNvbnRyb2xSZW5kZXJlciRyLAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCg0LCBjb3JlLmlzT2JqZWN0QXJyYXlXaXRoTmVzdGluZykKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18keSA9IGNvbnRyb2xSZW5kZXJlciRyOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJHkgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0uY29udHJvbC52aXNpYmxlID8gX2MoJ3YtY2FyZCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0LnJvb3QsCiAgICBhdHRyczogewogICAgICAiZWxldmF0aW9uIjogIjAiCiAgICB9CiAgfSwgW19jKCd2LWNhcmQtdGl0bGUnLCBbX2MoJ3YtdG9vbGJhcicsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0LnRvb2xiYXIsCiAgICBhdHRyczogewogICAgICAiZmxhdCI6ICIiCiAgICB9CiAgfSwgW19jKCd2LXRvb2xiYXItdGl0bGUnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5sYWJlbAogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5jb21wdXRlZExhYmVsKSldKSwgX3ZtLl92KCIgIiksIF92bS5jb250cm9sLmNoaWxkRXJyb3JzLmxlbmd0aCA+IDAgPyBfYygndmFsaWRhdGlvbi1pY29uJywgewogICAgYXR0cnM6IHsKICAgICAgImVycm9ycyI6IF92bS5jb250cm9sLmNoaWxkRXJyb3JzCiAgICB9CiAgfSkgOiBfdm0uX2UoKSwgX3ZtLl92KCIgIiksIF9jKCd2LXNwYWNlcicpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtdG9vbHRpcCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJib3R0b20iOiAiIgogICAgfSwKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgZm46IGZ1bmN0aW9uIGZuKHJlZikgewogICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgcmV0dXJuIFtfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QuYWRkQnV0dG9uLAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAidGV4dCI6ICIiLAogICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiQWRkIHRvICIgKyBfdm0uY29udHJvbC5sYWJlbCwKICAgICAgICAgICAgImRpc2FibGVkIjogIV92bS5jb250cm9sLmVuYWJsZWQgfHwgX3ZtLmFwcGxpZWRPcHRpb25zLnJlc3RyaWN0ICYmIF92bS5hcnJheVNjaGVtYSAhPT0gdW5kZWZpbmVkICYmIF92bS5hcnJheVNjaGVtYS5tYXhJdGVtcyAhPT0gdW5kZWZpbmVkICYmIF92bS5jb250cm9sLmRhdGEubGVuZ3RoID49IF92bS5hcnJheVNjaGVtYS5tYXhJdGVtcwogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjbGljayI6IF92bS5hZGRCdXR0b25DbGljawogICAgICAgICAgfQogICAgICAgIH0sIG9uVG9vbHRpcCksIFtfYygndi1pY29uJywgW192bS5fdigibWRpLXBsdXMiKV0pXSwgMSldOwogICAgICB9CiAgICB9XSwgbnVsbCwgZmFsc2UsIDMwMDE1MzUwMzUpCiAgfSwgW192bS5fdigiXG4gICAgICAgICIgKyBfdm0uX3MoIkFkZCB0byAiICsgX3ZtLmNvbnRyb2wubGFiZWwpICsgIlxuICAgICAgIildKV0sIDEpXSwgMSksIF92bS5fdigiICIpLCBfYygndi1jYXJkLXRleHQnLCBbX2MoJ3YtY29udGFpbmVyJywgewogICAgYXR0cnM6IHsKICAgICAgImp1c3RpZnktc3BhY2UtYXJvdW5kIjogIiIsCiAgICAgICJhbGlnbi1jb250ZW50LWNlbnRlciI6ICIiCiAgICB9CiAgfSwgW19jKCd2LXJvdycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJqdXN0aWZ5IjogImNlbnRlciIKICAgIH0KICB9LCBbX2MoJ3YtZXhwYW5zaW9uLXBhbmVscycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJhY2NvcmRpb24iOiAiIiwKICAgICAgImZvY3VzYWJsZSI6ICIiCiAgICB9CiAgfSwgX3ZtLl9sKF92bS5jb250cm9sLmRhdGEsIGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCkgewogICAgcmV0dXJuIF9jKCd2LWV4cGFuc2lvbi1wYW5lbCcsIHsKICAgICAga2V5OiBfdm0uY29udHJvbC5wYXRoICsgIi0iICsgaW5kZXgsCiAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lml0ZW0KICAgIH0sIFtfYygndi1leHBhbnNpb24tcGFuZWwtaGVhZGVyJywgewogICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5pdGVtSGVhZGVyCiAgICB9LCBbX2MoJ3YtY29udGFpbmVyJywgewogICAgICBhdHRyczogewogICAgICAgICJweS0wIjogIiIKICAgICAgfQogICAgfSwgW19jKCd2LXJvdycsIHsKICAgICAgc3R5bGU6ICJkaXNwbGF5OiBncmlkOyBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IG1pbi1jb250ZW50IGF1dG8gbWluLWNvbnRlbnQgIiArIChfdm0uYXBwbGllZE9wdGlvbnMuc2hvd1NvcnRCdXR0b25zID8gJ21pbi1jb250ZW50IG1pbi1jb250ZW50JyA6ICcnKQogICAgfSwgW19jKCd2LWNvbCcsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiYWxpZ24tc2VsZiI6ICJjZW50ZXIiLAogICAgICAgICJweC0wIjogIiIKICAgICAgfQogICAgfSwgW19jKCd2YWxpZGF0aW9uLWJhZGdlJywgewogICAgICBhdHRyczogewogICAgICAgICJvdmVybGFwIjogIiIsCiAgICAgICAgImJvcmRlcmVkIjogIiIsCiAgICAgICAgImVycm9ycyI6IF92bS5jaGlsZEVycm9ycyhpbmRleCkKICAgICAgfQogICAgfSwgW19jKCd2LWF2YXRhcicsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAic2l6ZSI6ICI0MCIsCiAgICAgICAgImFyaWEtbGFiZWwiOiAiSW5kZXgiLAogICAgICAgICJjb2xvciI6ICJpbmZvIgogICAgICB9CiAgICB9LCBbX2MoJ3NwYW4nLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiaW5mby0tdGV4dCB0ZXh0LS1saWdodGVuLTUiCiAgICB9LCBbX3ZtLl92KF92bS5fcyhpbmRleCArIDEpKV0pXSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtY29sJywgewogICAgICAiY2xhc3MiOiAidGV4dC10cnVuY2F0ZSAiICsgX3ZtLnN0eWxlcy5hcnJheUxpc3QuaXRlbUxhYmVsLAogICAgICBhdHRyczogewogICAgICAgICJhbGlnbi1zZWxmIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmNoaWxkTGFiZWxGb3JJbmRleChpbmRleCkpKV0pLCBfdm0uX3YoIiAiKSwgX3ZtLmFwcGxpZWRPcHRpb25zLnNob3dTb3J0QnV0dG9ucyA/IF9jKCd2LWNvbCcsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiYWxpZ24tc2VsZiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfYygndi10b29sdGlwJywgewogICAgICBhdHRyczogewogICAgICAgICJib3R0b20iOiAiIgogICAgICB9LAogICAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgICAgcmV0dXJuIFtfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICBzdGF0aWNDbGFzczogInYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcl9faWNvbiIsCiAgICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lml0ZW1Nb3ZlVXAsCiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAgICJ0ZXh0IjogIiIsCiAgICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgICAiYXJpYS1sYWJlbCI6ICJNb3ZlIHVwIiwKICAgICAgICAgICAgICAiZGlzYWJsZWQiOiBpbmRleCA8PSAwIHx8ICFfdm0uY29udHJvbC5lbmFibGVkCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm1vdmVVcENsaWNrKCRldmVudCwgaW5kZXgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgb25Ub29sdGlwKSwgW19jKCd2LWljb24nLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibm90cmFuc2xhdGUiCiAgICAgICAgICB9LCBbX3ZtLl92KCJtZGktYXJyb3ctdXAiKV0pXSwgMSldOwogICAgICAgIH0KICAgICAgfV0sIG51bGwsIHRydWUpCiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgICAgICBNb3ZlIFVwXG4gICAgICAgICAgICAgICAgICAgICIpXSldLCAxKSA6IF92bS5fZSgpLCBfdm0uX3YoIiAiKSwgX3ZtLmFwcGxpZWRPcHRpb25zLnNob3dTb3J0QnV0dG9ucyA/IF9jKCd2LWNvbCcsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiYWxpZ24tc2VsZiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfYygndi10b29sdGlwJywgewogICAgICBhdHRyczogewogICAgICAgICJib3R0b20iOiAiIgogICAgICB9LAogICAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgICAgcmV0dXJuIFtfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICBzdGF0aWNDbGFzczogInYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcl9faWNvbiIsCiAgICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lml0ZW1Nb3ZlRG93biwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAiZmFiIjogIiIsCiAgICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAgICJzbWFsbCI6ICIiLAogICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIk1vdmUgZG93biIsCiAgICAgICAgICAgICAgImRpc2FibGVkIjogaW5kZXggPj0gX3ZtLmNvbnRyb2wuZGF0YS5sZW5ndGggLSAxIHx8ICFfdm0uY29udHJvbC5lbmFibGVkCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm1vdmVEb3duQ2xpY2soJGV2ZW50LCBpbmRleCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1hcnJvdy1kb3duIildKV0sIDEpXTsKICAgICAgICB9CiAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICAgICAgTW92ZSBEb3duXG4gICAgICAgICAgICAgICAgICAgICIpXSldLCAxKSA6IF92bS5fZSgpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtY29sJywgewogICAgICBhdHRyczogewogICAgICAgICJhbGlnbi1zZWxmIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW19jKCd2LXRvb2x0aXAnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImJvdHRvbSI6ICIiCiAgICAgIH0sCiAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAgICBrZXk6ICJhY3RpdmF0b3IiLAogICAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgICByZXR1cm4gW19jKCd2LWJ0bicsIF92bS5fZyh7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidi1leHBhbnNpb24tcGFuZWwtaGVhZGVyX19pY29uIiwKICAgICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QuaXRlbURlbGV0ZSwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAiZmFiIjogIiIsCiAgICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAgICJzbWFsbCI6ICIiLAogICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkRlbGV0ZSIsCiAgICAgICAgICAgICAgImRpc2FibGVkIjogIV92bS5jb250cm9sLmVuYWJsZWQgfHwgX3ZtLmFwcGxpZWRPcHRpb25zLnJlc3RyaWN0ICYmIF92bS5hcnJheVNjaGVtYSAhPT0gdW5kZWZpbmVkICYmIF92bS5hcnJheVNjaGVtYS5taW5JdGVtcyAhPT0gdW5kZWZpbmVkICYmIF92bS5jb250cm9sLmRhdGEubGVuZ3RoIDw9IF92bS5hcnJheVNjaGVtYS5taW5JdGVtcwogICAgICAgICAgICB9LAogICAgICAgICAgICBuYXRpdmVPbjogewogICAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZW1vdmVJdGVtc0NsaWNrKCRldmVudCwgW2luZGV4XSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1kZWxldGUiKV0pXSwgMSldOwogICAgICAgIH0KICAgICAgfV0sIG51bGwsIHRydWUpCiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgICAgICBEZWxldGVcbiAgICAgICAgICAgICAgICAgICAgIildKV0sIDEpXSwgMSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnQnLCB7CiAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lml0ZW1Db250ZW50CiAgICB9LCBbX2MoJ2Rpc3BhdGNoLXJlbmRlcmVyJywgewogICAgICBhdHRyczogewogICAgICAgICJzY2hlbWEiOiBfdm0uY29udHJvbC5zY2hlbWEsCiAgICAgICAgInVpc2NoZW1hIjogX3ZtLmZvdW5kVUlTY2hlbWEsCiAgICAgICAgInBhdGgiOiBfdm0uY29tcG9zZVBhdGhzKF92bS5jb250cm9sLnBhdGgsICIiICsgaW5kZXgpLAogICAgICAgICJlbmFibGVkIjogX3ZtLmNvbnRyb2wuZW5hYmxlZCwKICAgICAgICAicmVuZGVyZXJzIjogX3ZtLmNvbnRyb2wucmVuZGVyZXJzLAogICAgICAgICJjZWxscyI6IF92bS5jb250cm9sLmNlbGxzCiAgICAgIH0KICAgIH0pXSwgMSldLCAxKTsKICB9KSwgMSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX3ZtLm5vRGF0YSA/IF9jKCd2LWNvbnRhaW5lcicsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lm5vRGF0YQogIH0sIFtfdm0uX3YoIlxuICAgICAgTm8gZGF0YVxuICAgICIpXSkgOiBfdm0uX2UoKV0sIDEpXSwgMSkgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyR5ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJHkgPSBmdW5jdGlvbiBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18oaW5qZWN0KSB7CiAgaWYgKCFpbmplY3QpIHJldHVybjsKICBpbmplY3QoImRhdGEtdi1hNTE3Y2UyY18wIiwgewogICAgc291cmNlOiAiLm5vdHJhbnNsYXRlW2RhdGEtdi1hNTE3Y2UyY117dHJhbnNmb3JtOm5vbmUhaW1wb3J0YW50fSIsCiAgICBtYXA6IHVuZGVmaW5lZCwKICAgIG1lZGlhOiB1bmRlZmluZWQKICB9KTsKfTsKLyogc2NvcGVkICovCgoKdmFyIF9fdnVlX3Njb3BlX2lkX18keSA9ICJkYXRhLXYtYTUxN2NlMmMiOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18keSA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyR5ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18keSA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18keSwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHkKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJHksIF9fdnVlX3NjcmlwdF9fJHksIF9fdnVlX3Njb3BlX2lkX18keSwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHksIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18keSwgZmFsc2UsIGNyZWF0ZUluamVjdG9yLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgbGF5b3V0UmVuZGVyZXIkNCA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2NhdGVnb3JpemF0aW9uLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBEaXNwYXRjaFJlbmRlcmVyOiB2dWUyLkRpc3BhdGNoUmVuZGVyZXIsCiAgICBWQ2FyZDogbGliLlZDYXJkLAogICAgVlRhYnM6IGxpYi5WVGFicywKICAgIFZUYWI6IGxpYi5WVGFiLAogICAgVlRhYnNJdGVtczogbGliLlZUYWJzSXRlbXMsCiAgICBWVGFiSXRlbTogbGliLlZUYWJJdGVtCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHZhciBhY3RpdmVDYXRlZ29yeSA9IGNvbXBvc2l0aW9uQXBpLnJlZigwKTsKICAgIHZhciBhanYgPSB1c2VBanYoKTsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgdXNlVnVldGlmeUxheW91dCh2dWUyLnVzZUpzb25Gb3Jtc0xheW91dChwcm9wcykpKSwge30sIHsKICAgICAgYWN0aXZlQ2F0ZWdvcnk6IGFjdGl2ZUNhdGVnb3J5LAogICAgICBhanY6IGFqdgogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgdmlzaWJsZUNhdGVnb3JpZXM6IGZ1bmN0aW9uIHZpc2libGVDYXRlZ29yaWVzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMubGF5b3V0LnVpc2NoZW1hLmVsZW1lbnRzLmZpbHRlcihmdW5jdGlvbiAoY2F0ZWdvcnkpIHsKICAgICAgICByZXR1cm4gY29yZS5pc1Zpc2libGUoY2F0ZWdvcnksIF90aGlzLmxheW91dC5kYXRhLCBfdGhpcy5sYXlvdXQucGF0aCwgX3RoaXMuYWp2KTsKICAgICAgfSk7CiAgICB9CiAgfQp9KTsKdmFyIGlzU2luZ2xlTGV2ZWxDYXRlZ29yaXphdGlvbiA9IGNvcmUuYW5kKGNvcmUudWlUeXBlSXMoJ0NhdGVnb3JpemF0aW9uJyksIGNvcmUuY2F0ZWdvcml6YXRpb25IYXNDYXRlZ29yeSk7CnZhciBlbnRyeSR2ID0gewogIHJlbmRlcmVyOiBsYXlvdXRSZW5kZXJlciQ0LAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCgyLCBpc1NpbmdsZUxldmVsQ2F0ZWdvcml6YXRpb24pCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJHggPSBsYXlvdXRSZW5kZXJlciQ0OwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJHggPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0ubGF5b3V0LnZpc2libGUgPyBfYygndi1jYXJkJywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5jYXRlZ29yaXphdGlvbi5yb290CiAgfSwgW19jKCd2LXRhYnMnLCB7CiAgICBhdHRyczogewogICAgICAidmVydGljYWwiOiBfdm0ubGF5b3V0LmRpcmVjdGlvbiA9PSAncm93JwogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uYWN0aXZlQ2F0ZWdvcnksCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uYWN0aXZlQ2F0ZWdvcnkgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJhY3RpdmVDYXRlZ29yeSIKICAgIH0KICB9LCBfdm0uX2woX3ZtLnZpc2libGVDYXRlZ29yaWVzLCBmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgIHJldHVybiBfYygndi10YWInLCB7CiAgICAgIGtleTogX3ZtLmxheW91dC5wYXRoICsgIi0iICsgaW5kZXgKICAgIH0sIFtfdm0uX3YoIlxuICAgICAgIiArIF92bS5fcyhlbGVtZW50LmxhYmVsKSArICJcbiAgICAiKV0pOwogIH0pLCAxKSwgX3ZtLl92KCIgIiksIF9jKCd2LXRhYnMtaXRlbXMnLCB7CiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLmFjdGl2ZUNhdGVnb3J5LAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLmFjdGl2ZUNhdGVnb3J5ID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiYWN0aXZlQ2F0ZWdvcnkiCiAgICB9CiAgfSwgX3ZtLl9sKF92bS52aXNpYmxlQ2F0ZWdvcmllcywgZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7CiAgICByZXR1cm4gX2MoJ3YtdGFiLWl0ZW0nLCB7CiAgICAgIGtleTogX3ZtLmxheW91dC5wYXRoICsgIi0iICsgaW5kZXgKICAgIH0sIFtfYygnZGlzcGF0Y2gtcmVuZGVyZXInLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNjaGVtYSI6IF92bS5sYXlvdXQuc2NoZW1hLAogICAgICAgICJ1aXNjaGVtYSI6IGVsZW1lbnQsCiAgICAgICAgInBhdGgiOiBfdm0ubGF5b3V0LnBhdGgsCiAgICAgICAgImVuYWJsZWQiOiBfdm0ubGF5b3V0LmVuYWJsZWQsCiAgICAgICAgInJlbmRlcmVycyI6IF92bS5sYXlvdXQucmVuZGVyZXJzLAogICAgICAgICJjZWxscyI6IF92bS5sYXlvdXQuY2VsbHMKICAgICAgfQogICAgfSldLCAxKTsKICB9KSwgMSldLCAxKSA6IF92bS5fZSgpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHggPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18keCA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyR4ID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18keCA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyR4ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyR4ID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyR4LAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18keAp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18keCwgX192dWVfc2NyaXB0X18keCwgX192dWVfc2NvcGVfaWRfXyR4LCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18keCwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyR4LCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgbGF5b3V0UmVuZGVyZXIkMyA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2NhdGVnb3JpemF0aW9uLXN0ZXBwZXItcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIERpc3BhdGNoUmVuZGVyZXI6IHZ1ZTIuRGlzcGF0Y2hSZW5kZXJlciwKICAgIFZTdGVwcGVyOiBsaWIuVlN0ZXBwZXIsCiAgICBWU3RlcHBlckhlYWRlcjogbGliLlZTdGVwcGVySGVhZGVyLAogICAgVlN0ZXBwZXJTdGVwOiBsaWIuVlN0ZXBwZXJTdGVwLAogICAgVkRpdmlkZXI6IGxpYi5WRGl2aWRlciwKICAgIFZTcGFjZXI6IGxpYi5WU3BhY2VyLAogICAgVlN0ZXBwZXJJdGVtczogbGliLlZTdGVwcGVySXRlbXMsCiAgICBWU3RlcHBlckNvbnRlbnQ6IGxpYi5WU3RlcHBlckNvbnRlbnQsCiAgICBWQ2FyZDogbGliLlZDYXJkLAogICAgVkNhcmRBY3Rpb25zOiBsaWIuVkNhcmRBY3Rpb25zLAogICAgVkJ0bjogbGliLlZCdG4KICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgdmFyIGFjdGl2ZUNhdGVnb3J5ID0gY29tcG9zaXRpb25BcGkucmVmKDEpOwogICAgdmFyIGFqdiA9IHVzZUFqdigpOwogICAgcmV0dXJuIF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCB1c2VWdWV0aWZ5TGF5b3V0KHZ1ZTIudXNlSnNvbkZvcm1zTGF5b3V0KHByb3BzKSkpLCB7fSwgewogICAgICBhY3RpdmVDYXRlZ29yeTogYWN0aXZlQ2F0ZWdvcnksCiAgICAgIGFqdjogYWp2CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB2aXNpYmxlQ2F0ZWdvcmllczogZnVuY3Rpb24gdmlzaWJsZUNhdGVnb3JpZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gdGhpcy5sYXlvdXQudWlzY2hlbWEuZWxlbWVudHMuZmlsdGVyKGZ1bmN0aW9uIChjYXRlZ29yeSkgewogICAgICAgIHJldHVybiBjb3JlLmlzVmlzaWJsZShjYXRlZ29yeSwgX3RoaXMubGF5b3V0LmRhdGEsIF90aGlzLmxheW91dC5wYXRoLCBfdGhpcy5hanYpOwogICAgICB9KTsKICAgIH0KICB9Cn0pOwp2YXIgY2F0ZWdvcml6YXRpb25TdGVwcGVyVGVzdGVyID0gY29yZS5hbmQoY29yZS51aVR5cGVJcygnQ2F0ZWdvcml6YXRpb24nKSwgY29yZS5jYXRlZ29yaXphdGlvbkhhc0NhdGVnb3J5LCBjb3JlLm9wdGlvbklzKCd2YXJpYW50JywgJ3N0ZXBwZXInKSk7CnZhciBlbnRyeSR1ID0gewogIHJlbmRlcmVyOiBsYXlvdXRSZW5kZXJlciQzLAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCgzLCBjYXRlZ29yaXphdGlvblN0ZXBwZXJUZXN0ZXIpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJHcgPSBsYXlvdXRSZW5kZXJlciQzOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJHcgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0ubGF5b3V0LnZpc2libGUgPyBfYygnZGl2JywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5jYXRlZ29yaXphdGlvbi5yb290CiAgfSwgW19jKCd2LXN0ZXBwZXInLCB7CiAgICBhdHRyczogewogICAgICAibm9uLWxpbmVhciI6ICIiLAogICAgICAidmVydGljYWwiOiBfdm0ubGF5b3V0LmRpcmVjdGlvbiA9PSAncm93JwogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uYWN0aXZlQ2F0ZWdvcnksCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uYWN0aXZlQ2F0ZWdvcnkgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJhY3RpdmVDYXRlZ29yeSIKICAgIH0KICB9LCBbX2MoJ3Ytc3RlcHBlci1oZWFkZXInLCBbX3ZtLl9sKF92bS52aXNpYmxlQ2F0ZWdvcmllcywgZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7CiAgICByZXR1cm4gW19jKCd2LXN0ZXBwZXItc3RlcCcsIHsKICAgICAga2V5OiBfdm0ubGF5b3V0LnBhdGggKyAiLSIgKyBpbmRleCwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3RlcCI6IGluZGV4ICsgMSwKICAgICAgICAiZWRpdGFibGUiOiAiIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAiICsgX3ZtLl9zKGVsZW1lbnQubGFiZWwpICsgIlxuICAgICAgICAiKV0pLCBfdm0uX3YoIiAiKSwgaW5kZXggIT09IF92bS52aXNpYmxlQ2F0ZWdvcmllcy5sZW5ndGggLSAxID8gX2MoJ3YtZGl2aWRlcicsIHsKICAgICAga2V5OiBpbmRleAogICAgfSkgOiBfdm0uX2UoKV07CiAgfSldLCAyKSwgX3ZtLl92KCIgIiksIF9jKCd2LXN0ZXBwZXItaXRlbXMnLCBfdm0uX2woX3ZtLnZpc2libGVDYXRlZ29yaWVzLCBmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgIHJldHVybiBfYygndi1zdGVwcGVyLWNvbnRlbnQnLCB7CiAgICAgIGtleTogX3ZtLmxheW91dC5wYXRoICsgIi0iICsgaW5kZXgsCiAgICAgIGF0dHJzOiB7CiAgICAgICAgInN0ZXAiOiBpbmRleCArIDEKICAgICAgfQogICAgfSwgW19jKCd2LWNhcmQnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImVsZXZhdGlvbiI6ICIwIgogICAgICB9CiAgICB9LCBbX2MoJ2Rpc3BhdGNoLXJlbmRlcmVyJywgewogICAgICBhdHRyczogewogICAgICAgICJzY2hlbWEiOiBfdm0ubGF5b3V0LnNjaGVtYSwKICAgICAgICAidWlzY2hlbWEiOiBlbGVtZW50LAogICAgICAgICJwYXRoIjogX3ZtLmxheW91dC5wYXRoLAogICAgICAgICJlbmFibGVkIjogX3ZtLmxheW91dC5lbmFibGVkLAogICAgICAgICJyZW5kZXJlcnMiOiBfdm0ubGF5b3V0LnJlbmRlcmVycywKICAgICAgICAiY2VsbHMiOiBfdm0ubGF5b3V0LmNlbGxzCiAgICAgIH0KICAgIH0pLCBfdm0uX3YoIiAiKSwgISFfdm0uYXBwbGllZE9wdGlvbnMuc2hvd05hdkJ1dHRvbnMgPyBfYygnZGl2JywgW19jKCd2LWRpdmlkZXInKSwgX3ZtLl92KCIgIiksIF9jKCd2LWNhcmQtYWN0aW9ucycsIFtfYygndi1idG4nLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAibGVmdCI6ICIiLAogICAgICAgICJkaXNhYmxlZCI6IF92bS5hY3RpdmVDYXRlZ29yeSAtIDEgPD0gMAogICAgICB9LAogICAgICBvbjogewogICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgX3ZtLmFjdGl2ZUNhdGVnb3J5LS07CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICBCYWNrXG4gICAgICAgICAgICAgICIpXSksIF92bS5fdigiICIpLCBfYygndi1zcGFjZXInKSwgX3ZtLl92KCIgIiksIF9jKCd2LWJ0bicsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAidGV4dCI6ICIiLAogICAgICAgICJyaWdodCI6ICIiLAogICAgICAgICJjb2xvciI6ICJwcmltYXJ5IiwKICAgICAgICAiZGlzYWJsZWQiOiBfdm0uYWN0aXZlQ2F0ZWdvcnkgLSAxID49IF92bS52aXNpYmxlQ2F0ZWdvcmllcy5sZW5ndGggLSAxCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICBfdm0uYWN0aXZlQ2F0ZWdvcnkrKzsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIlxuICAgICAgICAgICAgICAgIE5leHRcbiAgICAgICAgICAgICAgIildKV0sIDEpXSwgMSkgOiBfdm0uX2UoKV0sIDEpXSwgMSk7CiAgfSksIDEpXSwgMSldLCAxKSA6IF92bS5fZSgpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHcgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kdyA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyR3ID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kdyA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyR3ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyR3ID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyR3LAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kdwp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kdywgX192dWVfc2NyaXB0X18kdywgX192dWVfc2NvcGVfaWRfXyR3LCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kdywgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyR3LCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgbGF5b3V0UmVuZGVyZXIkMiA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2dyb3VwLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBEaXNwYXRjaFJlbmRlcmVyOiB2dWUyLkRpc3BhdGNoUmVuZGVyZXIsCiAgICBWQ2FyZDogbGliLlZDYXJkLAogICAgVkNhcmRUaXRsZTogbGliLlZDYXJkVGl0bGUsCiAgICBWQ2FyZFRleHQ6IGxpYi5WQ2FyZFRleHQKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlMYXlvdXQodnVlMi51c2VKc29uRm9ybXNMYXlvdXQocHJvcHMpKTsKICB9Cn0pOwp2YXIgZW50cnkkdCA9IHsKICByZW5kZXJlcjogbGF5b3V0UmVuZGVyZXIkMiwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMiwgY29yZS5hbmQoY29yZS5pc0xheW91dCwgY29yZS51aVR5cGVJcygnR3JvdXAnKSkpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJHYgPSBsYXlvdXRSZW5kZXJlciQyOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJHYgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0ubGF5b3V0LnZpc2libGUgPyBfYygndi1jYXJkJywgewogICAgImNsYXNzIjogInBhLTAgIiArIF92bS5zdHlsZXMuZ3JvdXAucm9vdCwKICAgIGF0dHJzOiB7CiAgICAgICJlbGV2YXRpb24iOiAiMiIKICAgIH0KICB9LCBbX3ZtLmxheW91dC51aXNjaGVtYS5sYWJlbCA/IF9jKCd2LWNhcmQtdGl0bGUnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmdyb3VwLmxhYmVsCiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmxheW91dC51aXNjaGVtYS5sYWJlbCkpXSkgOiBfdm0uX2UoKSwgX3ZtLl92KCIgIiksIF92bS5fbChfdm0ubGF5b3V0LnVpc2NoZW1hLmVsZW1lbnRzLCBmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgIHJldHVybiBfYygndi1jYXJkLXRleHQnLCB7CiAgICAgIGtleTogX3ZtLmxheW91dC5wYXRoICsgIi0iICsgaW5kZXgsCiAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuZ3JvdXAuaXRlbQogICAgfSwgW19jKCdkaXNwYXRjaC1yZW5kZXJlcicsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAic2NoZW1hIjogX3ZtLmxheW91dC5zY2hlbWEsCiAgICAgICAgInVpc2NoZW1hIjogZWxlbWVudCwKICAgICAgICAicGF0aCI6IF92bS5sYXlvdXQucGF0aCwKICAgICAgICAiZW5hYmxlZCI6IF92bS5sYXlvdXQuZW5hYmxlZCwKICAgICAgICAicmVuZGVyZXJzIjogX3ZtLmxheW91dC5yZW5kZXJlcnMsCiAgICAgICAgImNlbGxzIjogX3ZtLmxheW91dC5jZWxscwogICAgICB9CiAgICB9KV0sIDEpOwogIH0pXSwgMikgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyR2ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJHYgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kdiA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJHYgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kdiA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kdiA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kdiwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHYKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJHYsIF9fdnVlX3NjcmlwdF9fJHYsIF9fdnVlX3Njb3BlX2lkX18kdiwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHYsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kdiwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGxheW91dFJlbmRlcmVyJDEgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdob3Jpem9udGFsLWxheW91dC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyLAogICAgVkNvbnRhaW5lcjogbGliLlZDb250YWluZXIsCiAgICBWUm93OiBsaWIuVlJvdywKICAgIFZDb2w6IGxpYi5WQ29sCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5TGF5b3V0KHZ1ZTIudXNlSnNvbkZvcm1zTGF5b3V0KHByb3BzKSk7CiAgfQp9KTsKdmFyIGVudHJ5JHMgPSB7CiAgcmVuZGVyZXI6IGxheW91dFJlbmRlcmVyJDEsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDIsIGNvcmUudWlUeXBlSXMoJ0hvcml6b250YWxMYXlvdXQnKSkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kdSA9IGxheW91dFJlbmRlcmVyJDE7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kdSA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF92bS5sYXlvdXQudmlzaWJsZSA/IF9jKCd2LWNvbnRhaW5lcicsIHsKICAgICJjbGFzcyI6ICJwYS0wICIgKyBfdm0uc3R5bGVzLmhvcml6b250YWxMYXlvdXQucm9vdAogIH0sIFtfYygndi1yb3cnLCBfdm0uX2woX3ZtLmxheW91dC51aXNjaGVtYS5lbGVtZW50cywgZnVuY3Rpb24gKGVsZW1lbnQsIGluZGV4KSB7CiAgICByZXR1cm4gX2MoJ3YtY29sJywgewogICAgICBrZXk6IF92bS5sYXlvdXQucGF0aCArICItIiArIGluZGV4LAogICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmhvcml6b250YWxMYXlvdXQuaXRlbQogICAgfSwgW19jKCdkaXNwYXRjaC1yZW5kZXJlcicsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAic2NoZW1hIjogX3ZtLmxheW91dC5zY2hlbWEsCiAgICAgICAgInVpc2NoZW1hIjogZWxlbWVudCwKICAgICAgICAicGF0aCI6IF92bS5sYXlvdXQucGF0aCwKICAgICAgICAiZW5hYmxlZCI6IF92bS5sYXlvdXQuZW5hYmxlZCwKICAgICAgICAicmVuZGVyZXJzIjogX3ZtLmxheW91dC5yZW5kZXJlcnMsCiAgICAgICAgImNlbGxzIjogX3ZtLmxheW91dC5jZWxscwogICAgICB9CiAgICB9KV0sIDEpOwogIH0pLCAxKV0sIDEpIDogX3ZtLl9lKCk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kdSA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyR1ID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJHUgPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyR1ID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHUgPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJHUgPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJHUsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyR1Cn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyR1LCBfX3Z1ZV9zY3JpcHRfXyR1LCBfX3Z1ZV9zY29wZV9pZF9fJHUsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyR1LCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJHUsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBsYXlvdXRSZW5kZXJlciA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ3ZlcnRpY2FsLWxheW91dC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyLAogICAgVkNvbnRhaW5lcjogbGliLlZDb250YWluZXIsCiAgICBWUm93OiBsaWIuVlJvdywKICAgIFZDb2w6IGxpYi5WQ29sCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5TGF5b3V0KHZ1ZTIudXNlSnNvbkZvcm1zTGF5b3V0KHByb3BzKSk7CiAgfQp9KTsKdmFyIGVudHJ5JHIgPSB7CiAgcmVuZGVyZXI6IGxheW91dFJlbmRlcmVyLAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCgyLCBjb3JlLnVpVHlwZUlzKCdWZXJ0aWNhbExheW91dCcpKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyR0ID0gbGF5b3V0UmVuZGVyZXI7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kdCA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF92bS5sYXlvdXQudmlzaWJsZSA/IF9jKCd2LWNvbnRhaW5lcicsIHsKICAgICJjbGFzcyI6ICJwYS0wICIgKyBfdm0uc3R5bGVzLnZlcnRpY2FsTGF5b3V0LnJvb3QsCiAgICBhdHRyczogewogICAgICAiZmlsbC1oZWlnaHQiOiAiIgogICAgfQogIH0sIF92bS5fbChfdm0ubGF5b3V0LnVpc2NoZW1hLmVsZW1lbnRzLCBmdW5jdGlvbiAoZWxlbWVudCwgaW5kZXgpIHsKICAgIHJldHVybiBfYygndi1yb3cnLCB7CiAgICAgIGtleTogX3ZtLmxheW91dC5wYXRoICsgIi0iICsgaW5kZXgsCiAgICAgIGF0dHJzOiB7CiAgICAgICAgIm5vLWd1dHRlcnMiOiAiIgogICAgICB9CiAgICB9LCBbX2MoJ3YtY29sJywgewogICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLnZlcnRpY2FsTGF5b3V0Lml0ZW0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgImNvbHMiOiAiMTIiCiAgICAgIH0KICAgIH0sIFtfYygnZGlzcGF0Y2gtcmVuZGVyZXInLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNjaGVtYSI6IF92bS5sYXlvdXQuc2NoZW1hLAogICAgICAgICJ1aXNjaGVtYSI6IGVsZW1lbnQsCiAgICAgICAgInBhdGgiOiBfdm0ubGF5b3V0LnBhdGgsCiAgICAgICAgImVuYWJsZWQiOiBfdm0ubGF5b3V0LmVuYWJsZWQsCiAgICAgICAgInJlbmRlcmVycyI6IF92bS5sYXlvdXQucmVuZGVyZXJzLAogICAgICAgICJjZWxscyI6IF92bS5sYXlvdXQuY2VsbHMKICAgICAgfQogICAgfSldLCAxKV0sIDEpOwogIH0pLCAxKSA6IF92bS5fZSgpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHQgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kdCA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyR0ID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kdCA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyR0ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyR0ID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyR0LAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kdAp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kdCwgX192dWVfc2NyaXB0X18kdCwgX192dWVfc2NvcGVfaWRfXyR0LCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kdCwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyR0LCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgbGF5b3V0UmVuZGVyZXJFbnRyeSA9IHsKICByZW5kZXJlcjogX192dWVfY29tcG9uZW50X18kdCwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMSwgY29yZS5pc0xheW91dCkKfTsKdmFyIGxheW91dFJlbmRlcmVycyA9IFtsYXlvdXRSZW5kZXJlckVudHJ5LCBlbnRyeSR3LCBlbnRyeSR2LCBlbnRyeSR1LCBlbnRyeSR0LCBlbnRyeSRzLCBlbnRyeSRyXTsKdmFyIGFycmF5TGlzdFJlbmRlcmVyRW50cnkgPSB7CiAgcmVuZGVyZXI6IF9fdnVlX2NvbXBvbmVudF9fJHksCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDIsIGNvcmUuc2NoZW1hVHlwZUlzKCdhcnJheScpKQp9Owp2YXIgYXJyYXlSZW5kZXJlcnMgPSBbYXJyYXlMaXN0UmVuZGVyZXJFbnRyeV07CnZhciBjb250cm9sUmVuZGVyZXIkcSA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2FsbC1vZi1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0FsbE9mQ29udHJvbChwcm9wcykpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHN1YlNjaGVtYTogZnVuY3Rpb24gc3ViU2NoZW1hKCkgewogICAgICByZXR1cm4gY29yZS5yZXNvbHZlU3ViU2NoZW1hcyh0aGlzLmNvbnRyb2wuc2NoZW1hLCB0aGlzLmNvbnRyb2wucm9vdFNjaGVtYSwgJ2FsbE9mJyk7CiAgICB9LAogICAgZGVsZWdhdGVVSVNjaGVtYTogZnVuY3Rpb24gZGVsZWdhdGVVSVNjaGVtYSgpIHsKICAgICAgcmV0dXJuIGNvcmUuZmluZE1hdGNoaW5nVUlTY2hlbWEodGhpcy5jb250cm9sLnVpc2NoZW1hcykodGhpcy5zdWJTY2hlbWEsIHRoaXMuY29udHJvbC51aXNjaGVtYS5zY29wZSwgdGhpcy5jb250cm9sLnBhdGgpOwogICAgfSwKICAgIGFsbE9mUmVuZGVySW5mb3M6IGZ1bmN0aW9uIGFsbE9mUmVuZGVySW5mb3MoKSB7CiAgICAgIHJldHVybiBjb3JlLmNyZWF0ZUNvbWJpbmF0b3JSZW5kZXJJbmZvcyh0aGlzLnN1YlNjaGVtYS5hbGxPZiwgdGhpcy5jb250cm9sLnJvb3RTY2hlbWEsICdhbGxPZicsIHRoaXMuY29udHJvbC51aXNjaGVtYSwgdGhpcy5jb250cm9sLnBhdGgsIHRoaXMuY29udHJvbC51aXNjaGVtYXMpOwogICAgfQogIH0KfSk7CnZhciBlbnRyeSRxID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkcSwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMywgY29yZS5pc0FsbE9mQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kcyA9IGNvbnRyb2xSZW5kZXJlciRxOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJHMgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0uY29udHJvbC52aXNpYmxlID8gX2MoJ2RpdicsIFtfdm0uZGVsZWdhdGVVSVNjaGVtYSA/IFtfYygnZGlzcGF0Y2gtcmVuZGVyZXInLCB7CiAgICBhdHRyczogewogICAgICAic2NoZW1hIjogX3ZtLnN1YlNjaGVtYSwKICAgICAgInVpc2NoZW1hIjogX3ZtLmRlbGVnYXRlVUlTY2hlbWEsCiAgICAgICJwYXRoIjogX3ZtLmNvbnRyb2wucGF0aCwKICAgICAgImVuYWJsZWQiOiBfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAicmVuZGVyZXJzIjogX3ZtLmNvbnRyb2wucmVuZGVyZXJzLAogICAgICAiY2VsbHMiOiBfdm0uY29udHJvbC5jZWxscwogICAgfQogIH0pXSA6IF92bS5hbGxPZlJlbmRlckluZm9zID8gX3ZtLl9sKF92bS5hbGxPZlJlbmRlckluZm9zLCBmdW5jdGlvbiAoYWxsT2ZSZW5kZXJJbmZvLCBhbGxPZkluZGV4KSB7CiAgICByZXR1cm4gX2MoJ2Rpc3BhdGNoLXJlbmRlcmVyJywgewogICAgICBrZXk6IF92bS5jb250cm9sLnBhdGggKyAiLSIgKyBhbGxPZkluZGV4LAogICAgICBhdHRyczogewogICAgICAgICJzY2hlbWEiOiBhbGxPZlJlbmRlckluZm8uc2NoZW1hLAogICAgICAgICJ1aXNjaGVtYSI6IGFsbE9mUmVuZGVySW5mby51aXNjaGVtYSwKICAgICAgICAicGF0aCI6IF92bS5jb250cm9sLnBhdGgsCiAgICAgICAgImVuYWJsZWQiOiBfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICJyZW5kZXJlcnMiOiBfdm0uY29udHJvbC5yZW5kZXJlcnMsCiAgICAgICAgImNlbGxzIjogX3ZtLmNvbnRyb2wuY2VsbHMKICAgICAgfQogICAgfSk7CiAgfSkgOiBfdm0uX2UoKV0sIDIpIDogX3ZtLl9lKCk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kcyA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyRzID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJHMgPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRzID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHMgPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJHMgPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJHMsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRzCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyRzLCBfX3Z1ZV9zY3JpcHRfXyRzLCBfX3Z1ZV9zY29wZV9pZF9fJHMsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRzLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJHMsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBzY3JpcHQkMSA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2NvbWJpbmF0b3ItcHJvcGVydGllcycsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyCiAgfSwKICBwcm9wczogewogICAgc2NoZW1hOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBjb21iaW5hdG9yS2V5d29yZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgcGF0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9CiAgfSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHZhciBvdGhlclByb3BzID0gb21pdF9fZGVmYXVsdFsiZGVmYXVsdCJdKHByb3BzLnNjaGVtYSwgcHJvcHMuY29tYmluYXRvcktleXdvcmQpOwogICAgdmFyIGZvdW5kVUlTY2hlbWEgPSBjb3JlLkdlbmVyYXRlLnVpU2NoZW1hKG90aGVyUHJvcHMsICdWZXJ0aWNhbExheW91dCcpOwoKICAgIHZhciBpc0xheW91dCA9IGZ1bmN0aW9uIGlzTGF5b3V0KHVpc2NoZW1hKSB7CiAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodWlzY2hlbWEsICdlbGVtZW50cycpOwogICAgfTsKCiAgICB2YXIgaXNMYXlvdXRXaXRoRWxlbWVudHMgPSBmYWxzZTsKCiAgICBpZiAoZm91bmRVSVNjaGVtYSAhPT0gbnVsbCAmJiBpc0xheW91dChmb3VuZFVJU2NoZW1hKSkgewogICAgICBpc0xheW91dFdpdGhFbGVtZW50cyA9IGZvdW5kVUlTY2hlbWEuZWxlbWVudHMubGVuZ3RoID4gMDsKICAgIH0KCiAgICByZXR1cm4gewogICAgICBvdGhlclByb3BzOiBvdGhlclByb3BzLAogICAgICBmb3VuZFVJU2NoZW1hOiBmb3VuZFVJU2NoZW1hLAogICAgICBpc0xheW91dFdpdGhFbGVtZW50czogaXNMYXlvdXRXaXRoRWxlbWVudHMKICAgIH07CiAgfQp9KTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kciA9IHNjcmlwdCQxOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJHIgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0uaXNMYXlvdXRXaXRoRWxlbWVudHMgPyBfYygnZGl2JywgW19jKCdkaXNwYXRjaC1yZW5kZXJlcicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzY2hlbWEiOiBfdm0ub3RoZXJQcm9wcywKICAgICAgInBhdGgiOiBfdm0ucGF0aCwKICAgICAgInVpc2NoZW1hIjogX3ZtLmZvdW5kVUlTY2hlbWEKICAgIH0KICB9KV0sIDEpIDogX3ZtLl9lKCk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kciA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyRyID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJHIgPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRyID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHIgPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJHIgPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJHIsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRyCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyRyLCBfX3Z1ZV9zY3JpcHRfXyRyLCBfX3Z1ZV9zY29wZV9pZF9fJHIsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRyLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJHIsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBjb250cm9sUmVuZGVyZXIkcCA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2FueS1vZi1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyLAogICAgQ29tYmluYXRvclByb3BlcnRpZXM6IF9fdnVlX2NvbXBvbmVudF9fJHIsCiAgICBWVGFiczogbGliLlZUYWJzLAogICAgVlRhYjogbGliLlZUYWIsCiAgICBWVGFic0l0ZW1zOiBsaWIuVlRhYnNJdGVtcywKICAgIFZUYWJJdGVtOiBsaWIuVlRhYkl0ZW0KICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgdmFyIGlucHV0ID0gdnVlMi51c2VKc29uRm9ybXNBbnlPZkNvbnRyb2wocHJvcHMpOwogICAgdmFyIGNvbnRyb2wgPSBpbnB1dC5jb250cm9sLnZhbHVlOwogICAgdmFyIHNlbGVjdGVkSW5kZXggPSBjb21wb3NpdGlvbkFwaS5yZWYoY29udHJvbC5pbmRleE9mRml0dGluZ1NjaGVtYSB8fCAwKTsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgdXNlVnVldGlmeUNvbnRyb2woaW5wdXQpKSwge30sIHsKICAgICAgc2VsZWN0ZWRJbmRleDogc2VsZWN0ZWRJbmRleAogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgc3ViU2NoZW1hOiBmdW5jdGlvbiBzdWJTY2hlbWEoKSB7CiAgICAgIHJldHVybiBjb3JlLnJlc29sdmVTdWJTY2hlbWFzKHRoaXMuY29udHJvbC5zY2hlbWEsIHRoaXMuY29udHJvbC5yb290U2NoZW1hLCAnYW55T2YnKTsKICAgIH0sCiAgICBhbnlPZlJlbmRlckluZm9zOiBmdW5jdGlvbiBhbnlPZlJlbmRlckluZm9zKCkgewogICAgICByZXR1cm4gY29yZS5jcmVhdGVDb21iaW5hdG9yUmVuZGVySW5mb3ModGhpcy5zdWJTY2hlbWEuYW55T2YsIHRoaXMuY29udHJvbC5yb290U2NoZW1hLCAnYW55T2YnLCB0aGlzLmNvbnRyb2wudWlzY2hlbWEsIHRoaXMuY29udHJvbC5wYXRoLCB0aGlzLmNvbnRyb2wudWlzY2hlbWFzKTsKICAgIH0KICB9Cn0pOwp2YXIgZW50cnkkcCA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJHAsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDMsIGNvcmUuaXNBbnlPZkNvbnRyb2wpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJHEgPSBjb250cm9sUmVuZGVyZXIkcDsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyRxID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX3ZtLmNvbnRyb2wudmlzaWJsZSA/IF9jKCdkaXYnLCBbX2MoJ2NvbWJpbmF0b3ItcHJvcGVydGllcycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzY2hlbWEiOiBfdm0uc3ViU2NoZW1hLAogICAgICAiY29tYmluYXRvcktleXdvcmQiOiAiYW55T2YiLAogICAgICAicGF0aCI6IF92bS5wYXRoCiAgICB9CiAgfSksIF92bS5fdigiICIpLCBfYygndi10YWJzJywgewogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5zZWxlY3RlZEluZGV4LAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLnNlbGVjdGVkSW5kZXggPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJzZWxlY3RlZEluZGV4IgogICAgfQogIH0sIF92bS5fbChfdm0uYW55T2ZSZW5kZXJJbmZvcywgZnVuY3Rpb24gKGFueU9mUmVuZGVySW5mbywgYW55T2ZJbmRleCkgewogICAgcmV0dXJuIF9jKCd2LXRhYicsIHsKICAgICAga2V5OiBfdm0uY29udHJvbC5wYXRoICsgIi0iICsgYW55T2ZJbmRleAogICAgfSwgW192bS5fdigiXG4gICAgICAiICsgX3ZtLl9zKGFueU9mUmVuZGVySW5mby5sYWJlbCkgKyAiXG4gICAgIildKTsKICB9KSwgMSksIF92bS5fdigiICIpLCBfYygndi10YWJzLWl0ZW1zJywgewogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5zZWxlY3RlZEluZGV4LAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLnNlbGVjdGVkSW5kZXggPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJzZWxlY3RlZEluZGV4IgogICAgfQogIH0sIF92bS5fbChfdm0uYW55T2ZSZW5kZXJJbmZvcywgZnVuY3Rpb24gKGFueU9mUmVuZGVySW5mbywgYW55T2ZJbmRleCkgewogICAgcmV0dXJuIF9jKCd2LXRhYi1pdGVtJywgewogICAgICBrZXk6IF92bS5jb250cm9sLnBhdGggKyAiLSIgKyBhbnlPZkluZGV4CiAgICB9LCBbX3ZtLnNlbGVjdGVkSW5kZXggPT09IGFueU9mSW5kZXggPyBfYygnZGlzcGF0Y2gtcmVuZGVyZXInLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNjaGVtYSI6IGFueU9mUmVuZGVySW5mby5zY2hlbWEsCiAgICAgICAgInVpc2NoZW1hIjogYW55T2ZSZW5kZXJJbmZvLnVpc2NoZW1hLAogICAgICAgICJwYXRoIjogX3ZtLmNvbnRyb2wucGF0aCwKICAgICAgICAicmVuZGVyZXJzIjogX3ZtLmNvbnRyb2wucmVuZGVyZXJzLAogICAgICAgICJjZWxscyI6IF92bS5jb250cm9sLmNlbGxzCiAgICAgIH0KICAgIH0pIDogX3ZtLl9lKCldLCAxKTsKICB9KSwgMSldLCAxKSA6IF92bS5fZSgpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHEgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kcSA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRxID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kcSA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRxID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRxID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRxLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kcQp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kcSwgX192dWVfc2NyaXB0X18kcSwgX192dWVfc2NvcGVfaWRfXyRxLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kcSwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRxLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJG8gPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdhcnJheS1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBEaXNwYXRjaENlbGw6IHZ1ZTIuRGlzcGF0Y2hDZWxsLAogICAgRGlzcGF0Y2hSZW5kZXJlcjogdnVlMi5EaXNwYXRjaFJlbmRlcmVyLAogICAgVkNhcmQ6IGxpYi5WQ2FyZCwKICAgIFZDYXJkVGl0bGU6IGxpYi5WQ2FyZFRpdGxlLAogICAgVkNhcmRUZXh0OiBsaWIuVkNhcmRUZXh0LAogICAgVkF2YXRhcjogbGliLlZBdmF0YXIsCiAgICBWUm93OiBsaWIuVlJvdywKICAgIFZDb2w6IGxpYi5WQ29sLAogICAgVlRvb2xiYXI6IGxpYi5WVG9vbGJhciwKICAgIFZUb29sYmFyVGl0bGU6IGxpYi5WVG9vbGJhclRpdGxlLAogICAgVlRvb2x0aXA6IGxpYi5WVG9vbHRpcCwKICAgIFZJY29uOiBsaWIuVkljb24sCiAgICBWQnRuOiBsaWIuVkJ0biwKICAgIFZTcGFjZXI6IGxpYi5WU3BhY2VyLAogICAgVkNvbnRhaW5lcjogbGliLlZDb250YWluZXIsCiAgICBWYWxpZGF0aW9uSWNvbjogX192dWVfY29tcG9uZW50X18kQSwKICAgIFZhbGlkYXRpb25CYWRnZTogX192dWVfY29tcG9uZW50X18kQiwKICAgIFZTaW1wbGVUYWJsZTogbGliLlZTaW1wbGVUYWJsZQogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUFycmF5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0FycmF5Q29udHJvbChwcm9wcykpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFycmF5U2NoZW1hOiBmdW5jdGlvbiBhcnJheVNjaGVtYSgpIHsKICAgICAgcmV0dXJuIGNvcmUuUmVzb2x2ZS5zY2hlbWEodGhpcy5jb250cm9sLnJvb3RTY2hlbWEsIHRoaXMuY29udHJvbC51aXNjaGVtYS5zY29wZSwgdGhpcy5jb250cm9sLnJvb3RTY2hlbWEpOwogICAgfSwKICAgIG5vRGF0YTogZnVuY3Rpb24gbm9EYXRhKCkgewogICAgICByZXR1cm4gIXRoaXMuY29udHJvbC5kYXRhIHx8IHRoaXMuY29udHJvbC5kYXRhLmxlbmd0aCA9PT0gMDsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNvbXBvc2VQYXRoczogY29yZS5jb21wb3NlUGF0aHMsCiAgICBjcmVhdGVEZWZhdWx0VmFsdWU6IGNvcmUuY3JlYXRlRGVmYXVsdFZhbHVlLAogICAgYWRkQnV0dG9uQ2xpY2s6IGZ1bmN0aW9uIGFkZEJ1dHRvbkNsaWNrKCkgewogICAgICB0aGlzLmFkZEl0ZW0odGhpcy5jb250cm9sLnBhdGgsIGNvcmUuY3JlYXRlRGVmYXVsdFZhbHVlKHRoaXMuY29udHJvbC5zY2hlbWEpKSgpOwogICAgfSwKICAgIG1vdmVVcENsaWNrOiBmdW5jdGlvbiBtb3ZlVXBDbGljayhldmVudCwgdG9Nb3ZlKSB7CiAgICAgIHZhciBfdGhpcyRtb3ZlVXA7CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgKF90aGlzJG1vdmVVcCA9IHRoaXMubW92ZVVwKSA9PT0gbnVsbCB8fCBfdGhpcyRtb3ZlVXAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1vdmVVcC5jYWxsKHRoaXMsIHRoaXMuY29udHJvbC5wYXRoLCB0b01vdmUpKCk7CiAgICB9LAogICAgbW92ZURvd25DbGljazogZnVuY3Rpb24gbW92ZURvd25DbGljayhldmVudCwgdG9Nb3ZlKSB7CiAgICAgIHZhciBfdGhpcyRtb3ZlRG93bjsKCiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAoX3RoaXMkbW92ZURvd24gPSB0aGlzLm1vdmVEb3duKSA9PT0gbnVsbCB8fCBfdGhpcyRtb3ZlRG93biA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkbW92ZURvd24uY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdG9Nb3ZlKSgpOwogICAgfSwKICAgIHJlbW92ZUl0ZW1zQ2xpY2s6IGZ1bmN0aW9uIHJlbW92ZUl0ZW1zQ2xpY2soZXZlbnQsIHRvRGVsZXRlKSB7CiAgICAgIHZhciBfdGhpcyRyZW1vdmVJdGVtczsKCiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAoX3RoaXMkcmVtb3ZlSXRlbXMgPSB0aGlzLnJlbW92ZUl0ZW1zKSA9PT0gbnVsbCB8fCBfdGhpcyRyZW1vdmVJdGVtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkcmVtb3ZlSXRlbXMuY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdG9EZWxldGUpKCk7CiAgICB9LAogICAgZ2V0VmFsaWRDb2x1bW5Qcm9wczogZnVuY3Rpb24gZ2V0VmFsaWRDb2x1bW5Qcm9wcyhzY29wZWRTY2hlbWEpIHsKICAgICAgaWYgKHNjb3BlZFNjaGVtYS50eXBlID09PSAnb2JqZWN0JyAmJiBfdHlwZW9mKHNjb3BlZFNjaGVtYS5wcm9wZXJ0aWVzKSA9PT0gJ29iamVjdCcpIHsKICAgICAgICByZXR1cm4gT2JqZWN0LmtleXMoc2NvcGVkU2NoZW1hLnByb3BlcnRpZXMpLmZpbHRlcihmdW5jdGlvbiAocHJvcCkgewogICAgICAgICAgcmV0dXJuIHNjb3BlZFNjaGVtYS5wcm9wZXJ0aWVzW3Byb3BdLnR5cGUgIT09ICdhcnJheSc7CiAgICAgICAgfSk7CiAgICAgIH0gLy8gcHJpbWl0aXZlcwoKCiAgICAgIHJldHVybiBbJyddOwogICAgfSwKICAgIHRpdGxlOiBmdW5jdGlvbiB0aXRsZShwcm9wKSB7CiAgICAgIHZhciBfdGhpcyRjb250cm9sJHNjaGVtYSQsIF90aGlzJGNvbnRyb2wkc2NoZW1hJDIsIF90aGlzJGNvbnRyb2wkc2NoZW1hJDM7CgogICAgICByZXR1cm4gKF90aGlzJGNvbnRyb2wkc2NoZW1hJCA9IChfdGhpcyRjb250cm9sJHNjaGVtYSQyID0gdGhpcy5jb250cm9sLnNjaGVtYS5wcm9wZXJ0aWVzKSA9PT0gbnVsbCB8fCBfdGhpcyRjb250cm9sJHNjaGVtYSQyID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3RoaXMkY29udHJvbCRzY2hlbWEkMyA9IF90aGlzJGNvbnRyb2wkc2NoZW1hJDJbcHJvcF0pID09PSBudWxsIHx8IF90aGlzJGNvbnRyb2wkc2NoZW1hJDMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGNvbnRyb2wkc2NoZW1hJDMudGl0bGUpICE9PSBudWxsICYmIF90aGlzJGNvbnRyb2wkc2NoZW1hJCAhPT0gdm9pZCAwID8gX3RoaXMkY29udHJvbCRzY2hlbWEkIDogc3RhcnRDYXNlX19kZWZhdWx0WyJkZWZhdWx0Il0ocHJvcCk7CiAgICB9LAogICAgcmVzb2x2ZVVpU2NoZW1hOiBmdW5jdGlvbiByZXNvbHZlVWlTY2hlbWEocHJvcE5hbWUpIHsKICAgICAgcmV0dXJuIHRoaXMuY29udHJvbC5zY2hlbWEucHJvcGVydGllcyA/IHRoaXMuY29udHJvbFdpdGhvdXRMYWJlbCgiIy9wcm9wZXJ0aWVzLyIuY29uY2F0KHByb3BOYW1lKSkgOiB0aGlzLmNvbnRyb2xXaXRob3V0TGFiZWwoJyMnKTsKICAgIH0sCiAgICBjb250cm9sV2l0aG91dExhYmVsOiBmdW5jdGlvbiBjb250cm9sV2l0aG91dExhYmVsKHNjb3BlKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgdHlwZTogJ0NvbnRyb2wnLAogICAgICAgIHNjb3BlOiBzY29wZSwKICAgICAgICBsYWJlbDogZmFsc2UKICAgICAgfTsKICAgIH0KICB9Cn0pOwp2YXIgZW50cnkkbyA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJG8sCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDMsIGNvcmUub3IoY29yZS5pc09iamVjdEFycmF5Q29udHJvbCwgY29yZS5pc1ByaW1pdGl2ZUFycmF5Q29udHJvbCkpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJHAgPSBjb250cm9sUmVuZGVyZXIkbzsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyRwID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX3ZtLmNvbnRyb2wudmlzaWJsZSA/IF9jKCd2LWNhcmQnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5yb290LAogICAgYXR0cnM6IHsKICAgICAgImVsZXZhdGlvbiI6ICIwIgogICAgfQogIH0sIFtfYygndi1jYXJkLXRpdGxlJywgW19jKCd2LXRvb2xiYXInLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC50b29sYmFyLAogICAgYXR0cnM6IHsKICAgICAgImZsYXQiOiAiIgogICAgfQogIH0sIFtfYygndi10b29sYmFyLXRpdGxlJywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QubGFiZWwKICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uY29tcHV0ZWRMYWJlbCkpXSksIF92bS5fdigiICIpLCBfdm0uY29udHJvbC5jaGlsZEVycm9ycy5sZW5ndGggPiAwID8gX2MoJ3ZhbGlkYXRpb24taWNvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJlcnJvcnMiOiBfdm0uY29udHJvbC5jaGlsZEVycm9ycwogICAgfQogIH0pIDogX3ZtLl9lKCksIF92bS5fdigiICIpLCBfYygndi1zcGFjZXInKSwgX3ZtLl92KCIgIiksIF9jKCd2LXRvb2x0aXAnLCB7CiAgICBhdHRyczogewogICAgICAiYm90dG9tIjogIiIKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgIHJldHVybiBbX2MoJ3YtYnRuJywgX3ZtLl9nKHsKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0LmFkZEJ1dHRvbiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJmYWIiOiAiIiwKICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgInNtYWxsIjogIiIsCiAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkFkZCB0byAiICsgX3ZtLmNvbnRyb2wubGFiZWwsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkIHx8IF92bS5hcHBsaWVkT3B0aW9ucy5yZXN0cmljdCAmJiBfdm0uYXJyYXlTY2hlbWEgIT09IHVuZGVmaW5lZCAmJiBfdm0uYXJyYXlTY2hlbWEubWF4SXRlbXMgIT09IHVuZGVmaW5lZCAmJiBfdm0uY29udHJvbC5kYXRhLmxlbmd0aCA+PSBfdm0uYXJyYXlTY2hlbWEubWF4SXRlbXMKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2xpY2siOiBfdm0uYWRkQnV0dG9uQ2xpY2sKICAgICAgICAgIH0KICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIFtfdm0uX3YoIm1kaS1wbHVzIildKV0sIDEpXTsKICAgICAgfQogICAgfV0sIG51bGwsIGZhbHNlLCAzMDAxNTM1MDM1KQogIH0sIFtfdm0uX3YoIlxuICAgICAgICAiICsgX3ZtLl9zKCJBZGQgdG8gIiArIF92bS5jb250cm9sLmxhYmVsKSArICJcbiAgICAgICIpXSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtY2FyZC10ZXh0JywgW19jKCd2LWNvbnRhaW5lcicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJqdXN0aWZ5LXNwYWNlLWFyb3VuZCI6ICIiLAogICAgICAiYWxpZ24tY29udGVudC1jZW50ZXIiOiAiIgogICAgfQogIH0sIFtfYygndi1yb3cnLCB7CiAgICBhdHRyczogewogICAgICAianVzdGlmeSI6ICJjZW50ZXIiCiAgICB9CiAgfSwgW19jKCd2LXNpbXBsZS10YWJsZScsIHsKICAgIHN0YXRpY0NsYXNzOiAiYXJyYXktY29udGFpbmVyIGZsZXgiCiAgfSwgW192bS5jb250cm9sLnNjaGVtYS50eXBlID09PSAnb2JqZWN0JyA/IF9jKCd0aGVhZCcsIFtfYygndHInLCBbX3ZtLl9sKF92bS5nZXRWYWxpZENvbHVtblByb3BzKF92bS5jb250cm9sLnNjaGVtYSksIGZ1bmN0aW9uIChwcm9wLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCd0aCcsIHsKICAgICAga2V5OiBfdm0uY29udHJvbC5wYXRoICsgIi1oZWFkZXItIiArIGluZGV4LAogICAgICBhdHRyczogewogICAgICAgICJzY29wZSI6ICJjb2wiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIlxuICAgICAgICAgICAgICAgICIgKyBfdm0uX3MoX3ZtLnRpdGxlKHByb3ApKSArICJcbiAgICAgICAgICAgICAgIildKTsKICB9KSwgX3ZtLl92KCIgIiksIF92bS5jb250cm9sLmVuYWJsZWQgPyBfYygndGgnLCB7CiAgICAiY2xhc3MiOiBfdm0uYXBwbGllZE9wdGlvbnMuc2hvd1NvcnRCdXR0b25zID8gJ2ZpeGVkLWNlbGwnIDogJ2ZpeGVkLWNlbGwtc21hbGwnLAogICAgYXR0cnM6IHsKICAgICAgInNjb3BlIjogImNvbCIKICAgIH0KICB9KSA6IF92bS5fZSgpXSwgMildKSA6IF92bS5fZSgpLCBfdm0uX3YoIiAiKSwgX2MoJ3Rib2R5JywgX3ZtLl9sKF92bS5jb250cm9sLmRhdGEsIGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCkgewogICAgcmV0dXJuIF9jKCd0cicsIHsKICAgICAga2V5OiBfdm0uY29udHJvbC5wYXRoICsgIi0iICsgaW5kZXgsCiAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lml0ZW0KICAgIH0sIFtfdm0uX2woX3ZtLmdldFZhbGlkQ29sdW1uUHJvcHMoX3ZtLmNvbnRyb2wuc2NoZW1hKSwgZnVuY3Rpb24gKHByb3BOYW1lKSB7CiAgICAgIHJldHVybiBfYygndGQnLCB7CiAgICAgICAga2V5OiBfdm0uY29tcG9zZVBhdGhzKF92bS5jb21wb3NlUGF0aHMoX3ZtLmNvbnRyb2wucGF0aCwgIiIgKyBpbmRleCksIHByb3BOYW1lKQogICAgICB9LCBbX2MoJ2Rpc3BhdGNoLXJlbmRlcmVyJywgewogICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAic2NoZW1hIjogX3ZtLmNvbnRyb2wuc2NoZW1hLAogICAgICAgICAgInVpc2NoZW1hIjogX3ZtLnJlc29sdmVVaVNjaGVtYShwcm9wTmFtZSksCiAgICAgICAgICAicGF0aCI6IF92bS5jb21wb3NlUGF0aHMoX3ZtLmNvbnRyb2wucGF0aCwgIiIgKyBpbmRleCksCiAgICAgICAgICAiZW5hYmxlZCI6IF92bS5jb250cm9sLmVuYWJsZWQsCiAgICAgICAgICAicmVuZGVyZXJzIjogX3ZtLmNvbnRyb2wucmVuZGVyZXJzLAogICAgICAgICAgImNlbGxzIjogX3ZtLmNvbnRyb2wuY2VsbHMKICAgICAgICB9CiAgICAgIH0pXSwgMSk7CiAgICB9KSwgX3ZtLl92KCIgIiksIF92bS5jb250cm9sLmVuYWJsZWQgPyBfYygndGQnLCB7CiAgICAgICJjbGFzcyI6IF92bS5hcHBsaWVkT3B0aW9ucy5zaG93U29ydEJ1dHRvbnMgPyAnZml4ZWQtY2VsbCcgOiAnZml4ZWQtY2VsbC1zbWFsbCcKICAgIH0sIFtfYygndi10b29sdGlwJywgewogICAgICBhdHRyczogewogICAgICAgICJib3R0b20iOiAiIgogICAgICB9LAogICAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgICAgcmV0dXJuIFtfdm0uYXBwbGllZE9wdGlvbnMuc2hvd1NvcnRCdXR0b25zID8gX2MoJ3YtYnRuJywgX3ZtLl9nKHsKICAgICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QuaXRlbU1vdmVVcCwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAiZmFiIjogIiIsCiAgICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAgICJzbWFsbCI6ICIiLAogICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIk1vdmUgdXAiLAogICAgICAgICAgICAgICJkaXNhYmxlZCI6IGluZGV4IDw9IDAgfHwgIV92bS5jb250cm9sLmVuYWJsZWQKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubW92ZVVwQ2xpY2soJGV2ZW50LCBpbmRleCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1hcnJvdy11cCIpXSldLCAxKSA6IF92bS5fZSgpXTsKICAgICAgICB9CiAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICBNb3ZlIFVwXG4gICAgICAgICAgICAgICAgIildKSwgX3ZtLl92KCIgIiksIF9jKCd2LXRvb2x0aXAnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImJvdHRvbSI6ICIiCiAgICAgIH0sCiAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAgICBrZXk6ICJhY3RpdmF0b3IiLAogICAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgICByZXR1cm4gW192bS5hcHBsaWVkT3B0aW9ucy5zaG93U29ydEJ1dHRvbnMgPyBfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5pdGVtTW92ZURvd24sCiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAgICJ0ZXh0IjogIiIsCiAgICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgICAiYXJpYS1sYWJlbCI6ICJNb3ZlIGRvd24iLAogICAgICAgICAgICAgICJkaXNhYmxlZCI6IGluZGV4ID49IF92bS5jb250cm9sLmRhdGEubGVuZ3RoIC0gMSB8fCAhX3ZtLmNvbnRyb2wuZW5hYmxlZAogICAgICAgICAgICB9LAogICAgICAgICAgICBuYXRpdmVPbjogewogICAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF92bS5tb3ZlRG93bkNsaWNrKCRldmVudCwgaW5kZXgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgb25Ub29sdGlwKSwgW19jKCd2LWljb24nLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibm90cmFuc2xhdGUiCiAgICAgICAgICB9LCBbX3ZtLl92KCJtZGktYXJyb3ctZG93biIpXSldLCAxKSA6IF92bS5fZSgpXTsKICAgICAgICB9CiAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICBNb3ZlIERvd25cbiAgICAgICAgICAgICAgICAiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3YtdG9vbHRpcCcsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiYm90dG9tIjogIiIKICAgICAgfSwKICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgICAgZm46IGZ1bmN0aW9uIGZuKHJlZikgewogICAgICAgICAgdmFyIG9uVG9vbHRpcCA9IHJlZi5vbjsKICAgICAgICAgIHJldHVybiBbX2MoJ3YtYnRuJywgX3ZtLl9nKHsKICAgICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QuaXRlbURlbGV0ZSwKICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAiZmFiIjogIiIsCiAgICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgICAiZWxldmF0aW9uIjogIjAiLAogICAgICAgICAgICAgICJzbWFsbCI6ICIiLAogICAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkRlbGV0ZSIsCiAgICAgICAgICAgICAgImRpc2FibGVkIjogIV92bS5jb250cm9sLmVuYWJsZWQgfHwgX3ZtLmFwcGxpZWRPcHRpb25zLnJlc3RyaWN0ICYmIF92bS5hcnJheVNjaGVtYSAhPT0gdW5kZWZpbmVkICYmIF92bS5hcnJheVNjaGVtYS5taW5JdGVtcyAhPT0gdW5kZWZpbmVkICYmIF92bS5jb250cm9sLmRhdGEubGVuZ3RoIDw9IF92bS5hcnJheVNjaGVtYS5taW5JdGVtcwogICAgICAgICAgICB9LAogICAgICAgICAgICBuYXRpdmVPbjogewogICAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZW1vdmVJdGVtc0NsaWNrKCRldmVudCwgW2luZGV4XSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1kZWxldGUiKV0pXSwgMSldOwogICAgICAgIH0KICAgICAgfV0sIG51bGwsIHRydWUpCiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgIERlbGV0ZVxuICAgICAgICAgICAgICAgICIpXSldLCAxKSA6IF92bS5fZSgpXSwgMik7CiAgfSksIDApXSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX3ZtLm5vRGF0YSA/IF9jKCd2LWNvbnRhaW5lcicsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lm5vRGF0YQogIH0sIFtfdm0uX3YoIlxuICAgICAgTm8gZGF0YVxuICAgICIpXSkgOiBfdm0uX2UoKV0sIDEpXSwgMSkgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRwID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJHAgPSBmdW5jdGlvbiBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18oaW5qZWN0KSB7CiAgaWYgKCFpbmplY3QpIHJldHVybjsKICBpbmplY3QoImRhdGEtdi03N2FmMTc3ZF8wIiwgewogICAgc291cmNlOiAiLmZpeGVkLWNlbGxbZGF0YS12LTc3YWYxNzdkXXt3aWR0aDoxNTBweDtoZWlnaHQ6NTBweDtwYWRkaW5nLWxlZnQ6MCFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDowIWltcG9ydGFudDt0ZXh0LWFsaWduOmNlbnRlcn0uZml4ZWQtY2VsbC1zbWFsbFtkYXRhLXYtNzdhZjE3N2Rde3dpZHRoOjUwcHg7aGVpZ2h0OjUwcHg7cGFkZGluZy1sZWZ0OjAhaW1wb3J0YW50O3BhZGRpbmctcmlnaHQ6MCFpbXBvcnRhbnQ7dGV4dC1hbGlnbjpjZW50ZXJ9LmFycmF5LWNvbnRhaW5lciB0Ym9keSB0ciB0ZFtkYXRhLXYtNzdhZjE3N2Rde2JvcmRlci1ib3R0b206bm9uZSFpbXBvcnRhbnR9LmFycmF5LWNvbnRhaW5lciB0Ym9keSB0ciB0ZCAuY29udGFpbmVyW2RhdGEtdi03N2FmMTc3ZF17cGFkZGluZzowO21hcmdpbjowfSIsCiAgICBtYXA6IHVuZGVmaW5lZCwKICAgIG1lZGlhOiB1bmRlZmluZWQKICB9KTsKfTsKLyogc2NvcGVkICovCgoKdmFyIF9fdnVlX3Njb3BlX2lkX18kcCA9ICJkYXRhLXYtNzdhZjE3N2QiOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kcCA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRwID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kcCA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kcCwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJHAKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJHAsIF9fdnVlX3NjcmlwdF9fJHAsIF9fdnVlX3Njb3BlX2lkX18kcCwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJHAsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kcCwgZmFsc2UsIGNyZWF0ZUluamVjdG9yLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgdXNlSnNvbkZvcm1zTXVsdGlFbnVtQ29udHJvbCA9IGZ1bmN0aW9uIHVzZUpzb25Gb3Jtc011bHRpRW51bUNvbnRyb2wocHJvcHMpIHsKICByZXR1cm4gdnVlMi51c2VDb250cm9sKHByb3BzLCBjb3JlLm1hcFN0YXRlVG9NdWx0aUVudW1Db250cm9sUHJvcHMsIGNvcmUubWFwRGlzcGF0Y2hUb011bHRpRW51bVByb3BzKTsKfTsKCnZhciBjb250cm9sUmVuZGVyZXIkbiA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2VudW0tYXJyYXktcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIERpc3BhdGNoUmVuZGVyZXI6IHZ1ZTIuRGlzcGF0Y2hSZW5kZXJlciwKICAgIFZDaGVja2JveDogbGliLlZDaGVja2JveCwKICAgIFZDb250YWluZXI6IGxpYi5WQ29udGFpbmVyLAogICAgVlJvdzogbGliLlZSb3csCiAgICBWQ29sOiBsaWIuVkNvbAogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUJhc2ljQ29udHJvbCh1c2VKc29uRm9ybXNNdWx0aUVudW1Db250cm9sKHByb3BzKSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBkYXRhSGFzRW51bTogZnVuY3Rpb24gZGF0YUhhc0VudW0odmFsdWUpIHsKICAgICAgdmFyIF90aGlzJGNvbnRyb2wkZGF0YTsKCiAgICAgIHJldHVybiAhISgoX3RoaXMkY29udHJvbCRkYXRhID0gdGhpcy5jb250cm9sLmRhdGEpICE9PSBudWxsICYmIF90aGlzJGNvbnRyb2wkZGF0YSAhPT0gdm9pZCAwICYmIF90aGlzJGNvbnRyb2wkZGF0YS5pbmNsdWRlcyh2YWx1ZSkpOwogICAgfSwKICAgIGNvbXBvc2VQYXRoczogY29yZS5jb21wb3NlUGF0aHMsCiAgICB0b2dnbGU6IGZ1bmN0aW9uIHRvZ2dsZSh2YWx1ZSwgYWRkKSB7CiAgICAgIGlmIChhZGQpIHsKICAgICAgICB0aGlzLmFkZEl0ZW0odGhpcy5jb250cm9sLnBhdGgsIHZhbHVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgX3RoaXMkcmVtb3ZlSXRlbTsgLy8gbWlzdHlwZWQgaW4gY29yZQoKCiAgICAgICAgKF90aGlzJHJlbW92ZUl0ZW0gPSB0aGlzLnJlbW92ZUl0ZW0pID09PSBudWxsIHx8IF90aGlzJHJlbW92ZUl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHJlbW92ZUl0ZW0uY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdmFsdWUpOwogICAgICB9CiAgICB9CiAgfQp9KTsKCnZhciBoYXNPbmVPZkl0ZW1zID0gZnVuY3Rpb24gaGFzT25lT2ZJdGVtcyhzY2hlbWEpIHsKICByZXR1cm4gc2NoZW1hLm9uZU9mICE9PSB1bmRlZmluZWQgJiYgc2NoZW1hLm9uZU9mLmxlbmd0aCA+IDAgJiYgc2NoZW1hLm9uZU9mLmV2ZXJ5KGZ1bmN0aW9uIChlbnRyeSkgewogICAgcmV0dXJuIGVudHJ5WyJjb25zdCJdICE9PSB1bmRlZmluZWQ7CiAgfSk7Cn07Cgp2YXIgaGFzRW51bUl0ZW1zID0gZnVuY3Rpb24gaGFzRW51bUl0ZW1zKHNjaGVtYSkgewogIHJldHVybiBzY2hlbWEudHlwZSA9PT0gJ3N0cmluZycgJiYgc2NoZW1hWyJlbnVtIl0gIT09IHVuZGVmaW5lZDsKfTsKCnZhciBlbnRyeSRuID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkbiwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoNSwgY29yZS5hbmQoY29yZS51aVR5cGVJcygnQ29udHJvbCcpLCBjb3JlLmFuZChjb3JlLnNjaGVtYU1hdGNoZXMoZnVuY3Rpb24gKHNjaGVtYSkgewogICAgcmV0dXJuIGNvcmUuaGFzVHlwZShzY2hlbWEsICdhcnJheScpICYmICFBcnJheS5pc0FycmF5KHNjaGVtYS5pdGVtcykgJiYgc2NoZW1hLnVuaXF1ZUl0ZW1zID09PSB0cnVlOwogIH0pLCBjb3JlLnNjaGVtYVN1YlBhdGhNYXRjaGVzKCdpdGVtcycsIGZ1bmN0aW9uIChzY2hlbWEpIHsKICAgIHJldHVybiBoYXNPbmVPZkl0ZW1zKHNjaGVtYSkgfHwgaGFzRW51bUl0ZW1zKHNjaGVtYSk7CiAgfSkpKSkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kbyA9IGNvbnRyb2xSZW5kZXJlciRuOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJG8gPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0uY29udHJvbC52aXNpYmxlID8gX2MoJ3YtY29udGFpbmVyJywgewogICAgYXR0cnM6IHsKICAgICAgImZsdWlkIjogIiIKICAgIH0KICB9LCBbX2MoJ3Ytcm93JywgX3ZtLl9sKF92bS5jb250cm9sLm9wdGlvbnMsIGZ1bmN0aW9uIChvLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCd2LWNvbCcsIHsKICAgICAga2V5OiBvLnZhbHVlCiAgICB9LCBbX2MoJ3YtY2hlY2tib3gnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImxhYmVsIjogby5sYWJlbCwKICAgICAgICAiaW5wdXQtdmFsdWUiOiBfdm0uZGF0YUhhc0VudW0oby52YWx1ZSksCiAgICAgICAgImlkIjogX3ZtLmNvbnRyb2wuaWQgKyAiLWlucHV0LSIgKyBpbmRleCwKICAgICAgICAicGF0aCI6IF92bS5jb21wb3NlUGF0aHMoX3ZtLmNvbnRyb2wucGF0aCwgIiIgKyBpbmRleCksCiAgICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzLAogICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICJpbmRldGVybWluYXRlIjogX3ZtLmNvbnRyb2wuZGF0YSA9PT0gdW5kZWZpbmVkCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgImNoYW5nZSI6IGZ1bmN0aW9uIGNoYW5nZSh2YWx1ZSkgewogICAgICAgICAgcmV0dXJuIF92bS50b2dnbGUoby52YWx1ZSwgdmFsdWUpOwogICAgICAgIH0KICAgICAgfQogICAgfSldLCAxKTsKICB9KSwgMSldLCAxKSA6IF92bS5fZSgpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJG8gPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kbyA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRvID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kbyA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRvID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRvID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRvLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kbwp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kbywgX192dWVfc2NyaXB0X18kbywgX192dWVfc2NvcGVfaWRfXyRvLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kbywgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRvLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJG0gPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdvYmplY3QtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIERpc3BhdGNoUmVuZGVyZXI6IHZ1ZTIuRGlzcGF0Y2hSZW5kZXJlcgogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNDb250cm9sV2l0aERldGFpbChwcm9wcykpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRldGFpbFVpU2NoZW1hOiBmdW5jdGlvbiBkZXRhaWxVaVNjaGVtYSgpIHsKICAgICAgdmFyIHJlc3VsdCA9IGNvcmUuZmluZFVJU2NoZW1hKHRoaXMuY29udHJvbC51aXNjaGVtYXMsIHRoaXMuY29udHJvbC5zY2hlbWEsIHRoaXMuY29udHJvbC51aXNjaGVtYS5zY29wZSwgdGhpcy5jb250cm9sLnBhdGgsICdHcm91cCcsIHRoaXMuY29udHJvbC51aXNjaGVtYSwgdGhpcy5jb250cm9sLnJvb3RTY2hlbWEpOwoKICAgICAgaWYgKGlzRW1wdHlfX2RlZmF1bHRbImRlZmF1bHQiXSh0aGlzLmNvbnRyb2wucGF0aCkpIHsKICAgICAgICByZXN1bHQudHlwZSA9ICdWZXJ0aWNhbExheW91dCc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0LmxhYmVsID0gdGhpcy5jb250cm9sLmxhYmVsOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogIH0KfSk7CnZhciBlbnRyeSRtID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkbSwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMiwgY29yZS5pc09iamVjdENvbnRyb2wpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJG4gPSBjb250cm9sUmVuZGVyZXIkbTsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyRuID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX3ZtLmNvbnRyb2wudmlzaWJsZSA/IF9jKCdkaXYnLCBbX2MoJ2Rpc3BhdGNoLXJlbmRlcmVyJywgewogICAgYXR0cnM6IHsKICAgICAgInZpc2libGUiOiBfdm0uY29udHJvbC52aXNpYmxlLAogICAgICAiZW5hYmxlZCI6IF92bS5jb250cm9sLmVuYWJsZWQsCiAgICAgICJzY2hlbWEiOiBfdm0uY29udHJvbC5zY2hlbWEsCiAgICAgICJ1aXNjaGVtYSI6IF92bS5kZXRhaWxVaVNjaGVtYSwKICAgICAgInBhdGgiOiBfdm0uY29udHJvbC5wYXRoLAogICAgICAicmVuZGVyZXJzIjogX3ZtLmNvbnRyb2wucmVuZGVyZXJzLAogICAgICAiY2VsbHMiOiBfdm0uY29udHJvbC5jZWxscwogICAgfQogIH0pXSwgMSkgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRuID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJG4gPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kbiA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJG4gPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kbiA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kbiA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kbiwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJG4KfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJG4sIF9fdnVlX3NjcmlwdF9fJG4sIF9fdnVlX3Njb3BlX2lkX18kbiwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJG4sIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kbiwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOyAvLyBjdXJyZW50bHkgdXNlZCBpbiBoYW5kbGVUYWJDaGFuZ2Ugd2hlbiBzd2l0Y2hpbmcgdG8gdGhlIG5leHQgdGFiIGFuZCBkYXRhIG5lZWRzIHRvIGJlIGNsZWFyZWQgYnV0IG5vIGRhdGEgY2hhbmdlZCBzaG91bGQgaGFwcGVuZAovLyBmb3IgZXhhbXBsZSB3aGVuIHRoZSBKc29uRm9ybSBpcyBpbiByZWFkIG9ubHkgc3RhdGUgbm8gZGF0YSBzaG91bGQgYmUgbW9kaWZpZWQKCgp2YXIgaXNDb250cm9sRW5hYmxlZCA9IGZ1bmN0aW9uIGlzQ29udHJvbEVuYWJsZWQob3duUHJvcHMsIGpzb25mb3JtcykgewogIHZhciBzdGF0ZSA9IHsKICAgIGpzb25mb3JtczoganNvbmZvcm1zCiAgfTsKICB2YXIgY29uZmlnID0gY29yZS5nZXRDb25maWcoc3RhdGUpOwogIHZhciByb290RGF0YSA9IGNvcmUuZ2V0RGF0YShzdGF0ZSk7CiAgdmFyIHVpc2NoZW1hID0gb3duUHJvcHMudWlzY2hlbWE7CiAgdmFyIHJvb3RTY2hlbWEgPSBjb3JlLmdldFNjaGVtYShzdGF0ZSk7CiAgcmV0dXJuIGNvcmUuaXNJbmhlcmVudGx5RW5hYmxlZChzdGF0ZSwgb3duUHJvcHMsIHVpc2NoZW1hLCBvd25Qcm9wcy5zY2hlbWEgfHwgcm9vdFNjaGVtYSwgcm9vdERhdGEsIGNvbmZpZyk7Cn07Cgp2YXIgY29udHJvbFJlbmRlcmVyJGwgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdvbmUtb2YtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIERpc3BhdGNoUmVuZGVyZXI6IHZ1ZTIuRGlzcGF0Y2hSZW5kZXJlciwKICAgIENvbWJpbmF0b3JQcm9wZXJ0aWVzOiBfX3Z1ZV9jb21wb25lbnRfXyRyLAogICAgVkRpYWxvZzogbGliLlZEaWFsb2csCiAgICBWQ2FyZDogbGliLlZDYXJkLAogICAgVkNhcmRUaXRsZTogbGliLlZDYXJkVGl0bGUsCiAgICBWQ2FyZFRleHQ6IGxpYi5WQ2FyZFRleHQsCiAgICBWQ2FyZEFjdGlvbnM6IGxpYi5WQ2FyZEFjdGlvbnMsCiAgICBWU3BhY2VyOiBsaWIuVlNwYWNlciwKICAgIFZCdG46IGxpYi5WQnRuLAogICAgVlRhYnM6IGxpYi5WVGFicywKICAgIFZUYWI6IGxpYi5WVGFiLAogICAgVlRhYnNJdGVtczogbGliLlZUYWJzSXRlbXMsCiAgICBWVGFiSXRlbTogbGliLlZUYWJJdGVtCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHZhciBpbnB1dCA9IHZ1ZTIudXNlSnNvbkZvcm1zT25lT2ZDb250cm9sKHByb3BzKTsKICAgIHZhciBjb250cm9sID0gaW5wdXQuY29udHJvbC52YWx1ZTsKICAgIHZhciBzZWxlY3RlZEluZGV4ID0gY29tcG9zaXRpb25BcGkucmVmKGNvbnRyb2wuaW5kZXhPZkZpdHRpbmdTY2hlbWEgfHwgMCk7CiAgICB2YXIgdGFiSW5kZXggPSBjb21wb3NpdGlvbkFwaS5yZWYoc2VsZWN0ZWRJbmRleC52YWx1ZSk7CiAgICB2YXIgbmV3U2VsZWN0ZWRJbmRleCA9IGNvbXBvc2l0aW9uQXBpLnJlZigwKTsKICAgIHZhciBkaWFsb2cgPSBjb21wb3NpdGlvbkFwaS5yZWYoZmFsc2UpOyAvLyBUT0RPOiBvbmNlIHRoZSBlbmFibGVkIHByb3BlcnR5IGlzIG1hcHBlZCBieSBKc29uRm9ybXMgY29yZSB3ZSBjYW4gcmVtb3ZlIHRoaXMganNvbmZvcm1zIGFuZCBjb250cm9sRW5hYmxlZCB2YXJpYWJsZXMKCiAgICB2YXIganNvbmZvcm1zID0gY29tcG9zaXRpb25BcGkuaW5qZWN0KCdqc29uZm9ybXMnKTsKCiAgICBpZiAoIWpzb25mb3JtcykgewogICAgICB0aHJvdyBuZXcgRXJyb3IoIidqc29uZm9ybXMnIGNvdWxkbid0IGJlIGluamVjdGVkLiBBcmUgeW91IHdpdGhpbiBKU09OIEZvcm1zPyIpOwogICAgfQoKICAgIHZhciBjb250cm9sRW5hYmxlZCA9IGNvbXBvc2l0aW9uQXBpLmNvbXB1dGVkKGZ1bmN0aW9uICgpIHsKICAgICAgcmV0dXJuIGlzQ29udHJvbEVuYWJsZWQocHJvcHMsIGpzb25mb3Jtcyk7CiAgICB9KTsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgdXNlVnVldGlmeUNvbnRyb2woaW5wdXQpKSwge30sIHsKICAgICAgc2VsZWN0ZWRJbmRleDogc2VsZWN0ZWRJbmRleCwKICAgICAgdGFiSW5kZXg6IHRhYkluZGV4LAogICAgICBkaWFsb2c6IGRpYWxvZywKICAgICAgbmV3U2VsZWN0ZWRJbmRleDogbmV3U2VsZWN0ZWRJbmRleCwKICAgICAgY29udHJvbEVuYWJsZWQ6IGNvbnRyb2xFbmFibGVkCiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdWJTY2hlbWE6IGZ1bmN0aW9uIHN1YlNjaGVtYSgpIHsKICAgICAgcmV0dXJuIGNvcmUucmVzb2x2ZVN1YlNjaGVtYXModGhpcy5jb250cm9sLnNjaGVtYSwgdGhpcy5jb250cm9sLnJvb3RTY2hlbWEsICdvbmVPZicpOwogICAgfSwKICAgIG9uZU9mUmVuZGVySW5mb3M6IGZ1bmN0aW9uIG9uZU9mUmVuZGVySW5mb3MoKSB7CiAgICAgIHJldHVybiBjb3JlLmNyZWF0ZUNvbWJpbmF0b3JSZW5kZXJJbmZvcyh0aGlzLnN1YlNjaGVtYS5vbmVPZiwgdGhpcy5jb250cm9sLnJvb3RTY2hlbWEsICdvbmVPZicsIHRoaXMuY29udHJvbC51aXNjaGVtYSwgdGhpcy5jb250cm9sLnBhdGgsIHRoaXMuY29udHJvbC51aXNjaGVtYXMpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgaGFuZGxlVGFiQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVUYWJDaGFuZ2UoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7IC8vIFRPRE8gY2hhbmdlIHRoaXMuY29udHJvbEVuYWJsZWQgdG8gdGhpcy5jb250cm9sLmVuYWJsZWQgb25jZSB0aGlzIGlzIHN1cHBvcmVkIGJ5IEpzb25Gb3JtcyBjb3JlIC0gc2VlIGFib3ZlIFRPRE8gY29tbWVudHMKCgogICAgICBpZiAodGhpcy5jb250cm9sRW5hYmxlZCAmJiAhaXNFbXB0eV9fZGVmYXVsdFsiZGVmYXVsdCJdKHRoaXMuY29udHJvbC5kYXRhKSkgewogICAgICAgIHRoaXMuZGlhbG9nID0gdHJ1ZTsKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpcy5uZXdTZWxlY3RlZEluZGV4ID0gX3RoaXMudGFiSW5kZXg7IC8vIHJldmVydCB0aGUgc2VsZWN0aW9uIHdoaWxlIHRoZSBkaWFsb2cgaXMgb3BlbgoKICAgICAgICAgIF90aGlzLnRhYkluZGV4ID0gX3RoaXMuc2VsZWN0ZWRJbmRleDsKICAgICAgICB9KTsgLy8gdGhpcy4kbmV4dFRpY2sgZG9lcyBub3Qgd29yayBzbyB1c2Ugc2V0VGltZW91dAoKICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgIHJldHVybiBfdGhpcy4kcmVmcy5jb25maXJtLiRlbC5mb2N1cygpOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzLnNlbGVjdGVkSW5kZXggPSBfdGhpcy50YWJJbmRleDsKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGNvbmZpcm06IGZ1bmN0aW9uIGNvbmZpcm0oX2V2ZW50KSB7CiAgICAgIHRoaXMub3Blbk5ld1RhYigpOwogICAgICB0aGlzLmRpYWxvZyA9IGZhbHNlOwogICAgfSwKICAgIGNhbmNlbDogZnVuY3Rpb24gY2FuY2VsKF9ldmVudCkgewogICAgICB0aGlzLm5ld1NlbGVjdGVkSW5kZXggPSB0aGlzLnNlbGVjdGVkSW5kZXg7CiAgICAgIHRoaXMuZGlhbG9nID0gZmFsc2U7CiAgICB9LAogICAgb3Blbk5ld1RhYjogZnVuY3Rpb24gb3Blbk5ld1RhYigpIHsKICAgICAgdGhpcy5oYW5kbGVDaGFuZ2UodGhpcy5wYXRoLCBjb3JlLmNyZWF0ZURlZmF1bHRWYWx1ZSh0aGlzLmNvbnRyb2wuc2NoZW1hLm9uZU9mW3RoaXMubmV3U2VsZWN0ZWRJbmRleF0pKTsKICAgICAgdGhpcy50YWJJbmRleCA9IHRoaXMubmV3U2VsZWN0ZWRJbmRleDsKICAgICAgdGhpcy5zZWxlY3RlZEluZGV4ID0gdGhpcy5uZXdTZWxlY3RlZEluZGV4OwogICAgfQogIH0KfSk7CnZhciBlbnRyeSRsID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkbCwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMywgY29yZS5pc09uZU9mQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kbSA9IGNvbnRyb2xSZW5kZXJlciRsOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJG0gPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfdm0uY29udHJvbC52aXNpYmxlID8gX2MoJ2RpdicsIFtfYygnY29tYmluYXRvci1wcm9wZXJ0aWVzJywgewogICAgYXR0cnM6IHsKICAgICAgInNjaGVtYSI6IF92bS5zdWJTY2hlbWEsCiAgICAgICJjb21iaW5hdG9yS2V5d29yZCI6ICJvbmVPZiIsCiAgICAgICJwYXRoIjogX3ZtLnBhdGgKICAgIH0KICB9KSwgX3ZtLl92KCIgIiksIF9jKCd2LXRhYnMnLCB7CiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLnRhYkluZGV4LAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLnRhYkluZGV4ID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAidGFiSW5kZXgiCiAgICB9CiAgfSwgX3ZtLl9sKF92bS5vbmVPZlJlbmRlckluZm9zLCBmdW5jdGlvbiAob25lT2ZSZW5kZXJJbmZvLCBvbmVPZkluZGV4KSB7CiAgICByZXR1cm4gX2MoJ3YtdGFiJywgewogICAgICBrZXk6IF92bS5jb250cm9sLnBhdGggKyAiLSIgKyBvbmVPZkluZGV4LAogICAgICBvbjogewogICAgICAgICJjaGFuZ2UiOiBfdm0uaGFuZGxlVGFiQ2hhbmdlCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIlxuICAgICAgIiArIF92bS5fcyhvbmVPZlJlbmRlckluZm8ubGFiZWwpICsgIlxuICAgICIpXSk7CiAgfSksIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtdGFicy1pdGVtcycsIHsKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0uc2VsZWN0ZWRJbmRleCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS5zZWxlY3RlZEluZGV4ID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAic2VsZWN0ZWRJbmRleCIKICAgIH0KICB9LCBfdm0uX2woX3ZtLm9uZU9mUmVuZGVySW5mb3MsIGZ1bmN0aW9uIChvbmVPZlJlbmRlckluZm8sIG9uZU9mSW5kZXgpIHsKICAgIHJldHVybiBfYygndi10YWItaXRlbScsIHsKICAgICAga2V5OiBfdm0uY29udHJvbC5wYXRoICsgIi0iICsgb25lT2ZJbmRleAogICAgfSwgW192bS5zZWxlY3RlZEluZGV4ID09PSBvbmVPZkluZGV4ID8gX2MoJ2Rpc3BhdGNoLXJlbmRlcmVyJywgewogICAgICBhdHRyczogewogICAgICAgICJzY2hlbWEiOiBvbmVPZlJlbmRlckluZm8uc2NoZW1hLAogICAgICAgICJ1aXNjaGVtYSI6IG9uZU9mUmVuZGVySW5mby51aXNjaGVtYSwKICAgICAgICAicGF0aCI6IF92bS5jb250cm9sLnBhdGgsCiAgICAgICAgInJlbmRlcmVycyI6IF92bS5jb250cm9sLnJlbmRlcmVycywKICAgICAgICAiY2VsbHMiOiBfdm0uY29udHJvbC5jZWxscwogICAgICB9CiAgICB9KSA6IF92bS5fZSgpXSwgMSk7CiAgfSksIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtZGlhbG9nJywgewogICAgYXR0cnM6IHsKICAgICAgInBlcnNpc3RlbnQiOiAiIiwKICAgICAgIm1heC13aWR0aCI6ICI2MDAiCiAgICB9LAogICAgb246IHsKICAgICAgImtleWRvd24iOiBmdW5jdGlvbiBrZXlkb3duKCRldmVudCkgewogICAgICAgIGlmICghJGV2ZW50LnR5cGUuaW5kZXhPZigna2V5JykgJiYgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCAiZXNjIiwgMjcsICRldmVudC5rZXksIFsiRXNjIiwgIkVzY2FwZSJdKSkgewogICAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgICAgfQoKICAgICAgICByZXR1cm4gX3ZtLmNhbmNlbC5hcHBseShudWxsLCBhcmd1bWVudHMpOwogICAgICB9CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5kaWFsb2csCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0uZGlhbG9nID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAiZGlhbG9nIgogICAgfQogIH0sIFtfYygndi1jYXJkJywgW19jKCd2LWNhcmQtdGl0bGUnLCB7CiAgICBzdGF0aWNDbGFzczogInRleHQtaDUiCiAgfSwgW192bS5fdigiIENsZWFyIGZvcm0/ICIpXSksIF92bS5fdigiICIpLCBfYygndi1jYXJkLXRleHQnLCBbX3ZtLl92KCJcbiAgICAgICAgWW91ciBkYXRhIHdpbGwgYmUgY2xlYXJlZCBpZiB5b3UgbmF2aWdhdGUgYXdheSBmcm9tIHRoaXMgdGFiLiBEbyB5b3VcbiAgICAgICAgd2FudCB0byBwcm9jZWVkP1xuICAgICAgIildKSwgX3ZtLl92KCIgIiksIF9jKCd2LWNhcmQtYWN0aW9ucycsIFtfYygndi1zcGFjZXInKSwgX3ZtLl92KCIgIiksIF9jKCd2LWJ0bicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ0ZXh0IjogIiIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBfdm0uY2FuY2VsCiAgICB9CiAgfSwgW192bS5fdigiIE5vICIpXSksIF92bS5fdigiICIpLCBfYygndi1idG4nLCB7CiAgICByZWY6ICJjb25maXJtIiwKICAgIGF0dHJzOiB7CiAgICAgICJ0ZXh0IjogIiIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBfdm0uY29uZmlybQogICAgfQogIH0sIFtfdm0uX3YoIiBZZXMgIildKV0sIDEpXSwgMSldLCAxKV0sIDEpIDogX3ZtLl9lKCk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kbSA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyRtID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJG0gPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRtID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJG0gPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJG0gPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJG0sCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRtCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyRtLCBfX3Z1ZV9zY3JpcHRfXyRtLCBfX3Z1ZV9zY29wZV9pZF9fJG0sIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRtLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJG0sIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBjb21wbGV4UmVuZGVyZXJzID0gW2VudHJ5JHEsIGVudHJ5JHAsIGVudHJ5JG8sIGVudHJ5JG4sIGVudHJ5JG0sIGVudHJ5JGxdOwp2YXIgc2NyaXB0ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnY29udHJvbC13cmFwcGVyJywKICBwcm9wczogewogICAgaWQ6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IFN0cmluZwogICAgfSwKICAgIHZpc2libGU6IHsKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICB0eXBlOiBCb29sZWFuLAogICAgICAiZGVmYXVsdCI6IHRydWUKICAgIH0sCiAgICBzdHlsZXM6IHsKICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgIHR5cGU6IE9iamVjdAogICAgfQogIH0KfSk7Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJGwgPSBzY3JpcHQ7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kbCA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF92bS52aXNpYmxlID8gX2MoJ2RpdicsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5yb290LAogICAgYXR0cnM6IHsKICAgICAgImlkIjogX3ZtLmlkCiAgICB9CiAgfSwgW192bS5fdCgiZGVmYXVsdCIpXSwgMikgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRsID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJGwgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kbCA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJGwgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kbCA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kbCA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kbCwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGwKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJGwsIF9fdnVlX3NjcmlwdF9fJGwsIF9fdnVlX3Njb3BlX2lkX18kbCwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJGwsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kbCwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIERpc2FibGVkSWNvbkZvY3VzID0gewogIGNvbXBvbmVudFVwZGF0ZWQ6IGZ1bmN0aW9uIGNvbXBvbmVudFVwZGF0ZWQoZWwpIHsKICAgIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoJy52LWlucHV0X19pY29uIGJ1dHRvbicpLmZvckVhY2goZnVuY3Rpb24gKHgpIHsKICAgICAgcmV0dXJuIHguc2V0QXR0cmlidXRlKCd0YWJpbmRleCcsICctMScpOwogICAgfSk7CiAgfQp9Owp2YXIgY29udHJvbFJlbmRlcmVyJGsgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdhbnlvZi1zdHJpbmctb3ItZW51bS1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZIb3ZlcjogbGliLlZIb3ZlciwKICAgIFZDb21ib2JveDogbGliLlZDb21ib2JveAogIH0sCiAgZGlyZWN0aXZlczogewogICAgRGlzYWJsZWRJY29uRm9jdXM6IERpc2FibGVkSWNvbkZvY3VzCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0NvbnRyb2wocHJvcHMpLCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlIHx8IHVuZGVmaW5lZDsKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGl0ZW1zOiBmdW5jdGlvbiBpdGVtcygpIHsKICAgICAgLy8gbWFkZSBzdXJlIHZpYSB0aGUgdGVzdGVycwogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLW5vbi1udWxsLWFzc2VydGlvbgogICAgICByZXR1cm4gZmluZEVudW1TY2hlbWEodGhpcy5jb250cm9sLnNjaGVtYS5hbnlPZilbImVudW0iXTsKICAgIH0KICB9Cn0pOwoKdmFyIGZpbmRFbnVtU2NoZW1hID0gZnVuY3Rpb24gZmluZEVudW1TY2hlbWEoc2NoZW1hcykgewogIHJldHVybiBzY2hlbWFzLmZpbmQoZnVuY3Rpb24gKHMpIHsKICAgIHJldHVybiBzWyJlbnVtIl0gIT09IHVuZGVmaW5lZCAmJiAocy50eXBlID09PSAnc3RyaW5nJyB8fCBzLnR5cGUgPT09IHVuZGVmaW5lZCk7CiAgfSk7Cn07Cgp2YXIgZmluZFRleHRTY2hlbWEgPSBmdW5jdGlvbiBmaW5kVGV4dFNjaGVtYShzY2hlbWFzKSB7CiAgcmV0dXJuIHNjaGVtYXMuZmluZChmdW5jdGlvbiAocykgewogICAgcmV0dXJuIHMudHlwZSA9PT0gJ3N0cmluZycgJiYgc1siZW51bSJdID09PSB1bmRlZmluZWQ7CiAgfSk7Cn07Cgp2YXIgaGFzRW51bUFuZFRleHQgPSBmdW5jdGlvbiBoYXNFbnVtQW5kVGV4dChzY2hlbWFzKSB7CiAgLy8gaWRlYTogbWFwIHRvIHR5cGUsZW51bSBhbmQgY2hlY2sgdGhhdCBhbGwgdHlwZXMgYXJlIHN0cmluZyBhbmQgYXQgbGVhc3Qgb25lIGl0ZW0gaXMgb2YgdHlwZSBlbnVtLAogIHZhciBlbnVtU2NoZW1hID0gZmluZEVudW1TY2hlbWEoc2NoZW1hcyk7CiAgdmFyIHN0cmluZ1NjaGVtYSA9IGZpbmRUZXh0U2NoZW1hKHNjaGVtYXMpOwogIHZhciByZW1haW5pbmdTY2hlbWFzID0gc2NoZW1hcy5maWx0ZXIoZnVuY3Rpb24gKHMpIHsKICAgIHJldHVybiBzICE9PSBlbnVtU2NoZW1hIHx8IHMgIT09IHN0cmluZ1NjaGVtYTsKICB9KTsKICB2YXIgd3JvbmdUeXBlID0gcmVtYWluaW5nU2NoZW1hcy5maW5kKGZ1bmN0aW9uIChzKSB7CiAgICByZXR1cm4gcy50eXBlICYmIHMudHlwZSAhPT0gJ3N0cmluZyc7CiAgfSk7CiAgcmV0dXJuICEhZW51bVNjaGVtYSAmJiAhIXN0cmluZ1NjaGVtYSAmJiAhd3JvbmdUeXBlOwp9OwoKdmFyIHNpbXBsZUFueU9mID0gY29yZS5hbmQoY29yZS51aVR5cGVJcygnQ29udHJvbCcpLCBjb3JlLnNjaGVtYU1hdGNoZXMoZnVuY3Rpb24gKHNjaGVtYSkgewogIHJldHVybiBBcnJheS5pc0FycmF5KHNjaGVtYS5hbnlPZikgJiYgaGFzRW51bUFuZFRleHQoc2NoZW1hLmFueU9mKTsKfSkpOwp2YXIgZW50cnkkayA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJGssCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDUsIHNpbXBsZUFueU9mKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRrID0gY29udHJvbFJlbmRlcmVyJGs7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kayA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi1ob3ZlcicsIHsKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICB2YXIgaG92ZXIgPSByZWYuaG92ZXI7CiAgICAgICAgcmV0dXJuIFtfYygndi1jb21ib2JveCcsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICJkaXNhYmxlZC1pY29uLWZvY3VzIiwKICAgICAgICAgICAgcmF3TmFtZTogInYtZGlzYWJsZWQtaWNvbi1mb2N1cyIKICAgICAgICAgIH1dLAogICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5jb250cm9sLmlucHV0LAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImlkIjogX3ZtLmNvbnRyb2wuaWQgKyAnLWlucHV0JywKICAgICAgICAgICAgImRpc2FibGVkIjogIV92bS5jb250cm9sLmVuYWJsZWQsCiAgICAgICAgICAgICJhdXRvZm9jdXMiOiBfdm0uYXBwbGllZE9wdGlvbnMuZm9jdXMsCiAgICAgICAgICAgICJwbGFjZWhvbGRlciI6IF92bS5hcHBsaWVkT3B0aW9ucy5wbGFjZWhvbGRlciwKICAgICAgICAgICAgImxhYmVsIjogX3ZtLmNvbXB1dGVkTGFiZWwsCiAgICAgICAgICAgICJoaW50IjogX3ZtLmNvbnRyb2wuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICJwZXJzaXN0ZW50LWhpbnQiOiBfdm0ucGVyc2lzdGVudEhpbnQoKSwKICAgICAgICAgICAgInJlcXVpcmVkIjogX3ZtLmNvbnRyb2wucmVxdWlyZWQsCiAgICAgICAgICAgICJlcnJvci1tZXNzYWdlcyI6IF92bS5jb250cm9sLmVycm9ycywKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIm1heGxlbmd0aCI6IF92bS5hcHBsaWVkT3B0aW9ucy5yZXN0cmljdCA/IF92bS5jb250cm9sLnNjaGVtYS5tYXhMZW5ndGggOiB1bmRlZmluZWQsCiAgICAgICAgICAgICJjb3VudGVyIjogX3ZtLmNvbnRyb2wuc2NoZW1hLm1heExlbmd0aCAhPT0gdW5kZWZpbmVkID8gX3ZtLmNvbnRyb2wuc2NoZW1hLm1heExlbmd0aCA6IHVuZGVmaW5lZCwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLml0ZW1zLAogICAgICAgICAgICAiY2xlYXJhYmxlIjogaG92ZXIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2hhbmdlIjogX3ZtLm9uQ2hhbmdlLAogICAgICAgICAgICAiZm9jdXMiOiBmdW5jdGlvbiBmb2N1cygkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0uaXNGb2N1c2VkID0gdHJ1ZTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImJsdXIiOiBmdW5jdGlvbiBibHVyKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pXTsKICAgICAgfQogICAgfV0pCiAgfSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRrID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJGsgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kayA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJGsgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kayA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kayA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kaywKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGsKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJGssIF9fdnVlX3NjcmlwdF9fJGssIF9fdnVlX3Njb3BlX2lkX18kaywgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJGssIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kaywgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciRqID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnYm9vbGVhbi1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBWQ2hlY2tib3g6IGxpYi5WQ2hlY2tib3gsCiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbAogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNDb250cm9sKHByb3BzKSwgZnVuY3Rpb24gKG5ld1ZhbHVlKSB7CiAgICAgIHJldHVybiBuZXdWYWx1ZSB8fCBmYWxzZTsKICAgIH0pOwogIH0KfSk7CnZhciBlbnRyeSRqID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkaiwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMSwgY29yZS5pc0Jvb2xlYW5Db250cm9sKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRqID0gY29udHJvbFJlbmRlcmVyJGo7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kaiA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi1jaGVja2JveCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICJpbmRldGVybWluYXRlIjogX3ZtLmNvbnRyb2wuZGF0YSA9PT0gdW5kZWZpbmVkLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbkNoYW5nZSwKICAgICAgImZvY3VzIjogZnVuY3Rpb24gZm9jdXMoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIH0sCiAgICAgICJibHVyIjogZnVuY3Rpb24gYmx1cigkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGogPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kaiA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRqID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kaiA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRqID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRqID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRqLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kagp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kaiwgX192dWVfc2NyaXB0X18kaiwgX192dWVfc2NvcGVfaWRfXyRqLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kaiwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRqLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJGkgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdib29sZWFuLXRvZ2dsZS1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZTd2l0Y2g6IGxpYi5WU3dpdGNoCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0NvbnRyb2wocHJvcHMpKTsKICB9Cn0pOwp2YXIgZW50cnkkaSA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJGksCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDMsIGNvcmUuYW5kKGNvcmUuaXNCb29sZWFuQ29udHJvbCwgY29yZS5vcHRpb25JcygndG9nZ2xlJywgdHJ1ZSkpKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRpID0gY29udHJvbFJlbmRlcmVyJGk7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kaSA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi1zd2l0Y2gnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmNvbnRyb2wuaW5wdXQsCiAgICBhdHRyczogewogICAgICAiaWQiOiBfdm0uY29udHJvbC5pZCArICctaW5wdXQnLAogICAgICAiZGlzYWJsZWQiOiAhX3ZtLmNvbnRyb2wuZW5hYmxlZCwKICAgICAgImF1dG9mb2N1cyI6IF92bS5hcHBsaWVkT3B0aW9ucy5mb2N1cywKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLmFwcGxpZWRPcHRpb25zLnBsYWNlaG9sZGVyLAogICAgICAibGFiZWwiOiBfdm0uY29tcHV0ZWRMYWJlbCwKICAgICAgImhpbnQiOiBfdm0uY29udHJvbC5kZXNjcmlwdGlvbiwKICAgICAgInBlcnNpc3RlbnQtaGludCI6IF92bS5wZXJzaXN0ZW50SGludCgpLAogICAgICAicmVxdWlyZWQiOiBfdm0uY29udHJvbC5yZXF1aXJlZCwKICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbkNoYW5nZSwKICAgICAgImZvY3VzIjogZnVuY3Rpb24gZm9jdXMoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIH0sCiAgICAgICJibHVyIjogZnVuY3Rpb24gYmx1cigkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGkgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kaSA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRpID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kaSA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRpID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRpID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRpLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kaQp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kaSwgX192dWVfc2NyaXB0X18kaSwgX192dWVfc2NvcGVfaWRfXyRpLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kaSwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRpLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJGggPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdkYXRlLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVlRleHRGaWVsZDogbGliLlZUZXh0RmllbGQKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zQ29udHJvbChwcm9wcykpOwogIH0KfSk7CnZhciBlbnRyeSRoID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkaCwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMiwgY29yZS5pc0RhdGVDb250cm9sKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRoID0gY29udHJvbFJlbmRlcmVyJGg7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kaCA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi10ZXh0LWZpZWxkJywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5jb250cm9sLmlucHV0LAogICAgYXR0cnM6IHsKICAgICAgInR5cGUiOiAiZGF0ZSIsCiAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICJ2YWx1ZSI6IF92bS5jb250cm9sLmRhdGEKICAgIH0sCiAgICBvbjogewogICAgICAiY2hhbmdlIjogX3ZtLm9uQ2hhbmdlLAogICAgICAiZm9jdXMiOiBmdW5jdGlvbiBmb2N1cygkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gdHJ1ZTsKICAgICAgfSwKICAgICAgImJsdXIiOiBmdW5jdGlvbiBibHVyKCRldmVudCkgewogICAgICAgIF92bS5pc0ZvY3VzZWQgPSBmYWxzZTsKICAgICAgfQogICAgfQogIH0pXSwgMSk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kaCA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyRoID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJGggPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRoID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJGggPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJGggPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJGgsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRoCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyRoLCBfX3Z1ZV9zY3JpcHRfXyRoLCBfX3Z1ZV9zY29wZV9pZF9fJGgsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRoLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJGgsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBjb250cm9sUmVuZGVyZXIkZyA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2RhdGV0aW1lLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVlRleHRGaWVsZDogbGliLlZUZXh0RmllbGQKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zQ29udHJvbChwcm9wcykpOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGRhdGFUaW1lOiB7CiAgICAgIGdldDogZnVuY3Rpb24gZ2V0KCkgewogICAgICAgIHZhciBfdGhpcyRhcHBsaWVkT3B0aW9ucyQ7CgogICAgICAgIHZhciBkYXRldGltZUxvY2FsRm9ybWF0ID0gJ1lZWVktTU0tRERUSEg6bW06c3MuU1NTJzsKICAgICAgICB2YXIgc2F2ZUZvcm1hdCA9IChfdGhpcyRhcHBsaWVkT3B0aW9ucyQgPSB0aGlzLmFwcGxpZWRPcHRpb25zLmRhdGVUaW1lU2F2ZUZvcm1hdCkgIT09IG51bGwgJiYgX3RoaXMkYXBwbGllZE9wdGlvbnMkICE9PSB2b2lkIDAgPyBfdGhpcyRhcHBsaWVkT3B0aW9ucyQgOiB1bmRlZmluZWQ7CiAgICAgICAgdmFyIHZhbHVlID0gdGhpcy5jb250cm9sLmRhdGE7CiAgICAgICAgdmFyIGRhdGVUaW1lID0gcGFyc2VEYXRlVGltZSh2YWx1ZSwgc2F2ZUZvcm1hdCk7CiAgICAgICAgcmV0dXJuIGRhdGVUaW1lID8gZGF0ZVRpbWUubG9jYWwoKS5mb3JtYXQoZGF0ZXRpbWVMb2NhbEZvcm1hdCkgOiB2YWx1ZTsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQodmFsdWUpIHsKICAgICAgICB2YXIgX3RoaXMkYXBwbGllZE9wdGlvbnMkMjsKCiAgICAgICAgdmFyIGRhdGV0aW1lTG9jYWxGb3JtYXRzID0gWydZWVlZLU1NLUREVEhIOm1tOnNzLlNTUycsICdZWVlZLU1NLUREVEhIOm1tOnNzJywgJ1lZWVktTU0tRERUSEg6bW0nXTsKICAgICAgICB2YXIgc2F2ZUZvcm1hdCA9IChfdGhpcyRhcHBsaWVkT3B0aW9ucyQyID0gdGhpcy5hcHBsaWVkT3B0aW9ucy5kYXRlVGltZVNhdmVGb3JtYXQpICE9PSBudWxsICYmIF90aGlzJGFwcGxpZWRPcHRpb25zJDIgIT09IHZvaWQgMCA/IF90aGlzJGFwcGxpZWRPcHRpb25zJDIgOiAnWVlZWS1NTS1ERFRISDptbTpzc1onOwogICAgICAgIHZhciBkYXRlVGltZSA9IHBhcnNlRGF0ZVRpbWUodmFsdWUsIGRhdGV0aW1lTG9jYWxGb3JtYXRzKTsKICAgICAgICB2YXIgcmVzdWx0ID0gZGF0ZVRpbWUgPyBkYXRlVGltZS5mb3JtYXQoc2F2ZUZvcm1hdCkgOiB2YWx1ZTsKICAgICAgICB0aGlzLm9uQ2hhbmdlKHJlc3VsdCk7CiAgICAgIH0KICAgIH0KICB9Cn0pOwp2YXIgZW50cnkkZyA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJGcsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDIsIGNvcmUuaXNEYXRlVGltZUNvbnRyb2wpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJGcgPSBjb250cm9sUmVuZGVyZXIkZzsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyRnID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX2MoJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5fYih7CiAgICBhdHRyczogewogICAgICAic3R5bGVzIjogX3ZtLnN0eWxlcywKICAgICAgImlzRm9jdXNlZCI6IF92bS5pc0ZvY3VzZWQsCiAgICAgICJhcHBsaWVkT3B0aW9ucyI6IF92bS5hcHBsaWVkT3B0aW9ucwogICAgfQogIH0sICdjb250cm9sLXdyYXBwZXInLCBfdm0uY29udHJvbFdyYXBwZXIsIGZhbHNlKSwgW19jKCd2LXRleHQtZmllbGQnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmNvbnRyb2wuaW5wdXQsCiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJkYXRldGltZS1sb2NhbCIsCiAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICJ2YWx1ZSI6IF92bS5kYXRhVGltZQogICAgfSwKICAgIG9uOiB7CiAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICB9LAogICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRnID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJGcgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kZyA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJGcgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kZyA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kZyA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kZywKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGcKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJGcsIF9fdnVlX3NjcmlwdF9fJGcsIF9fdnVlX3Njb3BlX2lkX18kZywgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJGcsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kZywgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciRmID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnZW51bS1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZTZWxlY3Q6IGxpYi5WU2VsZWN0LAogICAgVkhvdmVyOiBsaWIuVkhvdmVyCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBEaXNhYmxlZEljb25Gb2N1czogRGlzYWJsZWRJY29uRm9jdXMKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zRW51bUNvbnRyb2wocHJvcHMpLCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlIHx8IHVuZGVmaW5lZDsKICAgIH0pOwogIH0KfSk7CnZhciBlbnRyeSRmID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkZiwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMiwgY29yZS5pc0VudW1Db250cm9sKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRmID0gY29udHJvbFJlbmRlcmVyJGY7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kZiA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi1ob3ZlcicsIHsKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICB2YXIgaG92ZXIgPSByZWYuaG92ZXI7CiAgICAgICAgcmV0dXJuIFtfYygndi1zZWxlY3QnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLmNvbnRyb2wub3B0aW9ucywKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJsYWJlbCIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogInZhbHVlIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSldOwogICAgICB9CiAgICB9XSkKICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGYgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kZiA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRmID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kZiA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRmID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRmID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRmLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kZgp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kZiwgX192dWVfc2NyaXB0X18kZiwgX192dWVfc2NvcGVfaWRfXyRmLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kZiwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRmLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJGUgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdpbnRlZ2VyLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVlRleHRGaWVsZDogbGliLlZUZXh0RmllbGQKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zQ29udHJvbChwcm9wcyksIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICByZXR1cm4gcGFyc2VJbnQodmFsdWUsIDEwKSB8fCB1bmRlZmluZWQ7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdGVwOiBmdW5jdGlvbiBzdGVwKCkgewogICAgICB2YXIgX29wdGlvbnMkc3RlcDsKCiAgICAgIHZhciBvcHRpb25zID0gdGhpcy5hcHBsaWVkT3B0aW9uczsKICAgICAgcmV0dXJuIChfb3B0aW9ucyRzdGVwID0gb3B0aW9ucy5zdGVwKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyRzdGVwICE9PSB2b2lkIDAgPyBfb3B0aW9ucyRzdGVwIDogMTsKICAgIH0KICB9Cn0pOwp2YXIgZW50cnkkZSA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJGUsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDEsIGNvcmUuaXNJbnRlZ2VyQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kZSA9IGNvbnRyb2xSZW5kZXJlciRlOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJGUgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtdGV4dC1maWVsZCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogIm51bWJlciIsCiAgICAgICJzdGVwIjogX3ZtLnN0ZXAsCiAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICJ2YWx1ZSI6IF92bS5jb250cm9sLmRhdGEKICAgIH0sCiAgICBvbjogewogICAgICAiY2hhbmdlIjogX3ZtLm9uQ2hhbmdlLAogICAgICAiZm9jdXMiOiBmdW5jdGlvbiBmb2N1cygkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gdHJ1ZTsKICAgICAgfSwKICAgICAgImJsdXIiOiBmdW5jdGlvbiBibHVyKCRldmVudCkgewogICAgICAgIF92bS5pc0ZvY3VzZWQgPSBmYWxzZTsKICAgICAgfQogICAgfQogIH0pXSwgMSk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kZSA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyRlID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJGUgPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRlID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJGUgPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJGUgPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJGUsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRlCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyRlLCBfX3Z1ZV9zY3JpcHRfXyRlLCBfX3Z1ZV9zY29wZV9pZF9fJGUsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRlLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJGUsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBjb250cm9sUmVuZGVyZXIkZCA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ211bHRpLXN0cmluZy1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZIb3ZlcjogbGliLlZIb3ZlciwKICAgIFZUZXh0YXJlYTogbGliLlZUZXh0YXJlYQogIH0sCiAgZGlyZWN0aXZlczogewogICAgRGlzYWJsZWRJY29uRm9jdXM6IERpc2FibGVkSWNvbkZvY3VzCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0NvbnRyb2wocHJvcHMpLCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlIHx8IHVuZGVmaW5lZDsKICAgIH0pOwogIH0KfSk7CnZhciBlbnRyeSRkID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkZCwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMiwgY29yZS5hbmQoY29yZS5pc1N0cmluZ0NvbnRyb2wsIGNvcmUuaXNNdWx0aUxpbmVDb250cm9sKSkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kZCA9IGNvbnRyb2xSZW5kZXJlciRkOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJGQgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtaG92ZXInLCB7CiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgdmFyIGhvdmVyID0gcmVmLmhvdmVyOwogICAgICAgIHJldHVybiBbX2MoJ3YtdGV4dGFyZWEnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJ2YWx1ZSI6IF92bS5jb250cm9sLmRhdGEsCiAgICAgICAgICAgICJtYXhsZW5ndGgiOiBfdm0uYXBwbGllZE9wdGlvbnMucmVzdHJpY3QgPyBfdm0uY29udHJvbC5zY2hlbWEubWF4TGVuZ3RoIDogdW5kZWZpbmVkLAogICAgICAgICAgICAic2l6ZSI6IF92bS5hcHBsaWVkT3B0aW9ucy50cmltICYmIF92bS5jb250cm9sLnNjaGVtYS5tYXhMZW5ndGggIT09IHVuZGVmaW5lZCA/IF92bS5jb250cm9sLnNjaGVtYS5tYXhMZW5ndGggOiB1bmRlZmluZWQsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgIm11bHRpLWxpbmUiOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSldOwogICAgICB9CiAgICB9XSkKICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGQgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kZCA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRkID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kZCA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRkID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRkID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRkLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kZAp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kZCwgX192dWVfc2NyaXB0X18kZCwgX192dWVfc2NvcGVfaWRfXyRkLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kZCwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRkLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJGMgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdudW1iZXItY29udHJvbC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgQ29udHJvbFdyYXBwZXI6IF9fdnVlX2NvbXBvbmVudF9fJGwsCiAgICBWVGV4dEZpZWxkOiBsaWIuVlRleHRGaWVsZAogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNDb250cm9sKHByb3BzKSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiBwYXJzZUZsb2F0KHZhbHVlKSB8fCB1bmRlZmluZWQ7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdGVwOiBmdW5jdGlvbiBzdGVwKCkgewogICAgICB2YXIgX29wdGlvbnMkc3RlcDsKCiAgICAgIHZhciBvcHRpb25zID0gdGhpcy5hcHBsaWVkT3B0aW9uczsKICAgICAgcmV0dXJuIChfb3B0aW9ucyRzdGVwID0gb3B0aW9ucy5zdGVwKSAhPT0gbnVsbCAmJiBfb3B0aW9ucyRzdGVwICE9PSB2b2lkIDAgPyBfb3B0aW9ucyRzdGVwIDogMC4xOwogICAgfQogIH0KfSk7CnZhciBlbnRyeSRjID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkYywKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMSwgY29yZS5pc051bWJlckNvbnRyb2wpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJGMgPSBjb250cm9sUmVuZGVyZXIkYzsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyRjID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX2MoJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5fYih7CiAgICBhdHRyczogewogICAgICAic3R5bGVzIjogX3ZtLnN0eWxlcywKICAgICAgImlzRm9jdXNlZCI6IF92bS5pc0ZvY3VzZWQsCiAgICAgICJhcHBsaWVkT3B0aW9ucyI6IF92bS5hcHBsaWVkT3B0aW9ucwogICAgfQogIH0sICdjb250cm9sLXdyYXBwZXInLCBfdm0uY29udHJvbFdyYXBwZXIsIGZhbHNlKSwgW19jKCd2LXRleHQtZmllbGQnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmNvbnRyb2wuaW5wdXQsCiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJudW1iZXIiLAogICAgICAic3RlcCI6IF92bS5zdGVwLAogICAgICAiaWQiOiBfdm0uY29udHJvbC5pZCArICctaW5wdXQnLAogICAgICAiZGlzYWJsZWQiOiAhX3ZtLmNvbnRyb2wuZW5hYmxlZCwKICAgICAgImF1dG9mb2N1cyI6IF92bS5hcHBsaWVkT3B0aW9ucy5mb2N1cywKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLmFwcGxpZWRPcHRpb25zLnBsYWNlaG9sZGVyLAogICAgICAibGFiZWwiOiBfdm0uY29tcHV0ZWRMYWJlbCwKICAgICAgImhpbnQiOiBfdm0uY29udHJvbC5kZXNjcmlwdGlvbiwKICAgICAgInBlcnNpc3RlbnQtaGludCI6IF92bS5wZXJzaXN0ZW50SGludCgpLAogICAgICAicmVxdWlyZWQiOiBfdm0uY29udHJvbC5yZXF1aXJlZCwKICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbkNoYW5nZSwKICAgICAgImZvY3VzIjogZnVuY3Rpb24gZm9jdXMoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIH0sCiAgICAgICJibHVyIjogZnVuY3Rpb24gYmx1cigkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGMgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kYyA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRjID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kYyA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRjID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRjID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRjLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kYwp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kYywgX192dWVfc2NyaXB0X18kYywgX192dWVfc2NvcGVfaWRfXyRjLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kYywgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRjLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJGIgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdvbmVvZi1lbnVtLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVlNlbGVjdDogbGliLlZTZWxlY3QsCiAgICBWSG92ZXI6IGxpYi5WSG92ZXIKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIERpc2FibGVkSWNvbkZvY3VzOiBEaXNhYmxlZEljb25Gb2N1cwogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNPbmVPZkVudW1Db250cm9sKHByb3BzKSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSB8fCB1bmRlZmluZWQ7CiAgICB9KTsKICB9Cn0pOwp2YXIgZW50cnkkYiA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJGIsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDUsIGNvcmUuaXNPbmVPZkVudW1Db250cm9sKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyRiID0gY29udHJvbFJlbmRlcmVyJGI7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kYiA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi1ob3ZlcicsIHsKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICB2YXIgaG92ZXIgPSByZWYuaG92ZXI7CiAgICAgICAgcmV0dXJuIFtfYygndi1zZWxlY3QnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLmNvbnRyb2wub3B0aW9ucywKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJsYWJlbCIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogInZhbHVlIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSldOwogICAgICB9CiAgICB9XSkKICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGIgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kYiA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyRiID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kYiA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyRiID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyRiID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyRiLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kYgp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kYiwgX192dWVfc2NyaXB0X18kYiwgX192dWVfc2NvcGVfaWRfXyRiLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kYiwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyRiLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJGEgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdvbmVvZi1yYWRpby1ncm91cC1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZSYWRpb0dyb3VwOiBsaWIuVlJhZGlvR3JvdXAsCiAgICBWUmFkaW86IGxpYi5WUmFkaW8sCiAgICBWTGFiZWw6IGxpYi5WTGFiZWwKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zT25lT2ZFbnVtQ29udHJvbChwcm9wcykpOwogIH0KfSk7CnZhciBlbnRyeSRhID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkYSwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMjAsIGNvcmUuYW5kKGNvcmUuaXNPbmVPZkVudW1Db250cm9sLCBjb3JlLm9wdGlvbklzKCdmb3JtYXQnLCAncmFkaW8nKSkpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJGEgPSBjb250cm9sUmVuZGVyZXIkYTsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyRhID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX2MoJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5fYih7CiAgICBhdHRyczogewogICAgICAic3R5bGVzIjogX3ZtLnN0eWxlcywKICAgICAgImlzRm9jdXNlZCI6IF92bS5pc0ZvY3VzZWQsCiAgICAgICJhcHBsaWVkT3B0aW9ucyI6IF92bS5hcHBsaWVkT3B0aW9ucwogICAgfQogIH0sICdjb250cm9sLXdyYXBwZXInLCBfdm0uY29udHJvbFdyYXBwZXIsIGZhbHNlKSwgW19jKCd2LWxhYmVsJywgewogICAgYXR0cnM6IHsKICAgICAgImZvciI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uY29tcHV0ZWRMYWJlbCkpXSksIF92bS5fdigiICIpLCBfYygndi1yYWRpby1ncm91cCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJoaW50IjogX3ZtLmNvbnRyb2wuZGVzY3JpcHRpb24sCiAgICAgICJwZXJzaXN0ZW50LWhpbnQiOiBfdm0ucGVyc2lzdGVudEhpbnQoKSwKICAgICAgInJlcXVpcmVkIjogX3ZtLmNvbnRyb2wucmVxdWlyZWQsCiAgICAgICJlcnJvci1tZXNzYWdlcyI6IF92bS5jb250cm9sLmVycm9ycywKICAgICAgInJvdyI6ICIiLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbkNoYW5nZSwKICAgICAgImZvY3VzIjogZnVuY3Rpb24gZm9jdXMoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIH0sCiAgICAgICJibHVyIjogZnVuY3Rpb24gYmx1cigkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9LCBfdm0uX2woX3ZtLmNvbnRyb2wub3B0aW9ucywgZnVuY3Rpb24gKG8pIHsKICAgIHJldHVybiBfYygndi1yYWRpbycsIHsKICAgICAga2V5OiBvLnZhbHVlLAogICAgICBhdHRyczogewogICAgICAgICJsYWJlbCI6IG8ubGFiZWwsCiAgICAgICAgInZhbHVlIjogby52YWx1ZQogICAgICB9CiAgICB9KTsKICB9KSwgMSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyRhID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJGEgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kYSA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJGEgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kYSA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kYSA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kYSwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJGEKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJGEsIF9fdnVlX3NjcmlwdF9fJGEsIF9fdnVlX3Njb3BlX2lkX18kYSwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJGEsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kYSwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciQ5ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAncGFzc3dvcmQtY29udHJvbC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgQ29udHJvbFdyYXBwZXI6IF9fdnVlX2NvbXBvbmVudF9fJGwsCiAgICBWVGV4dEZpZWxkOiBsaWIuVlRleHRGaWVsZAogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICB2YXIgcGFzc3dvcmRWaXNpYmxlID0gY29tcG9zaXRpb25BcGkucmVmKGZhbHNlKTsKICAgIHJldHVybiBfb2JqZWN0U3ByZWFkMihfb2JqZWN0U3ByZWFkMih7fSwgdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNDb250cm9sKHByb3BzKSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSB8fCB1bmRlZmluZWQ7CiAgICB9KSksIHt9LCB7CiAgICAgIHBhc3N3b3JkVmlzaWJsZTogcGFzc3dvcmRWaXNpYmxlCiAgICB9KTsKICB9Cn0pOwp2YXIgZW50cnkkOSA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJDksCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDIsIGNvcmUuYW5kKGNvcmUuaXNTdHJpbmdDb250cm9sLCBjb3JlLmZvcm1hdElzKCdwYXNzd29yZCcpKSkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kOSA9IGNvbnRyb2xSZW5kZXJlciQ5OwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJDkgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtdGV4dC1maWVsZCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogX3ZtLnBhc3N3b3JkVmlzaWJsZSA/ICd0ZXh0JyA6ICdwYXNzd29yZCcsCiAgICAgICJhcHBlbmQtaWNvbiI6IF92bS5wYXNzd29yZFZpc2libGUgPyAnbWRpLWV5ZScgOiAnbWRpLWV5ZS1vZmYnLAogICAgICAiaWQiOiBfdm0uY29udHJvbC5pZCArICctaW5wdXQnLAogICAgICAiZGlzYWJsZWQiOiAhX3ZtLmNvbnRyb2wuZW5hYmxlZCwKICAgICAgImF1dG9mb2N1cyI6IF92bS5hcHBsaWVkT3B0aW9ucy5mb2N1cywKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLmFwcGxpZWRPcHRpb25zLnBsYWNlaG9sZGVyLAogICAgICAibGFiZWwiOiBfdm0uY29tcHV0ZWRMYWJlbCwKICAgICAgImhpbnQiOiBfdm0uY29udHJvbC5kZXNjcmlwdGlvbiwKICAgICAgInBlcnNpc3RlbnQtaGludCI6IF92bS5wZXJzaXN0ZW50SGludCgpLAogICAgICAicmVxdWlyZWQiOiBfdm0uY29udHJvbC5yZXF1aXJlZCwKICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhLAogICAgICAibWF4bGVuZ3RoIjogX3ZtLmFwcGxpZWRPcHRpb25zLnJlc3RyaWN0ID8gX3ZtLmNvbnRyb2wuc2NoZW1hLm1heExlbmd0aCA6IHVuZGVmaW5lZCwKICAgICAgInNpemUiOiBfdm0uYXBwbGllZE9wdGlvbnMudHJpbSAmJiBfdm0uY29udHJvbC5zY2hlbWEubWF4TGVuZ3RoICE9PSB1bmRlZmluZWQgPyBfdm0uY29udHJvbC5zY2hlbWEubWF4TGVuZ3RoIDogdW5kZWZpbmVkCiAgICB9LAogICAgb246IHsKICAgICAgImNsaWNrOmFwcGVuZCI6IGZ1bmN0aW9uIGNsaWNrQXBwZW5kKCkgewogICAgICAgIHJldHVybiBfdm0ucGFzc3dvcmRWaXNpYmxlID0gIV92bS5wYXNzd29yZFZpc2libGU7CiAgICAgIH0sCiAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICB9LAogICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyQ5ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJDkgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kOSA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJDkgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kOSA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kOSA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kOSwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDkKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJDksIF9fdnVlX3NjcmlwdF9fJDksIF9fdnVlX3Njb3BlX2lkX18kOSwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJDksIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kOSwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciQ4ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAncmFkaW8tZ3JvdXAtY29udHJvbC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgQ29udHJvbFdyYXBwZXI6IF9fdnVlX2NvbXBvbmVudF9fJGwsCiAgICBWUmFkaW9Hcm91cDogbGliLlZSYWRpb0dyb3VwLAogICAgVlJhZGlvOiBsaWIuVlJhZGlvLAogICAgVkxhYmVsOiBsaWIuVkxhYmVsCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0VudW1Db250cm9sKHByb3BzKSk7CiAgfQp9KTsKdmFyIGVudHJ5JDggPSB7CiAgcmVuZGVyZXI6IGNvbnRyb2xSZW5kZXJlciQ4LAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCgyMCwgY29yZS5hbmQoY29yZS5pc0VudW1Db250cm9sLCBjb3JlLm9wdGlvbklzKCdmb3JtYXQnLCAncmFkaW8nKSkpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJDggPSBjb250cm9sUmVuZGVyZXIkODsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyQ4ID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX2MoJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5fYih7CiAgICBhdHRyczogewogICAgICAic3R5bGVzIjogX3ZtLnN0eWxlcywKICAgICAgImlzRm9jdXNlZCI6IF92bS5pc0ZvY3VzZWQsCiAgICAgICJhcHBsaWVkT3B0aW9ucyI6IF92bS5hcHBsaWVkT3B0aW9ucwogICAgfQogIH0sICdjb250cm9sLXdyYXBwZXInLCBfdm0uY29udHJvbFdyYXBwZXIsIGZhbHNlKSwgW19jKCd2LWxhYmVsJywgewogICAgYXR0cnM6IHsKICAgICAgImZvciI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uY29tcHV0ZWRMYWJlbCkpXSksIF92bS5fdigiICIpLCBfYygndi1yYWRpby1ncm91cCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJoaW50IjogX3ZtLmNvbnRyb2wuZGVzY3JpcHRpb24sCiAgICAgICJwZXJzaXN0ZW50LWhpbnQiOiBfdm0ucGVyc2lzdGVudEhpbnQoKSwKICAgICAgInJlcXVpcmVkIjogX3ZtLmNvbnRyb2wucmVxdWlyZWQsCiAgICAgICJlcnJvci1tZXNzYWdlcyI6IF92bS5jb250cm9sLmVycm9ycywKICAgICAgInJvdyI6ICIiLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbkNoYW5nZSwKICAgICAgImZvY3VzIjogZnVuY3Rpb24gZm9jdXMoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIH0sCiAgICAgICJibHVyIjogZnVuY3Rpb24gYmx1cigkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9LCBfdm0uX2woX3ZtLmNvbnRyb2wub3B0aW9ucywgZnVuY3Rpb24gKG8pIHsKICAgIHJldHVybiBfYygndi1yYWRpbycsIHsKICAgICAga2V5OiBvLnZhbHVlLAogICAgICBhdHRyczogewogICAgICAgICJsYWJlbCI6IG8ubGFiZWwsCiAgICAgICAgInZhbHVlIjogby52YWx1ZQogICAgICB9CiAgICB9KTsKICB9KSwgMSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyQ4ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJDggPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kOCA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJDggPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kOCA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kOCA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kOCwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDgKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJDgsIF9fdnVlX3NjcmlwdF9fJDgsIF9fdnVlX3Njb3BlX2lkX18kOCwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJDgsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kOCwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciQ3ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnc2xpZGVyLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVlNsaWRlcjogbGliLlZTbGlkZXIKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zQ29udHJvbChwcm9wcyksIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICByZXR1cm4gTnVtYmVyKHZhbHVlKTsKICAgIH0pOwogIH0KfSk7CnZhciBlbnRyeSQ3ID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkNywKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoNCwgY29yZS5pc1JhbmdlQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kNyA9IGNvbnRyb2xSZW5kZXJlciQ3OwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJDcgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3Ytc2xpZGVyJywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5jb250cm9sLmlucHV0LAogICAgYXR0cnM6IHsKICAgICAgInN0ZXAiOiBfdm0uY29udHJvbC5zY2hlbWEubXVsdGlwbGVPZiB8fCAxLAogICAgICAibWluIjogX3ZtLmNvbnRyb2wuc2NoZW1hLm1pbmltdW0sCiAgICAgICJtYXgiOiBfdm0uY29udHJvbC5zY2hlbWEubWF4aW11bSwKICAgICAgInRodW1iLWxhYmVsIjogdHJ1ZSwKICAgICAgImlkIjogX3ZtLmNvbnRyb2wuaWQgKyAnLWlucHV0JywKICAgICAgImRpc2FibGVkIjogIV92bS5jb250cm9sLmVuYWJsZWQsCiAgICAgICJhdXRvZm9jdXMiOiBfdm0uYXBwbGllZE9wdGlvbnMuZm9jdXMsCiAgICAgICJwbGFjZWhvbGRlciI6IF92bS5hcHBsaWVkT3B0aW9ucy5wbGFjZWhvbGRlciwKICAgICAgImxhYmVsIjogX3ZtLmNvbXB1dGVkTGFiZWwsCiAgICAgICJoaW50IjogX3ZtLmNvbnRyb2wuZGVzY3JpcHRpb24sCiAgICAgICJwZXJzaXN0ZW50LWhpbnQiOiBfdm0ucGVyc2lzdGVudEhpbnQoKSwKICAgICAgInJlcXVpcmVkIjogX3ZtLmNvbnRyb2wucmVxdWlyZWQsCiAgICAgICJlcnJvci1tZXNzYWdlcyI6IF92bS5jb250cm9sLmVycm9ycywKICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YQogICAgfSwKICAgIG9uOiB7CiAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICB9LAogICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyQ3ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJDcgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kNyA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJDcgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kNyA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kNyA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kNywKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDcKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJDcsIF9fdnVlX3NjcmlwdF9fJDcsIF9fdnVlX3Njb3BlX2lkX18kNywgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJDcsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kNywgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciQ2ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnc3RyaW5nLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVkhvdmVyOiBsaWIuVkhvdmVyLAogICAgVlRleHRGaWVsZDogbGliLlZUZXh0RmllbGQsCiAgICBWQ29tYm9ib3g6IGxpYi5WQ29tYm9ib3gKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIERpc2FibGVkSWNvbkZvY3VzOiBEaXNhYmxlZEljb25Gb2N1cwogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNDb250cm9sKHByb3BzKSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSB8fCB1bmRlZmluZWQ7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzdWdnZXN0aW9uczogZnVuY3Rpb24gc3VnZ2VzdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpcyRjb250cm9sJHVpc2NoZW07CgogICAgICB2YXIgc3VnZ2VzdGlvbnMgPSAoX3RoaXMkY29udHJvbCR1aXNjaGVtID0gdGhpcy5jb250cm9sLnVpc2NoZW1hLm9wdGlvbnMpID09PSBudWxsIHx8IF90aGlzJGNvbnRyb2wkdWlzY2hlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3RoaXMkY29udHJvbCR1aXNjaGVtLnN1Z2dlc3Rpb247CgogICAgICBpZiAoc3VnZ2VzdGlvbnMgPT09IHVuZGVmaW5lZCB8fCAhaXNBcnJheV9fZGVmYXVsdFsiZGVmYXVsdCJdKHN1Z2dlc3Rpb25zKSB8fCAhZXZlcnlfX2RlZmF1bHRbImRlZmF1bHQiXShzdWdnZXN0aW9ucywgaXNTdHJpbmdfX2RlZmF1bHRbImRlZmF1bHQiXSkpIHsKICAgICAgICAvLyBjaGVjayBmb3IgaW5jb3JyZWN0IGRhdGEKICAgICAgICByZXR1cm4gdW5kZWZpbmVkOwogICAgICB9CgogICAgICByZXR1cm4gc3VnZ2VzdGlvbnM7CiAgICB9CiAgfQp9KTsKdmFyIGVudHJ5JDYgPSB7CiAgcmVuZGVyZXI6IGNvbnRyb2xSZW5kZXJlciQ2LAogIHRlc3RlcjogY29yZS5yYW5rV2l0aCgxLCBjb3JlLmlzU3RyaW5nQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kNiA9IGNvbnRyb2xSZW5kZXJlciQ2OwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJDYgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtaG92ZXInLCB7CiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgdmFyIGhvdmVyID0gcmVmLmhvdmVyOwogICAgICAgIHJldHVybiBbX3ZtLnN1Z2dlc3Rpb25zICE9PSB1bmRlZmluZWQgPyBfYygndi1jb21ib2JveCcsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICJkaXNhYmxlZC1pY29uLWZvY3VzIiwKICAgICAgICAgICAgcmF3TmFtZTogInYtZGlzYWJsZWQtaWNvbi1mb2N1cyIKICAgICAgICAgIH1dLAogICAgICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5jb250cm9sLmlucHV0LAogICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgImlkIjogX3ZtLmNvbnRyb2wuaWQgKyAnLWlucHV0JywKICAgICAgICAgICAgImRpc2FibGVkIjogIV92bS5jb250cm9sLmVuYWJsZWQsCiAgICAgICAgICAgICJhdXRvZm9jdXMiOiBfdm0uYXBwbGllZE9wdGlvbnMuZm9jdXMsCiAgICAgICAgICAgICJwbGFjZWhvbGRlciI6IF92bS5hcHBsaWVkT3B0aW9ucy5wbGFjZWhvbGRlciwKICAgICAgICAgICAgImxhYmVsIjogX3ZtLmNvbXB1dGVkTGFiZWwsCiAgICAgICAgICAgICJoaW50IjogX3ZtLmNvbnRyb2wuZGVzY3JpcHRpb24sCiAgICAgICAgICAgICJwZXJzaXN0ZW50LWhpbnQiOiBfdm0ucGVyc2lzdGVudEhpbnQoKSwKICAgICAgICAgICAgInJlcXVpcmVkIjogX3ZtLmNvbnRyb2wucmVxdWlyZWQsCiAgICAgICAgICAgICJlcnJvci1tZXNzYWdlcyI6IF92bS5jb250cm9sLmVycm9ycywKICAgICAgICAgICAgIm1heGxlbmd0aCI6IF92bS5hcHBsaWVkT3B0aW9ucy5yZXN0cmljdCA/IF92bS5jb250cm9sLnNjaGVtYS5tYXhMZW5ndGggOiB1bmRlZmluZWQsCiAgICAgICAgICAgICJjb3VudGVyIjogX3ZtLmNvbnRyb2wuc2NoZW1hLm1heExlbmd0aCAhPT0gdW5kZWZpbmVkID8gX3ZtLmNvbnRyb2wuc2NoZW1hLm1heExlbmd0aCA6IHVuZGVmaW5lZCwKICAgICAgICAgICAgImNsZWFyYWJsZSI6IGhvdmVyLAogICAgICAgICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhLAogICAgICAgICAgICAiaXRlbXMiOiBfdm0uc3VnZ2VzdGlvbnMsCiAgICAgICAgICAgICJoaWRlLW5vLWRhdGEiOiAiIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkgOiBfYygndi10ZXh0LWZpZWxkJywgewogICAgICAgICAgZGlyZWN0aXZlczogW3sKICAgICAgICAgICAgbmFtZTogImRpc2FibGVkLWljb24tZm9jdXMiLAogICAgICAgICAgICByYXdOYW1lOiAidi1kaXNhYmxlZC1pY29uLWZvY3VzIgogICAgICAgICAgfV0sCiAgICAgICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmNvbnRyb2wuaW5wdXQsCiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAiaWQiOiBfdm0uY29udHJvbC5pZCArICctaW5wdXQnLAogICAgICAgICAgICAiZGlzYWJsZWQiOiAhX3ZtLmNvbnRyb2wuZW5hYmxlZCwKICAgICAgICAgICAgImF1dG9mb2N1cyI6IF92bS5hcHBsaWVkT3B0aW9ucy5mb2N1cywKICAgICAgICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLmFwcGxpZWRPcHRpb25zLnBsYWNlaG9sZGVyLAogICAgICAgICAgICAibGFiZWwiOiBfdm0uY29tcHV0ZWRMYWJlbCwKICAgICAgICAgICAgImhpbnQiOiBfdm0uY29udHJvbC5kZXNjcmlwdGlvbiwKICAgICAgICAgICAgInBlcnNpc3RlbnQtaGludCI6IF92bS5wZXJzaXN0ZW50SGludCgpLAogICAgICAgICAgICAicmVxdWlyZWQiOiBfdm0uY29udHJvbC5yZXF1aXJlZCwKICAgICAgICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzLAogICAgICAgICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhLAogICAgICAgICAgICAibWF4bGVuZ3RoIjogX3ZtLmFwcGxpZWRPcHRpb25zLnJlc3RyaWN0ID8gX3ZtLmNvbnRyb2wuc2NoZW1hLm1heExlbmd0aCA6IHVuZGVmaW5lZCwKICAgICAgICAgICAgImNvdW50ZXIiOiBfdm0uY29udHJvbC5zY2hlbWEubWF4TGVuZ3RoICE9PSB1bmRlZmluZWQgPyBfdm0uY29udHJvbC5zY2hlbWEubWF4TGVuZ3RoIDogdW5kZWZpbmVkLAogICAgICAgICAgICAiY2xlYXJhYmxlIjogaG92ZXIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2hhbmdlIjogX3ZtLm9uQ2hhbmdlLAogICAgICAgICAgICAiZm9jdXMiOiBmdW5jdGlvbiBmb2N1cygkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0uaXNGb2N1c2VkID0gdHJ1ZTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImJsdXIiOiBmdW5jdGlvbiBibHVyKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pXTsKICAgICAgfQogICAgfV0pCiAgfSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyQ2ID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJDYgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kNiA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJDYgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kNiA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kNiA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kNiwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDYKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJDYsIF9fdnVlX3NjcmlwdF9fJDYsIF9fdnVlX3Njb3BlX2lkX18kNiwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJDYsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kNiwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGNvbnRyb2xSZW5kZXJlciQ1ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAndGltZS1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZUZXh0RmllbGQ6IGxpYi5WVGV4dEZpZWxkCiAgfSwKICBwcm9wczogX29iamVjdFNwcmVhZDIoe30sIHZ1ZTIucmVuZGVyZXJQcm9wcygpKSwKICBzZXR1cDogZnVuY3Rpb24gc2V0dXAocHJvcHMpIHsKICAgIHJldHVybiB1c2VWdWV0aWZ5Q29udHJvbCh2dWUyLnVzZUpzb25Gb3Jtc0NvbnRyb2wocHJvcHMpKTsKICB9Cn0pOwp2YXIgZW50cnkkNSA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJDUsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDIsIGNvcmUuaXNUaW1lQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kNSA9IGNvbnRyb2xSZW5kZXJlciQ1OwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJDUgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtdGV4dC1maWVsZCcsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogInRpbWUiLAogICAgICAiaWQiOiBfdm0uY29udHJvbC5pZCArICctaW5wdXQnLAogICAgICAiZGlzYWJsZWQiOiAhX3ZtLmNvbnRyb2wuZW5hYmxlZCwKICAgICAgImF1dG9mb2N1cyI6IF92bS5hcHBsaWVkT3B0aW9ucy5mb2N1cywKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLmFwcGxpZWRPcHRpb25zLnBsYWNlaG9sZGVyLAogICAgICAibGFiZWwiOiBfdm0uY29tcHV0ZWRMYWJlbCwKICAgICAgImhpbnQiOiBfdm0uY29udHJvbC5kZXNjcmlwdGlvbiwKICAgICAgInBlcnNpc3RlbnQtaGludCI6IF92bS5wZXJzaXN0ZW50SGludCgpLAogICAgICAicmVxdWlyZWQiOiBfdm0uY29udHJvbC5yZXF1aXJlZCwKICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzLAogICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IF92bS5vbkNoYW5nZSwKICAgICAgImZvY3VzIjogZnVuY3Rpb24gZm9jdXMoJGV2ZW50KSB7CiAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IHRydWU7CiAgICAgIH0sCiAgICAgICJibHVyIjogZnVuY3Rpb24gYmx1cigkZXZlbnQpIHsKICAgICAgICBfdm0uaXNGb2N1c2VkID0gZmFsc2U7CiAgICAgIH0KICAgIH0KICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDUgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kNSA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyQ1ID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kNSA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyQ1ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyQ1ID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyQ1LAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kNQp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kNSwgX192dWVfc2NyaXB0X18kNSwgX192dWVfc2NvcGVfaWRfXyQ1LCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kNSwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyQ1LCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVycyA9IFtlbnRyeSRrLCBlbnRyeSRqLCBlbnRyeSRpLCBlbnRyeSRoLCBlbnRyeSRnLCBlbnRyeSRmLCBlbnRyeSRlLCBlbnRyeSRkLCBlbnRyeSRjLCBlbnRyeSRiLCBlbnRyeSRhLCBlbnRyeSQ5LCBlbnRyeSQ4LCBlbnRyeSQ3LCBlbnRyeSQ2LCBlbnRyeSQ1XTsKdmFyIGNvbnRyb2xSZW5kZXJlciQ0ID0gY29tcG9zaXRpb25BcGkuZGVmaW5lQ29tcG9uZW50KHsKICBuYW1lOiAnYXV0b2NvbXBsZXRlLWVudW0tY29udHJvbC1yZW5kZXJlcicsCiAgY29tcG9uZW50czogewogICAgQ29udHJvbFdyYXBwZXI6IF9fdnVlX2NvbXBvbmVudF9fJGwsCiAgICBWU2VsZWN0OiBsaWIuVlNlbGVjdCwKICAgIFZBdXRvY29tcGxldGU6IGxpYi5WQXV0b2NvbXBsZXRlLAogICAgVkhvdmVyOiBsaWIuVkhvdmVyCiAgfSwKICBkaXJlY3RpdmVzOiB7CiAgICBEaXNhYmxlZEljb25Gb2N1czogRGlzYWJsZWRJY29uRm9jdXMKICB9LAogIHByb3BzOiBfb2JqZWN0U3ByZWFkMih7fSwgdnVlMi5yZW5kZXJlclByb3BzKCkpLAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zRW51bUNvbnRyb2wocHJvcHMpLCBmdW5jdGlvbiAodmFsdWUpIHsKICAgICAgcmV0dXJuIHZhbHVlIHx8IHVuZGVmaW5lZDsKICAgIH0pOwogIH0KfSk7CnZhciBlbnRyeSQ0ID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkNCwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMTAsIGNvcmUuaXNFbnVtQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kNCA9IGNvbnRyb2xSZW5kZXJlciQ0OwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJDQgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtaG92ZXInLCB7CiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgdmFyIGhvdmVyID0gcmVmLmhvdmVyOwogICAgICAgIHJldHVybiBbX3ZtLmFwcGxpZWRPcHRpb25zLmF1dG9jb21wbGV0ZSA9PT0gZmFsc2UgPyBfYygndi1zZWxlY3QnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLmNvbnRyb2wub3B0aW9ucywKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJsYWJlbCIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogInZhbHVlIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkgOiBfYygndi1hdXRvY29tcGxldGUnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLmNvbnRyb2wub3B0aW9ucywKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJsYWJlbCIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogInZhbHVlIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSldOwogICAgICB9CiAgICB9XSkKICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDQgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kNCA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyQ0ID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kNCA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyQ0ID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyQ0ID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyQ0LAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kNAp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kNCwgX192dWVfc2NyaXB0X18kNCwgX192dWVfc2NvcGVfaWRfXyQ0LCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kNCwgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyQ0LCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgY29udHJvbFJlbmRlcmVyJDMgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdhdXRvY29tcGxldGUtb25lb2YtZW51bS1jb250cm9sLXJlbmRlcmVyJywKICBjb21wb25lbnRzOiB7CiAgICBDb250cm9sV3JhcHBlcjogX192dWVfY29tcG9uZW50X18kbCwKICAgIFZTZWxlY3Q6IGxpYi5WU2VsZWN0LAogICAgVkF1dG9jb21wbGV0ZTogbGliLlZBdXRvY29tcGxldGUsCiAgICBWSG92ZXI6IGxpYi5WSG92ZXIKICB9LAogIGRpcmVjdGl2ZXM6IHsKICAgIERpc2FibGVkSWNvbkZvY3VzOiBEaXNhYmxlZEljb25Gb2N1cwogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNPbmVPZkVudW1Db250cm9sKHByb3BzKSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSB8fCB1bmRlZmluZWQ7CiAgICB9KTsKICB9Cn0pOwp2YXIgZW50cnkkMyA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJDMsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDEwLCBjb3JlLmlzT25lT2ZFbnVtQ29udHJvbCkKfTsKLyogc2NyaXB0ICovCgp2YXIgX192dWVfc2NyaXB0X18kMyA9IGNvbnRyb2xSZW5kZXJlciQzOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fJDMgPSBmdW5jdGlvbiBfX3Z1ZV9yZW5kZXJfXygpIHsKICB2YXIgX3ZtID0gdGhpczsKCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50OwoKICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2g7CgogIHJldHVybiBfYygnY29udHJvbC13cmFwcGVyJywgX3ZtLl9iKHsKICAgIGF0dHJzOiB7CiAgICAgICJzdHlsZXMiOiBfdm0uc3R5bGVzLAogICAgICAiaXNGb2N1c2VkIjogX3ZtLmlzRm9jdXNlZCwKICAgICAgImFwcGxpZWRPcHRpb25zIjogX3ZtLmFwcGxpZWRPcHRpb25zCiAgICB9CiAgfSwgJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5jb250cm9sV3JhcHBlciwgZmFsc2UpLCBbX2MoJ3YtaG92ZXInLCB7CiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImRlZmF1bHQiLAogICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgdmFyIGhvdmVyID0gcmVmLmhvdmVyOwogICAgICAgIHJldHVybiBbX3ZtLmFwcGxpZWRPcHRpb25zLmF1dG9jb21wbGV0ZSA9PT0gZmFsc2UgPyBfYygndi1zZWxlY3QnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLmNvbnRyb2wub3B0aW9ucywKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJsYWJlbCIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogInZhbHVlIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkgOiBfYygndi1hdXRvY29tcGxldGUnLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbewogICAgICAgICAgICBuYW1lOiAiZGlzYWJsZWQtaWNvbi1mb2N1cyIsCiAgICAgICAgICAgIHJhd05hbWU6ICJ2LWRpc2FibGVkLWljb24tZm9jdXMiCiAgICAgICAgICB9XSwKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuY29udHJvbC5pbnB1dCwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJpZCI6IF92bS5jb250cm9sLmlkICsgJy1pbnB1dCcsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgICAiYXV0b2ZvY3VzIjogX3ZtLmFwcGxpZWRPcHRpb25zLmZvY3VzLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAiaGludCI6IF92bS5jb250cm9sLmRlc2NyaXB0aW9uLAogICAgICAgICAgICAicGVyc2lzdGVudC1oaW50IjogX3ZtLnBlcnNpc3RlbnRIaW50KCksCiAgICAgICAgICAgICJyZXF1aXJlZCI6IF92bS5jb250cm9sLnJlcXVpcmVkLAogICAgICAgICAgICAiZXJyb3ItbWVzc2FnZXMiOiBfdm0uY29udHJvbC5lcnJvcnMsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlciwKICAgICAgICAgICAgInZhbHVlIjogX3ZtLmNvbnRyb2wuZGF0YSwKICAgICAgICAgICAgIml0ZW1zIjogX3ZtLmNvbnRyb2wub3B0aW9ucywKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJsYWJlbCIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogInZhbHVlIgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0ub25DaGFuZ2UsCiAgICAgICAgICAgICJmb2N1cyI6IGZ1bmN0aW9uIGZvY3VzKCRldmVudCkgewogICAgICAgICAgICAgIF92bS5pc0ZvY3VzZWQgPSB0cnVlOwogICAgICAgICAgICB9LAogICAgICAgICAgICAiYmx1ciI6IGZ1bmN0aW9uIGJsdXIoJGV2ZW50KSB7CiAgICAgICAgICAgICAgX3ZtLmlzRm9jdXNlZCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSldOwogICAgICB9CiAgICB9XSkKICB9KV0sIDEpOwp9OwoKdmFyIF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDMgPSBbXTsKLyogc3R5bGUgKi8KCnZhciBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kMyA9IHVuZGVmaW5lZDsKLyogc2NvcGVkICovCgp2YXIgX192dWVfc2NvcGVfaWRfXyQzID0gdW5kZWZpbmVkOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kMyA9IHVuZGVmaW5lZDsKLyogZnVuY3Rpb25hbCB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyQzID0gZmFsc2U7Ci8qIHN0eWxlIGluamVjdCAqLwoKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyQzID0gLyojX19QVVJFX18qL25vcm1hbGl6ZUNvbXBvbmVudCh7CiAgcmVuZGVyOiBfX3Z1ZV9yZW5kZXJfXyQzLAogIHN0YXRpY1JlbmRlckZuczogX192dWVfc3RhdGljUmVuZGVyRm5zX18kMwp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18kMywgX192dWVfc2NyaXB0X18kMywgX192dWVfc2NvcGVfaWRfXyQzLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kMywgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyQzLCBmYWxzZSwgdW5kZWZpbmVkLCB1bmRlZmluZWQsIHVuZGVmaW5lZCk7Cgp2YXIgZXh0ZW5kZWRSZW5kZXJlcnMgPSBbZW50cnkkNCwgZW50cnkkM107CnZhciBjb250cm9sUmVuZGVyZXIkMiA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ3N1Z2dlc3QtY29udHJvbC1yZW5kZXJlcicsCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRlc2NyaXB0aW9uTGltaXQ6IDYwLAogICAgICBlbnRyaWVzOiBbXSwKICAgICAgaXNMb2FkaW5nOiBmYWxzZSwKICAgICAgbW9kZWw6IG51bGwsCiAgICAgIHNlYXJjaDogbnVsbAogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVkF1dG9jb21wbGV0ZTogbGliLlZBdXRvY29tcGxldGUsCiAgICBWSG92ZXI6IGxpYi5WSG92ZXIKICB9LAogIHNldHVwOiBmdW5jdGlvbiBzZXR1cChwcm9wcykgewogICAgcmV0dXJuIHVzZVZ1ZXRpZnlDb250cm9sKHZ1ZTIudXNlSnNvbkZvcm1zQ29udHJvbChwcm9wcyksIGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICByZXR1cm4gdmFsdWUgfHwgdW5kZWZpbmVkOwogICAgfSk7CiAgfSwKICBjb21wdXRlZDogewogICAgaXRlbXM6IGZ1bmN0aW9uIGl0ZW1zKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIHRoaXMuZW50cmllcy5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgICAgdmFyIERlc2NyaXB0aW9uID0gZW50cnkuRGVzY3JpcHRpb24ubGVuZ3RoID4gX3RoaXMuZGVzY3JpcHRpb25MaW1pdCA/IGVudHJ5LkRlc2NyaXB0aW9uLnNsaWNlKDAsIF90aGlzLmRlc2NyaXB0aW9uTGltaXQpICsgJy4uLicgOiBlbnRyeS5EZXNjcmlwdGlvbjsKICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgZW50cnksIHsKICAgICAgICAgIERlc2NyaXB0aW9uOiBEZXNjcmlwdGlvbgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoYW5nZUhhbmRsZXI6IGZ1bmN0aW9uIGNoYW5nZUhhbmRsZXIodmFsdWUpIHsKICAgICAgY29uc29sZS5sb2coJ2NoYW5nZUhhbmRsZXInKTsKICAgICAgY29uc29sZS5sb2codmFsdWUpOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHNlYXJjaDogZnVuY3Rpb24gc2VhcmNoKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsgLy8gSXRlbXMgaGF2ZSBhbHJlYWR5IGJlZW4gbG9hZGVkCiAgICAgIC8vIGlmICh0aGlzLml0ZW1zLmxlbmd0aCA+IDApIHJldHVybjsKICAgICAgLy8gSXRlbXMgaGF2ZSBhbHJlYWR5IGJlZW4gcmVxdWVzdGVkCgoKICAgICAgaWYgKHRoaXMuaXNMb2FkaW5nKSByZXR1cm47CiAgICAgIHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTsgLy8gTGF6aWx5IGxvYWQgaW5wdXQgaXRlbXMKICAgICAgLy8gZmV0Y2goJ2h0dHBzOi8vYXBpLnB1YmxpY2FwaXMub3JnL2VudHJpZXMnKQoKICAgICAgZmV0Y2godGhpcy5hcHBsaWVkT3B0aW9ucy51cmwpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHJldHVybiByZXMuanNvbigpOwogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZW50cmllcyA9IHJlcy5lbnRyaWVzOwogICAgICAgIF90aGlzMi5lbnRyaWVzID0gZW50cmllczsKICAgICAgfSlbImNhdGNoIl0oZnVuY3Rpb24gKGVycikgewogICAgICAgIGNvbnNvbGUubG9nKGVycik7CiAgICAgIH0pWyJmaW5hbGx5Il0oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfdGhpczIuaXNMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfQogIH0KfSk7CnZhciBlbnRyeSQyID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIkMiwKICB0ZXN0ZXI6IGNvcmUucmFua1dpdGgoMSwgY29yZS51aVR5cGVJcygnU3VnZ2VzdCcpKQp9OwovKiBzY3JpcHQgKi8KCnZhciBfX3Z1ZV9zY3JpcHRfXyQyID0gY29udHJvbFJlbmRlcmVyJDI7Ci8qIHRlbXBsYXRlICovCgp2YXIgX192dWVfcmVuZGVyX18kMiA9IGZ1bmN0aW9uIF9fdnVlX3JlbmRlcl9fKCkgewogIHZhciBfdm0gPSB0aGlzOwoKICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQ7CgogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaDsKCiAgcmV0dXJuIF9jKCdjb250cm9sLXdyYXBwZXInLCBfdm0uX2IoewogICAgYXR0cnM6IHsKICAgICAgInN0eWxlcyI6IF92bS5zdHlsZXMsCiAgICAgICJpc0ZvY3VzZWQiOiBfdm0uaXNGb2N1c2VkLAogICAgICAiYXBwbGllZE9wdGlvbnMiOiBfdm0uYXBwbGllZE9wdGlvbnMKICAgIH0KICB9LCAnY29udHJvbC13cmFwcGVyJywgX3ZtLmNvbnRyb2xXcmFwcGVyLCBmYWxzZSksIFtfYygndi1ob3ZlcicsIHsKICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAga2V5OiAiZGVmYXVsdCIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICB2YXIgaG92ZXIgPSByZWYuaG92ZXI7CiAgICAgICAgcmV0dXJuIFtfYygndi1hdXRvY29tcGxldGUnLCB7CiAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAidmFsdWUiOiBfdm0uY29udHJvbC5kYXRhLAogICAgICAgICAgICAiaXRlbXMiOiBfdm0uaXRlbXMsCiAgICAgICAgICAgICJsb2FkaW5nIjogX3ZtLmlzTG9hZGluZywKICAgICAgICAgICAgInNlYXJjaC1pbnB1dCI6IF92bS5zZWFyY2gsCiAgICAgICAgICAgICJoaWRlLW5vLWRhdGEiOiAiIiwKICAgICAgICAgICAgIml0ZW0tdGV4dCI6ICJEZXNjcmlwdGlvbiIsCiAgICAgICAgICAgICJpdGVtLXZhbHVlIjogIkFQSSIsCiAgICAgICAgICAgICJsYWJlbCI6IF92bS5jb21wdXRlZExhYmVsLAogICAgICAgICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICAgICAgICJwcmVwZW5kLWljb24iOiAibWRpLWRhdGFiYXNlLXNlYXJjaCIsCiAgICAgICAgICAgICJyZXR1cm4tb2JqZWN0IjogIiIsCiAgICAgICAgICAgICJjbGVhcmFibGUiOiBob3ZlcgogICAgICAgICAgfSwKICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICJ1cGRhdGU6c2VhcmNoSW5wdXQiOiBmdW5jdGlvbiB1cGRhdGVTZWFyY2hJbnB1dCgkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0uc2VhcmNoID0gJGV2ZW50OwogICAgICAgICAgICB9LAogICAgICAgICAgICAidXBkYXRlOnNlYXJjaC1pbnB1dCI6IGZ1bmN0aW9uIHVwZGF0ZVNlYXJjaElucHV0KCRldmVudCkgewogICAgICAgICAgICAgIF92bS5zZWFyY2ggPSAkZXZlbnQ7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJjaGFuZ2UiOiBfdm0uY2hhbmdlSGFuZGxlcgogICAgICAgICAgfQogICAgICAgIH0pXTsKICAgICAgfQogICAgfV0pCiAgfSldLCAxKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyQyID0gW107Ci8qIHN0eWxlICovCgp2YXIgX192dWVfaW5qZWN0X3N0eWxlc19fJDIgPSB1bmRlZmluZWQ7Ci8qIHNjb3BlZCAqLwoKdmFyIF9fdnVlX3Njb3BlX2lkX18kMiA9IHVuZGVmaW5lZDsKLyogbW9kdWxlIGlkZW50aWZpZXIgKi8KCnZhciBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJDIgPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18kMiA9IGZhbHNlOwovKiBzdHlsZSBpbmplY3QgKi8KCi8qIHN0eWxlIGluamVjdCBTU1IgKi8KCi8qIHN0eWxlIGluamVjdCBzaGFkb3cgZG9tICovCgp2YXIgX192dWVfY29tcG9uZW50X18kMiA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18kMiwKICBzdGF0aWNSZW5kZXJGbnM6IF9fdnVlX3N0YXRpY1JlbmRlckZuc19fJDIKfSwgX192dWVfaW5qZWN0X3N0eWxlc19fJDIsIF9fdnVlX3NjcmlwdF9fJDIsIF9fdnVlX3Njb3BlX2lkX18kMiwgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJDIsIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18kMiwgZmFsc2UsIHVuZGVmaW5lZCwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGR5bmFmb3JtUmVuZGVyZXJzID0gW2VudHJ5JDJdOwp2YXIgY29udHJvbFJlbmRlcmVyJDEgPSBjb21wb3NpdGlvbkFwaS5kZWZpbmVDb21wb25lbnQoewogIG5hbWU6ICdtdWx0aXBsZS1maWxlLWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIENvbnRyb2xXcmFwcGVyOiBfX3Z1ZV9jb21wb25lbnRfXyRsLAogICAgVkNhcmQ6IGxpYi5WQ2FyZCwKICAgIFZGaWxlSW5wdXQ6IGxpYi5WRmlsZUlucHV0LAogICAgVkxpc3RJdGVtOiBsaWIuVkxpc3RJdGVtLAogICAgVkxpc3RJdGVtQXZhdGFyOiBsaWIuVkxpc3RJdGVtQXZhdGFyLAogICAgVkljb246IGxpYi5WSWNvbiwKICAgIFZMaXN0SXRlbUNvbnRlbnQ6IGxpYi5WTGlzdEl0ZW1Db250ZW50LAogICAgVkxpc3RJdGVtVGl0bGU6IGxpYi5WTGlzdEl0ZW1UaXRsZSwKICAgIFZMaXN0SXRlbVN1YnRpdGxlOiBsaWIuVkxpc3RJdGVtU3VidGl0bGUsCiAgICBWUHJvZ3Jlc3NMaW5lYXI6IGxpYi5WUHJvZ3Jlc3NMaW5lYXIsCiAgICBWTGlzdEl0ZW1BY3Rpb246IGxpYi5WTGlzdEl0ZW1BY3Rpb24sCiAgICBWQnRuOiBsaWIuVkJ0bgogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gdXNlVnVldGlmeUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNDb250cm9sKHByb3BzKSwgZnVuY3Rpb24gKHZhbHVlKSB7CiAgICAgIHJldHVybiB2YWx1ZSB8fCB1bmRlZmluZWQ7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBmaWxlczogewogICAgICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0sCiAgICAgIHNldDogZnVuY3Rpb24gc2V0KGZpbGVzKSB7CiAgICAgICAgdmFyIG5ld0ZpbGVzID0gZmlsZXMubWFwKGZ1bmN0aW9uIChmaWxlKSB7CiAgICAgICAgICAvL1RPRE8gdXBsb2FkIHRoZSBmaWxlIHNlcnZpY2UKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIG5hbWU6IGZpbGUubmFtZSwKICAgICAgICAgICAgc2l6ZTogZmlsZS5zaXplLAogICAgICAgICAgICBtaW1ldHlwZTogZmlsZS50eXBlCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIHRoaXMub25DaGFuZ2UoW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShuZXdGaWxlcyksIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmNvbnRyb2wuZGF0YSA/IHRoaXMuY29udHJvbC5kYXRhIDogW10pKSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGRlbGV0ZUZpbGU6IGZ1bmN0aW9uIGRlbGV0ZUZpbGUoZXZlbnQsIGluZGV4KSB7CiAgICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB0aGlzLmNvbnRyb2wuZGF0YS5zcGxpY2UoaW5kZXgsIDEpOwogICAgICB0aGlzLm9uQ2hhbmdlKHRoaXMuY29udHJvbC5kYXRhKTsKICAgIH0sCiAgICBkb3dubG9hZEZpbGU6IGZ1bmN0aW9uIGRvd25sb2FkRmlsZShldmVudCkgewogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgIH0KICB9Cn0pOwp2YXIgZW50cnkkMSA9IHsKICByZW5kZXJlcjogY29udHJvbFJlbmRlcmVyJDEsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDYsIGNvcmUuYW5kKGNvcmUuaXNPYmplY3RBcnJheVdpdGhOZXN0aW5nLCBjb3JlLm9wdGlvbklzKCdtdWx0aXBsZUZpbGUnLCB0cnVlKSkpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fJDEgPSBjb250cm9sUmVuZGVyZXIkMTsKLyogdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9yZW5kZXJfXyQxID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX2MoJ2NvbnRyb2wtd3JhcHBlcicsIF92bS5fYih7CiAgICBhdHRyczogewogICAgICAic3R5bGVzIjogX3ZtLnN0eWxlcywKICAgICAgImlzRm9jdXNlZCI6IF92bS5pc0ZvY3VzZWQsCiAgICAgICJhcHBsaWVkT3B0aW9ucyI6IF92bS5hcHBsaWVkT3B0aW9ucwogICAgfQogIH0sICdjb250cm9sLXdyYXBwZXInLCBfdm0uY29udHJvbFdyYXBwZXIsIGZhbHNlKSwgW19jKCd2LWNhcmQnLCB7CiAgICBhdHRyczogewogICAgICAiZWxldmF0aW9uIjogIjIiLAogICAgICAib3V0bGluZWQiOiAiIgogICAgfQogIH0sIFtfYygndi1maWxlLWlucHV0JywgewogICAgYXR0cnM6IHsKICAgICAgImxhYmVsIjogX3ZtLmNvbXB1dGVkTGFiZWwsCiAgICAgICJtdWx0aXBsZSI6ICIiLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uYXBwbGllZE9wdGlvbnMucGxhY2Vob2xkZXIsCiAgICAgICJwcmVwZW5kLWljb24iOiAibWRpLXBhcGVyY2xpcCIsCiAgICAgICJjbGVhcmFibGUiOiBmYWxzZSwKICAgICAgInNob3ctc2l6ZSI6IDEwMDAsCiAgICAgICJhY2NlcHQiOiBfdm0uYXBwbGllZE9wdGlvbnMuYWNjZXB0LAogICAgICAicmVxdWlyZWQiOiBfdm0uY29udHJvbC5yZXF1aXJlZCwKICAgICAgImVycm9yLW1lc3NhZ2VzIjogX3ZtLmNvbnRyb2wuZXJyb3JzCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5maWxlcywKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS5maWxlcyA9ICQkdjsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogImZpbGVzIgogICAgfQogIH0pLCBfdm0uX3YoIiAiKSwgX3ZtLl9sKF92bS5jb250cm9sLmRhdGEsIGZ1bmN0aW9uIChpdGVtLCBpKSB7CiAgICByZXR1cm4gX2MoJ3YtbGlzdC1pdGVtJywgewogICAgICBrZXk6IGkKICAgIH0sIFtfYygndi1saXN0LWl0ZW0tYXZhdGFyJywgW19jKCd2LWljb24nLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImxhcmdlIjogIiIKICAgICAgfQogICAgfSwgW192bS5fdigiIG1kaS1maWxlLWpwZy1ib3ggIildKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtbGlzdC1pdGVtLWNvbnRlbnQnLCBbX2MoJ3YtbGlzdC1pdGVtLXRpdGxlJywgW192bS5fdihfdm0uX3MoaXRlbS5uYW1lKSldKSwgX3ZtLl92KCIgIiksIF9jKCd2LWxpc3QtaXRlbS1zdWJ0aXRsZScsIFtfYygndi1wcm9ncmVzcy1saW5lYXInLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImNvbG9yIjogImxpZ2h0LWdyZWVuIGRhcmtlbi00IiwKICAgICAgICAiaGVpZ2h0IjogIjEwIiwKICAgICAgICAidmFsdWUiOiAiNzAiLAogICAgICAgICJzdHJpcGVkIjogIiIKICAgICAgfQogICAgfSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtbGlzdC1pdGVtLWFjdGlvbicsIFtfYygndi1idG4nLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImljb24iOiAiIiwKICAgICAgICAiYWxpZ24iOiAibGVmdCIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uZG93bmxvYWRGaWxlKCRldmVudCwgaSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ3YtaWNvbicsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiY29sb3IiOiAiZ3JleSBsaWdodGVuLTEiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIm1kaS1maWxlLWRvd25sb2FkIildKV0sIDEpXSwgMSksIF92bS5fdigiICIpLCBfYygndi1saXN0LWl0ZW0tYWN0aW9uJywgW19jKCd2LWJ0bicsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiaWNvbiI6ICIiLAogICAgICAgICJhbGlnbiI6ICJyaWdodCIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uZGVsZXRlRmlsZSgkZXZlbnQsIGkpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW19jKCd2LWljb24nLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImNvbG9yIjogImdyZXkgbGlnaHRlbi0xIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCJtZGktZGVsZXRlIildKV0sIDEpXSwgMSldLCAxKTsKICB9KV0sIDIpXSwgMSk7Cn07Cgp2YXIgX192dWVfc3RhdGljUmVuZGVyRm5zX18kMSA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyQxID0gdW5kZWZpbmVkOwovKiBzY29wZWQgKi8KCnZhciBfX3Z1ZV9zY29wZV9pZF9fJDEgPSB1bmRlZmluZWQ7Ci8qIG1vZHVsZSBpZGVudGlmaWVyICovCgp2YXIgX192dWVfbW9kdWxlX2lkZW50aWZpZXJfXyQxID0gdW5kZWZpbmVkOwovKiBmdW5jdGlvbmFsIHRlbXBsYXRlICovCgp2YXIgX192dWVfaXNfZnVuY3Rpb25hbF90ZW1wbGF0ZV9fJDEgPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0ICovCgovKiBzdHlsZSBpbmplY3QgU1NSICovCgovKiBzdHlsZSBpbmplY3Qgc2hhZG93IGRvbSAqLwoKdmFyIF9fdnVlX2NvbXBvbmVudF9fJDEgPSAvKiNfX1BVUkVfXyovbm9ybWFsaXplQ29tcG9uZW50KHsKICByZW5kZXI6IF9fdnVlX3JlbmRlcl9fJDEsCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyQxCn0sIF9fdnVlX2luamVjdF9zdHlsZXNfXyQxLCBfX3Z1ZV9zY3JpcHRfXyQxLCBfX3Z1ZV9zY29wZV9pZF9fJDEsIF9fdnVlX2lzX2Z1bmN0aW9uYWxfdGVtcGxhdGVfXyQxLCBfX3Z1ZV9tb2R1bGVfaWRlbnRpZmllcl9fJDEsIGZhbHNlLCB1bmRlZmluZWQsIHVuZGVmaW5lZCwgdW5kZWZpbmVkKTsKCnZhciBmaWxlc1JlbmRlcmVycyA9IFtlbnRyeSQxXTsKdmFyIGNvbnRyb2xSZW5kZXJlciA9IGNvbXBvc2l0aW9uQXBpLmRlZmluZUNvbXBvbmVudCh7CiAgbmFtZTogJ2FycmF5LWNvbnRyb2wtcmVuZGVyZXInLAogIGNvbXBvbmVudHM6IHsKICAgIERpc3BhdGNoQ2VsbDogdnVlMi5EaXNwYXRjaENlbGwsCiAgICBEaXNwYXRjaFJlbmRlcmVyOiB2dWUyLkRpc3BhdGNoUmVuZGVyZXIsCiAgICBWQ2FyZDogbGliLlZDYXJkLAogICAgVkNhcmRUaXRsZTogbGliLlZDYXJkVGl0bGUsCiAgICBWQ2FyZFRleHQ6IGxpYi5WQ2FyZFRleHQsCiAgICBWQXZhdGFyOiBsaWIuVkF2YXRhciwKICAgIFZSb3c6IGxpYi5WUm93LAogICAgVkNvbDogbGliLlZDb2wsCiAgICBWVG9vbGJhcjogbGliLlZUb29sYmFyLAogICAgVlRvb2xiYXJUaXRsZTogbGliLlZUb29sYmFyVGl0bGUsCiAgICBWVG9vbHRpcDogbGliLlZUb29sdGlwLAogICAgVkljb246IGxpYi5WSWNvbiwKICAgIFZCdG46IGxpYi5WQnRuLAogICAgVlNwYWNlcjogbGliLlZTcGFjZXIsCiAgICBWQ29udGFpbmVyOiBsaWIuVkNvbnRhaW5lciwKICAgIFZhbGlkYXRpb25JY29uOiBfX3Z1ZV9jb21wb25lbnRfXyRBLAogICAgVmFsaWRhdGlvbkJhZGdlOiBfX3Z1ZV9jb21wb25lbnRfXyRCLAogICAgVlNpbXBsZVRhYmxlOiBsaWIuVlNpbXBsZVRhYmxlLAogICAgVlBhZ2luYXRpb246IGxpYi5WUGFnaW5hdGlvbgogIH0sCiAgcHJvcHM6IF9vYmplY3RTcHJlYWQyKHt9LCB2dWUyLnJlbmRlcmVyUHJvcHMoKSksCiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKHByb3BzKSB7CiAgICByZXR1cm4gX29iamVjdFNwcmVhZDIoX29iamVjdFNwcmVhZDIoe30sIHVzZVZ1ZXRpZnlBcnJheUNvbnRyb2wodnVlMi51c2VKc29uRm9ybXNBcnJheUNvbnRyb2wocHJvcHMpKSksIHt9LCB7CiAgICAgIHBhZ2U6IDEKICAgIH0pOwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGFycmF5U2NoZW1hOiBmdW5jdGlvbiBhcnJheVNjaGVtYSgpIHsKICAgICAgcmV0dXJuIGNvcmUuUmVzb2x2ZS5zY2hlbWEodGhpcy5jb250cm9sLnJvb3RTY2hlbWEsIHRoaXMuY29udHJvbC51aXNjaGVtYS5zY29wZSwgdGhpcy5jb250cm9sLnJvb3RTY2hlbWEpOwogICAgfSwKICAgIHRvdGFsUGFnZXM6IGZ1bmN0aW9uIHRvdGFsUGFnZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLmFwcGxpZWRPcHRpb25zLnBhZ2VTaXplID8gTWF0aC5jZWlsKHRoaXMuY29udHJvbC5kYXRhLmxlbmd0aCAvIHRoaXMuYXBwbGllZE9wdGlvbnMucGFnZVNpemUpIDogMTsKICAgIH0sCiAgICBub0RhdGE6IGZ1bmN0aW9uIG5vRGF0YSgpIHsKICAgICAgcmV0dXJuICF0aGlzLmNvbnRyb2wuZGF0YSB8fCB0aGlzLmNvbnRyb2wuZGF0YS5sZW5ndGggPT09IDA7CiAgICB9LAogICAgcGFnaW5hdGU6IGZ1bmN0aW9uIHBhZ2luYXRlKCkgewogICAgICB2YXIgc2l6ZSA9IHRoaXMuYXBwbGllZE9wdGlvbnMucGFnZVNpemUgPyB0aGlzLmFwcGxpZWRPcHRpb25zLnBhZ2VTaXplIDogdGhpcy5jb250cm9sLmRhdGEubGVuZ3RoOwogICAgICB2YXIgbGlzdCA9IGxvZGFzaC5jbG9uZURlZXAodGhpcy5jb250cm9sLmRhdGEpOwogICAgICB2YXIgdGVtcCA9IHRoaXMucGFnZTsKCiAgICAgIGlmICh0aGlzLnBhZ2UgPj0gdGhpcy50b3RhbFBhZ2VzKSB7CiAgICAgICAgdGVtcCAtPSAxOwogICAgICB9CgogICAgICB2YXIgaW5kZXggPSB0ZW1wICogc2l6ZTsKICAgICAgcmV0dXJuIGxpc3Quc2xpY2UoaW5kZXgsIGluZGV4ICsgc2l6ZSk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjb21wb3NlUGF0aHM6IGNvcmUuY29tcG9zZVBhdGhzLAogICAgY3JlYXRlRGVmYXVsdFZhbHVlOiBjb3JlLmNyZWF0ZURlZmF1bHRWYWx1ZSwKICAgIGFkZEJ1dHRvbkNsaWNrOiBmdW5jdGlvbiBhZGRCdXR0b25DbGljaygpIHsKICAgICAgdGhpcy5hZGRJdGVtKHRoaXMuY29udHJvbC5wYXRoLCBjb3JlLmNyZWF0ZURlZmF1bHRWYWx1ZSh0aGlzLmNvbnRyb2wuc2NoZW1hKSkoKTsKICAgIH0sCiAgICBtb3ZlVXBDbGljazogZnVuY3Rpb24gbW92ZVVwQ2xpY2soZXZlbnQsIHRvTW92ZSkgewogICAgICB2YXIgX3RoaXMkbW92ZVVwOwoKICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgIChfdGhpcyRtb3ZlVXAgPSB0aGlzLm1vdmVVcCkgPT09IG51bGwgfHwgX3RoaXMkbW92ZVVwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRtb3ZlVXAuY2FsbCh0aGlzLCB0aGlzLmNvbnRyb2wucGF0aCwgdG9Nb3ZlKSgpOwogICAgfSwKICAgIG1vdmVEb3duQ2xpY2s6IGZ1bmN0aW9uIG1vdmVEb3duQ2xpY2soZXZlbnQsIHRvTW92ZSkgewogICAgICB2YXIgX3RoaXMkbW92ZURvd247CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgKF90aGlzJG1vdmVEb3duID0gdGhpcy5tb3ZlRG93bikgPT09IG51bGwgfHwgX3RoaXMkbW92ZURvd24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJG1vdmVEb3duLmNhbGwodGhpcywgdGhpcy5jb250cm9sLnBhdGgsIHRvTW92ZSkoKTsKICAgIH0sCiAgICByZW1vdmVJdGVtc0NsaWNrOiBmdW5jdGlvbiByZW1vdmVJdGVtc0NsaWNrKGV2ZW50LCB0b0RlbGV0ZSkgewogICAgICB2YXIgX3RoaXMkcmVtb3ZlSXRlbXM7CgogICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgICAgKF90aGlzJHJlbW92ZUl0ZW1zID0gdGhpcy5yZW1vdmVJdGVtcykgPT09IG51bGwgfHwgX3RoaXMkcmVtb3ZlSXRlbXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJHJlbW92ZUl0ZW1zLmNhbGwodGhpcywgdGhpcy5jb250cm9sLnBhdGgsIHRvRGVsZXRlKSgpOwogICAgfSwKICAgIGdldFZhbGlkQ29sdW1uUHJvcHM6IGZ1bmN0aW9uIGdldFZhbGlkQ29sdW1uUHJvcHMoc2NvcGVkU2NoZW1hKSB7CiAgICAgIGlmIChzY29wZWRTY2hlbWEudHlwZSA9PT0gJ29iamVjdCcgJiYgX3R5cGVvZihzY29wZWRTY2hlbWEucHJvcGVydGllcykgPT09ICdvYmplY3QnKSB7CiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHNjb3BlZFNjaGVtYS5wcm9wZXJ0aWVzKS5maWx0ZXIoZnVuY3Rpb24gKHByb3ApIHsKICAgICAgICAgIHJldHVybiBzY29wZWRTY2hlbWEucHJvcGVydGllc1twcm9wXS50eXBlICE9PSAnYXJyYXknOwogICAgICAgIH0pOwogICAgICB9IC8vIHByaW1pdGl2ZXMKCgogICAgICByZXR1cm4gWycnXTsKICAgIH0sCiAgICB0aXRsZTogZnVuY3Rpb24gdGl0bGUocHJvcCkgewogICAgICB2YXIgX3RoaXMkY29udHJvbCRzY2hlbWEkLCBfdGhpcyRjb250cm9sJHNjaGVtYSQyLCBfdGhpcyRjb250cm9sJHNjaGVtYSQzOwoKICAgICAgcmV0dXJuIChfdGhpcyRjb250cm9sJHNjaGVtYSQgPSAoX3RoaXMkY29udHJvbCRzY2hlbWEkMiA9IHRoaXMuY29udHJvbC5zY2hlbWEucHJvcGVydGllcykgPT09IG51bGwgfHwgX3RoaXMkY29udHJvbCRzY2hlbWEkMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF90aGlzJGNvbnRyb2wkc2NoZW1hJDMgPSBfdGhpcyRjb250cm9sJHNjaGVtYSQyW3Byb3BdKSA9PT0gbnVsbCB8fCBfdGhpcyRjb250cm9sJHNjaGVtYSQzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyRjb250cm9sJHNjaGVtYSQzLnRpdGxlKSAhPT0gbnVsbCAmJiBfdGhpcyRjb250cm9sJHNjaGVtYSQgIT09IHZvaWQgMCA/IF90aGlzJGNvbnRyb2wkc2NoZW1hJCA6IHN0YXJ0Q2FzZV9fZGVmYXVsdFsiZGVmYXVsdCJdKHByb3ApOwogICAgfSwKICAgIHJlc29sdmVVaVNjaGVtYTogZnVuY3Rpb24gcmVzb2x2ZVVpU2NoZW1hKHByb3BOYW1lKSB7CiAgICAgIHJldHVybiB0aGlzLmNvbnRyb2wuc2NoZW1hLnByb3BlcnRpZXMgPyB0aGlzLmNvbnRyb2xXaXRob3V0TGFiZWwoIiMvcHJvcGVydGllcy8iLmNvbmNhdChwcm9wTmFtZSkpIDogdGhpcy5jb250cm9sV2l0aG91dExhYmVsKCcjJyk7CiAgICB9LAogICAgY29udHJvbFdpdGhvdXRMYWJlbDogZnVuY3Rpb24gY29udHJvbFdpdGhvdXRMYWJlbChzY29wZSkgewogICAgICByZXR1cm4gewogICAgICAgIHR5cGU6ICdDb250cm9sJywKICAgICAgICBzY29wZTogc2NvcGUsCiAgICAgICAgbGFiZWw6IGZhbHNlCiAgICAgIH07CiAgICB9CiAgfQp9KTsKdmFyIGVudHJ5ID0gewogIHJlbmRlcmVyOiBjb250cm9sUmVuZGVyZXIsCiAgdGVzdGVyOiBjb3JlLnJhbmtXaXRoKDUsIGNvcmUub3IoY29yZS5pc09iamVjdEFycmF5Q29udHJvbCwgY29yZS5pc1ByaW1pdGl2ZUFycmF5Q29udHJvbCkpCn07Ci8qIHNjcmlwdCAqLwoKdmFyIF9fdnVlX3NjcmlwdF9fID0gY29udHJvbFJlbmRlcmVyOwovKiB0ZW1wbGF0ZSAqLwoKdmFyIF9fdnVlX3JlbmRlcl9fID0gZnVuY3Rpb24gX192dWVfcmVuZGVyX18oKSB7CiAgdmFyIF92bSA9IHRoaXM7CgogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudDsKCiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oOwoKICByZXR1cm4gX3ZtLmNvbnRyb2wudmlzaWJsZSA/IF9jKCd2LWNhcmQnLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5yb290LAogICAgYXR0cnM6IHsKICAgICAgImVsZXZhdGlvbiI6ICIwIgogICAgfQogIH0sIFtfYygndi1jYXJkLXRpdGxlJywgW19jKCd2LXRvb2xiYXInLCB7CiAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC50b29sYmFyLAogICAgYXR0cnM6IHsKICAgICAgImZsYXQiOiAiIgogICAgfQogIH0sIFtfYygndi10b29sYmFyLXRpdGxlJywgewogICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QubGFiZWwKICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uY29tcHV0ZWRMYWJlbCkpXSksIF92bS5fdigiICIpLCBfdm0uY29udHJvbC5jaGlsZEVycm9ycy5sZW5ndGggPiAwID8gX2MoJ3ZhbGlkYXRpb24taWNvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJlcnJvcnMiOiBfdm0uY29udHJvbC5jaGlsZEVycm9ycwogICAgfQogIH0pIDogX3ZtLl9lKCksIF92bS5fdigiICIpLCBfYygndi1zcGFjZXInKSwgX3ZtLl92KCIgIiksIF9jKCd2LXRvb2x0aXAnLCB7CiAgICBhdHRyczogewogICAgICAiYm90dG9tIjogIiIKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgIHJldHVybiBbX2MoJ3YtYnRuJywgX3ZtLl9nKHsKICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0LmFkZEJ1dHRvbiwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICJmYWIiOiAiIiwKICAgICAgICAgICAgInRleHQiOiAiIiwKICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgInNtYWxsIjogIiIsCiAgICAgICAgICAgICJhcmlhLWxhYmVsIjogIkFkZCB0byAiICsgX3ZtLmNvbnRyb2wubGFiZWwsCiAgICAgICAgICAgICJkaXNhYmxlZCI6ICFfdm0uY29udHJvbC5lbmFibGVkIHx8IF92bS5hcHBsaWVkT3B0aW9ucy5yZXN0cmljdCAmJiBfdm0uYXJyYXlTY2hlbWEgIT09IHVuZGVmaW5lZCAmJiBfdm0uYXJyYXlTY2hlbWEubWF4SXRlbXMgIT09IHVuZGVmaW5lZCAmJiBfdm0uY29udHJvbC5kYXRhLmxlbmd0aCA+PSBfdm0uYXJyYXlTY2hlbWEubWF4SXRlbXMKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2xpY2siOiBfdm0uYWRkQnV0dG9uQ2xpY2sKICAgICAgICAgIH0KICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIFtfdm0uX3YoIm1kaS1wbHVzIildKV0sIDEpXTsKICAgICAgfQogICAgfV0sIG51bGwsIGZhbHNlLCAzMDAxNTM1MDM1KQogIH0sIFtfdm0uX3YoIlxuICAgICAgICAiICsgX3ZtLl9zKCJBZGQgdG8gIiArIF92bS5jb250cm9sLmxhYmVsKSArICJcbiAgICAgICIpXSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX2MoJ3YtY2FyZC10ZXh0JywgW19jKCd2LWNvbnRhaW5lcicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJqdXN0aWZ5LXNwYWNlLWFyb3VuZCI6ICIiLAogICAgICAiYWxpZ24tY29udGVudC1jZW50ZXIiOiAiIgogICAgfQogIH0sIFtfYygndi1yb3cnLCB7CiAgICBhdHRyczogewogICAgICAianVzdGlmeSI6ICJjZW50ZXIiCiAgICB9CiAgfSwgW19jKCd2LXNpbXBsZS10YWJsZScsIHsKICAgIHN0YXRpY0NsYXNzOiAiYXJyYXktY29udGFpbmVyIGZsZXgiCiAgfSwgW192bS5jb250cm9sLnNjaGVtYS50eXBlID09PSAnb2JqZWN0JyA/IF9jKCd0aGVhZCcsIFtfYygndHInLCBbX2MoJ3RoJywgewogICAgYXR0cnM6IHsKICAgICAgInNjb3BlIjogImNvbCIKICAgIH0KICB9KSwgX3ZtLl92KCIgIiksIF92bS5fbChfdm0uZ2V0VmFsaWRDb2x1bW5Qcm9wcyhfdm0uY29udHJvbC5zY2hlbWEpLCBmdW5jdGlvbiAocHJvcCwgaW5kZXgpIHsKICAgIHJldHVybiBfYygndGgnLCB7CiAgICAgIGtleTogX3ZtLmNvbnRyb2wucGF0aCArICItaGVhZGVyLSIgKyBpbmRleCwKICAgICAgYXR0cnM6IHsKICAgICAgICAic2NvcGUiOiAiY29sIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAiICsgX3ZtLl9zKF92bS50aXRsZShwcm9wKSkgKyAiXG4gICAgICAgICAgICAgICIpXSk7CiAgfSksIF92bS5fdigiICIpLCBfdm0uY29udHJvbC5lbmFibGVkID8gX2MoJ3RoJywgewogICAgImNsYXNzIjogX3ZtLmFwcGxpZWRPcHRpb25zLnNob3dTb3J0QnV0dG9ucyA/ICdmaXhlZC1jZWxsJyA6ICdmaXhlZC1jZWxsLXNtYWxsJywKICAgIGF0dHJzOiB7CiAgICAgICJzY29wZSI6ICJjb2wiCiAgICB9CiAgfSkgOiBfdm0uX2UoKV0sIDIpXSkgOiBfdm0uX2UoKSwgX3ZtLl92KCIgIiksIF9jKCd0Ym9keScsIF92bS5fbChfdm0ucGFnaW5hdGUsIGZ1bmN0aW9uIChlbGVtZW50LCBpbmRleCkgewogICAgcmV0dXJuIF9jKCd0cicsIHsKICAgICAga2V5OiBfdm0uY29udHJvbC5wYXRoICsgIi0iICsgKF92bS5wYWdlICogKGluZGV4ICsgMSkgLSAxKSwKICAgICAgImNsYXNzIjogX3ZtLnN0eWxlcy5hcnJheUxpc3QuaXRlbQogICAgfSwgW19jKCd0ZCcsIFtfdm0uX3YoIlxuICAgICAgICAgICAgICAgICIgKyBfdm0uX3MoX3ZtLnBhZ2UgKiAoaW5kZXggKyAxKSkgKyAiXG4gICAgICAgICAgICAgICIpXSksIF92bS5fdigiICIpLCBfdm0uX2woX3ZtLmdldFZhbGlkQ29sdW1uUHJvcHMoX3ZtLmNvbnRyb2wuc2NoZW1hKSwgZnVuY3Rpb24gKHByb3BOYW1lKSB7CiAgICAgIHJldHVybiBfYygndGQnLCB7CiAgICAgICAga2V5OiBfdm0uY29tcG9zZVBhdGhzKF92bS5jb21wb3NlUGF0aHMoX3ZtLmNvbnRyb2wucGF0aCwgIiIgKyAoX3ZtLnBhZ2UgKiAoaW5kZXggKyAxKSAtIDEpKSwgcHJvcE5hbWUpCiAgICAgIH0sIFtfYygnZGlzcGF0Y2gtcmVuZGVyZXInLCB7CiAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICJzY2hlbWEiOiBfdm0uY29udHJvbC5zY2hlbWEsCiAgICAgICAgICAidWlzY2hlbWEiOiBfdm0ucmVzb2x2ZVVpU2NoZW1hKHByb3BOYW1lKSwKICAgICAgICAgICJwYXRoIjogX3ZtLmNvbXBvc2VQYXRocyhfdm0uY29udHJvbC5wYXRoLCAiIiArIChfdm0ucGFnZSAqIChpbmRleCArIDEpIC0gMSkpLAogICAgICAgICAgImVuYWJsZWQiOiBfdm0uY29udHJvbC5lbmFibGVkLAogICAgICAgICAgInJlbmRlcmVycyI6IF92bS5jb250cm9sLnJlbmRlcmVycywKICAgICAgICAgICJjZWxscyI6IF92bS5jb250cm9sLmNlbGxzCiAgICAgICAgfQogICAgICB9KV0sIDEpOwogICAgfSksIF92bS5fdigiICIpLCBfdm0uY29udHJvbC5lbmFibGVkID8gX2MoJ3RkJywgewogICAgICAiY2xhc3MiOiBfdm0uYXBwbGllZE9wdGlvbnMuc2hvd1NvcnRCdXR0b25zID8gJ2ZpeGVkLWNlbGwnIDogJ2ZpeGVkLWNlbGwtc21hbGwnCiAgICB9LCBbX2MoJ3YtdG9vbHRpcCcsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAiYm90dG9tIjogIiIKICAgICAgfSwKICAgICAgc2NvcGVkU2xvdHM6IF92bS5fdShbewogICAgICAgIGtleTogImFjdGl2YXRvciIsCiAgICAgICAgZm46IGZ1bmN0aW9uIGZuKHJlZikgewogICAgICAgICAgdmFyIG9uVG9vbHRpcCA9IHJlZi5vbjsKICAgICAgICAgIHJldHVybiBbX3ZtLmFwcGxpZWRPcHRpb25zLnNob3dTb3J0QnV0dG9ucyA/IF9jKCd2LWJ0bicsIF92bS5fZyh7CiAgICAgICAgICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lml0ZW1Nb3ZlVXAsCiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAgICJ0ZXh0IjogIiIsCiAgICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgICAiYXJpYS1sYWJlbCI6ICJNb3ZlIHVwIiwKICAgICAgICAgICAgICAiZGlzYWJsZWQiOiBpbmRleCA8PSAwIHx8ICFfdm0uY29udHJvbC5lbmFibGVkCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdm0ubW92ZVVwQ2xpY2soJGV2ZW50LCBfdm0ucGFnZSAqIChpbmRleCArIDEpIC0gMSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1hcnJvdy11cCIpXSldLCAxKSA6IF92bS5fZSgpXTsKICAgICAgICB9CiAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICBNb3ZlIFVwXG4gICAgICAgICAgICAgICAgIildKSwgX3ZtLl92KCIgIiksIF9jKCd2LXRvb2x0aXAnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgImJvdHRvbSI6ICIiCiAgICAgIH0sCiAgICAgIHNjb3BlZFNsb3RzOiBfdm0uX3UoW3sKICAgICAgICBrZXk6ICJhY3RpdmF0b3IiLAogICAgICAgIGZuOiBmdW5jdGlvbiBmbihyZWYpIHsKICAgICAgICAgIHZhciBvblRvb2x0aXAgPSByZWYub247CiAgICAgICAgICByZXR1cm4gW192bS5hcHBsaWVkT3B0aW9ucy5zaG93U29ydEJ1dHRvbnMgPyBfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5pdGVtTW92ZURvd24sCiAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgImZhYiI6ICIiLAogICAgICAgICAgICAgICJ0ZXh0IjogIiIsCiAgICAgICAgICAgICAgImVsZXZhdGlvbiI6ICIwIiwKICAgICAgICAgICAgICAic21hbGwiOiAiIiwKICAgICAgICAgICAgICAiYXJpYS1sYWJlbCI6ICJNb3ZlIGRvd24iLAogICAgICAgICAgICAgICJkaXNhYmxlZCI6IGluZGV4ID49IF92bS5jb250cm9sLmRhdGEubGVuZ3RoIC0gMSB8fCAhX3ZtLmNvbnRyb2wuZW5hYmxlZAogICAgICAgICAgICB9LAogICAgICAgICAgICBuYXRpdmVPbjogewogICAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICAgICAgX3ZtLm1vdmVEb3duQ2xpY2soJGV2ZW50LCBfdm0ucGFnZSAqIChpbmRleCArIDEpIC0gMSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBvblRvb2x0aXApLCBbX2MoJ3YtaWNvbicsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJub3RyYW5zbGF0ZSIKICAgICAgICAgIH0sIFtfdm0uX3YoIm1kaS1hcnJvdy1kb3duIildKV0sIDEpIDogX3ZtLl9lKCldOwogICAgICAgIH0KICAgICAgfV0sIG51bGwsIHRydWUpCiAgICB9LCBbX3ZtLl92KCJcbiAgICAgICAgICAgICAgICAgIE1vdmUgRG93blxuICAgICAgICAgICAgICAgICIpXSksIF92bS5fdigiICIpLCBfYygndi10b29sdGlwJywgewogICAgICBhdHRyczogewogICAgICAgICJib3R0b20iOiAiIgogICAgICB9LAogICAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgICAga2V5OiAiYWN0aXZhdG9yIiwKICAgICAgICBmbjogZnVuY3Rpb24gZm4ocmVmKSB7CiAgICAgICAgICB2YXIgb25Ub29sdGlwID0gcmVmLm9uOwogICAgICAgICAgcmV0dXJuIFtfYygndi1idG4nLCBfdm0uX2coewogICAgICAgICAgICAiY2xhc3MiOiBfdm0uc3R5bGVzLmFycmF5TGlzdC5pdGVtRGVsZXRlLAogICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICJmYWIiOiAiIiwKICAgICAgICAgICAgICAidGV4dCI6ICIiLAogICAgICAgICAgICAgICJlbGV2YXRpb24iOiAiMCIsCiAgICAgICAgICAgICAgInNtYWxsIjogIiIsCiAgICAgICAgICAgICAgImFyaWEtbGFiZWwiOiAiRGVsZXRlIiwKICAgICAgICAgICAgICAiZGlzYWJsZWQiOiAhX3ZtLmNvbnRyb2wuZW5hYmxlZCB8fCBfdm0uYXBwbGllZE9wdGlvbnMucmVzdHJpY3QgJiYgX3ZtLmFycmF5U2NoZW1hICE9PSB1bmRlZmluZWQgJiYgX3ZtLmFycmF5U2NoZW1hLm1pbkl0ZW1zICE9PSB1bmRlZmluZWQgJiYgX3ZtLmNvbnRyb2wuZGF0YS5sZW5ndGggPD0gX3ZtLmFycmF5U2NoZW1hLm1pbkl0ZW1zCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdm0ucmVtb3ZlSXRlbXNDbGljaygkZXZlbnQsIFtfdm0ucGFnZSAqIChpbmRleCArIDEpIC0gMV0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwgb25Ub29sdGlwKSwgW19jKCd2LWljb24nLCB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibm90cmFuc2xhdGUiCiAgICAgICAgICB9LCBbX3ZtLl92KCJtZGktZGVsZXRlIildKV0sIDEpXTsKICAgICAgICB9CiAgICAgIH1dLCBudWxsLCB0cnVlKQogICAgfSwgW192bS5fdigiXG4gICAgICAgICAgICAgICAgICBEZWxldGVcbiAgICAgICAgICAgICAgICAiKV0pXSwgMSkgOiBfdm0uX2UoKV0sIDIpOwogIH0pLCAwKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiCiAgfSwgW19jKCd2LXBhZ2luYXRpb24nLCB7CiAgICBhdHRyczogewogICAgICAibGVuZ3RoIjogX3ZtLnRvdGFsUGFnZXMgfHwgMTAsCiAgICAgICJwcmV2LWljb24iOiAibWRpLW1lbnUtbGVmdCIsCiAgICAgICJuZXh0LWljb24iOiAibWRpLW1lbnUtcmlnaHQiCiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5wYWdlLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLnBhZ2UgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJwYWdlIgogICAgfQogIH0pXSwgMSldLCAxKV0sIDEpLCBfdm0uX3YoIiAiKSwgX3ZtLm5vRGF0YSA/IF9jKCd2LWNvbnRhaW5lcicsIHsKICAgICJjbGFzcyI6IF92bS5zdHlsZXMuYXJyYXlMaXN0Lm5vRGF0YQogIH0sIFtfdm0uX3YoIlxuICAgICAgTm8gZGF0YVxuICAgICIpXSkgOiBfdm0uX2UoKV0sIDEpXSwgMSkgOiBfdm0uX2UoKTsKfTsKCnZhciBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXyA9IFtdOwovKiBzdHlsZSAqLwoKdmFyIF9fdnVlX2luamVjdF9zdHlsZXNfXyA9IGZ1bmN0aW9uIF9fdnVlX2luamVjdF9zdHlsZXNfXyhpbmplY3QpIHsKICBpZiAoIWluamVjdCkgcmV0dXJuOwogIGluamVjdCgiZGF0YS12LTE4N2YyOTYwXzAiLCB7CiAgICBzb3VyY2U6ICIuZml4ZWQtY2VsbFtkYXRhLXYtMTg3ZjI5NjBde3dpZHRoOjE1MHB4O2hlaWdodDo1MHB4O3BhZGRpbmctbGVmdDowIWltcG9ydGFudDtwYWRkaW5nLXJpZ2h0OjAhaW1wb3J0YW50O3RleHQtYWxpZ246Y2VudGVyfS5maXhlZC1jZWxsLXNtYWxsW2RhdGEtdi0xODdmMjk2MF17d2lkdGg6NTBweDtoZWlnaHQ6NTBweDtwYWRkaW5nLWxlZnQ6MCFpbXBvcnRhbnQ7cGFkZGluZy1yaWdodDowIWltcG9ydGFudDt0ZXh0LWFsaWduOmNlbnRlcn0uYXJyYXktY29udGFpbmVyIHRib2R5IHRyIHRkW2RhdGEtdi0xODdmMjk2MF17Ym9yZGVyLWJvdHRvbTpub25lIWltcG9ydGFudH0uYXJyYXktY29udGFpbmVyIHRib2R5IHRyIHRkIC5jb250YWluZXJbZGF0YS12LTE4N2YyOTYwXXtwYWRkaW5nOjA7bWFyZ2luOjB9IiwKICAgIG1hcDogdW5kZWZpbmVkLAogICAgbWVkaWE6IHVuZGVmaW5lZAogIH0pOwp9OwovKiBzY29wZWQgKi8KCgp2YXIgX192dWVfc2NvcGVfaWRfXyA9ICJkYXRhLXYtMTg3ZjI5NjAiOwovKiBtb2R1bGUgaWRlbnRpZmllciAqLwoKdmFyIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18gPSB1bmRlZmluZWQ7Ci8qIGZ1bmN0aW9uYWwgdGVtcGxhdGUgKi8KCnZhciBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18gPSBmYWxzZTsKLyogc3R5bGUgaW5qZWN0IFNTUiAqLwoKLyogc3R5bGUgaW5qZWN0IHNoYWRvdyBkb20gKi8KCnZhciBfX3Z1ZV9jb21wb25lbnRfXyA9IC8qI19fUFVSRV9fKi9ub3JtYWxpemVDb21wb25lbnQoewogIHJlbmRlcjogX192dWVfcmVuZGVyX18sCiAgc3RhdGljUmVuZGVyRm5zOiBfX3Z1ZV9zdGF0aWNSZW5kZXJGbnNfXwp9LCBfX3Z1ZV9pbmplY3Rfc3R5bGVzX18sIF9fdnVlX3NjcmlwdF9fLCBfX3Z1ZV9zY29wZV9pZF9fLCBfX3Z1ZV9pc19mdW5jdGlvbmFsX3RlbXBsYXRlX18sIF9fdnVlX21vZHVsZV9pZGVudGlmaWVyX18sIGZhbHNlLCBjcmVhdGVJbmplY3RvciwgdW5kZWZpbmVkLCB1bmRlZmluZWQpOwoKdmFyIGdyaWRSZW5kZXJlcnMgPSBbZW50cnldOwp2YXIgdnVldGlmeVJlbmRlcmVycyA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoYWRkaXRpb25hbFJlbmRlcmVycyksIF90b0NvbnN1bWFibGVBcnJheShhcnJheVJlbmRlcmVycyksIF90b0NvbnN1bWFibGVBcnJheShjb21wbGV4UmVuZGVyZXJzKSwgX3RvQ29uc3VtYWJsZUFycmF5KGNvbnRyb2xSZW5kZXJlcnMpLCBfdG9Db25zdW1hYmxlQXJyYXkobGF5b3V0UmVuZGVyZXJzKSk7CnZhciBleHRlbmRlZFZ1ZXRpZnlSZW5kZXJlcnMgPSBbXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KGV4dGVuZGVkUmVuZGVyZXJzKSwgX3RvQ29uc3VtYWJsZUFycmF5KHZ1ZXRpZnlSZW5kZXJlcnMpLCBfdG9Db25zdW1hYmxlQXJyYXkoZHluYWZvcm1SZW5kZXJlcnMpLCBfdG9Db25zdW1hYmxlQXJyYXkoZmlsZXNSZW5kZXJlcnMpLCBfdG9Db25zdW1hYmxlQXJyYXkoZ3JpZFJlbmRlcmVycykpOwpleHBvcnRzLkFsbE9mUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRzOwpleHBvcnRzLkFueU9mUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRxOwpleHBvcnRzLkFueU9mU3RyaW5nT3JFbnVtQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kazsKZXhwb3J0cy5BcnJheUNvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJHA7CmV4cG9ydHMuQXJyYXlMYXlvdXRSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJHk7CmV4cG9ydHMuQXV0b2NvbXBsZXRlRW51bUNvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJDQ7CmV4cG9ydHMuQXV0b2NvbXBsZXRlT25lT2ZFbnVtQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kMzsKZXhwb3J0cy5Cb29sZWFuQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kajsKZXhwb3J0cy5Cb29sZWFuVG9nZ2xlQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kaTsKZXhwb3J0cy5DYXRlZ29yaXphdGlvblJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18keDsKZXhwb3J0cy5DYXRlZ29yaXphdGlvblN0ZXBwZXJSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJHc7CmV4cG9ydHMuQ29udHJvbFdyYXBwZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRsOwpleHBvcnRzLkRhdGVDb250cm9sUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRoOwpleHBvcnRzLkRhdGVUaW1lQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kZzsKZXhwb3J0cy5FbnVtQXJyYXlSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJG87CmV4cG9ydHMuRW51bUNvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJGY7CmV4cG9ydHMuR3JpZENvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fOwpleHBvcnRzLkdyb3VwUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyR2OwpleHBvcnRzLkhvcml6b250YWxMYXlvdXRSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJHU7CmV4cG9ydHMuSW50ZWdlckNvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJGU7CmV4cG9ydHMuTGFiZWxSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJEM7CmV4cG9ydHMuTGlzdFdpdGhEZXRhaWxSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJHo7CmV4cG9ydHMuTXVsdGlTdHJpbmdDb250cm9sUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRkOwpleHBvcnRzLk11bHRpcGxlRmlsZUNvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJDE7CmV4cG9ydHMuTnVtYmVyQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kYzsKZXhwb3J0cy5PYmplY3RSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJG47CmV4cG9ydHMuT25lT2ZFbnVtQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kYjsKZXhwb3J0cy5PbmVPZlJhZGlvR3JvdXBDb250cm9sUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRhOwpleHBvcnRzLk9uZU9mUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyRtOwpleHBvcnRzLlBhc3N3b3JkQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kOTsKZXhwb3J0cy5SYWRpb0dyb3VwQ29udHJvbFJlbmRlcmVyID0gX192dWVfY29tcG9uZW50X18kODsKZXhwb3J0cy5TbGlkZXJDb250cm9sUmVuZGVyZXIgPSBfX3Z1ZV9jb21wb25lbnRfXyQ3OwpleHBvcnRzLlN0cmluZ0NvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJDY7CmV4cG9ydHMuU3VnZ2VzdENvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJDI7CmV4cG9ydHMuVGltZUNvbnRyb2xSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJDU7CmV4cG9ydHMuVmVydGljYWxMYXlvdXRSZW5kZXJlciA9IF9fdnVlX2NvbXBvbmVudF9fJHQ7CmV4cG9ydHMuYWRkaXRpb25hbFJlbmRlcmVycyA9IGFkZGl0aW9uYWxSZW5kZXJlcnM7CmV4cG9ydHMuYXJyYXlMaXN0UmVuZGVyZXJFbnRyeSA9IGFycmF5TGlzdFJlbmRlcmVyRW50cnk7CmV4cG9ydHMuYXJyYXlSZW5kZXJlcnMgPSBhcnJheVJlbmRlcmVyczsKZXhwb3J0cy5jbGFzc2VzID0gY2xhc3NlczsKZXhwb3J0cy5jb21wbGV4UmVuZGVyZXJzID0gY29tcGxleFJlbmRlcmVyczsKZXhwb3J0cy5jb250cm9sUmVuZGVyZXJzID0gY29udHJvbFJlbmRlcmVyczsKZXhwb3J0cy5jcmVhdGVBanYgPSBjcmVhdGVBanY7CmV4cG9ydHMuZGVmYXVsdFN0eWxlcyA9IGRlZmF1bHRTdHlsZXM7CmV4cG9ydHMuZHluYWZvcm1SZW5kZXJlcnMgPSBkeW5hZm9ybVJlbmRlcmVyczsKZXhwb3J0cy5leHRlbmRlZFJlbmRlcmVycyA9IGV4dGVuZGVkUmVuZGVyZXJzOwpleHBvcnRzLmV4dGVuZGVkVnVldGlmeVJlbmRlcmVycyA9IGV4dGVuZGVkVnVldGlmeVJlbmRlcmVyczsKZXhwb3J0cy5maWxlc1JlbmRlcmVycyA9IGZpbGVzUmVuZGVyZXJzOwpleHBvcnRzLmdyaWRSZW5kZXJlcnMgPSBncmlkUmVuZGVyZXJzOwpleHBvcnRzLmxheW91dFJlbmRlcmVycyA9IGxheW91dFJlbmRlcmVyczsKZXhwb3J0cy5tZXJnZVN0eWxlcyA9IG1lcmdlU3R5bGVzOwpleHBvcnRzLnBhcnNlRGF0ZVRpbWUgPSBwYXJzZURhdGVUaW1lOwpleHBvcnRzLnVzZUFqdiA9IHVzZUFqdjsKZXhwb3J0cy51c2VTdHlsZXMgPSB1c2VTdHlsZXM7CmV4cG9ydHMudXNlVHJhbnNsYXRvciA9IHVzZVRyYW5zbGF0b3I7CmV4cG9ydHMudXNlVnVldGlmeUFycmF5Q29udHJvbCA9IHVzZVZ1ZXRpZnlBcnJheUNvbnRyb2w7CmV4cG9ydHMudXNlVnVldGlmeUJhc2ljQ29udHJvbCA9IHVzZVZ1ZXRpZnlCYXNpY0NvbnRyb2w7CmV4cG9ydHMudXNlVnVldGlmeUNvbnRyb2wgPSB1c2VWdWV0aWZ5Q29udHJvbDsKZXhwb3J0cy51c2VWdWV0aWZ5TGF5b3V0ID0gdXNlVnVldGlmeUxheW91dDsKZXhwb3J0cy52dWV0aWZ5UmVuZGVyZXJzID0gdnVldGlmeVJlbmRlcmVyczs="},{"version":3,"sources":["../src/styles/defaultStyles.ts","../src/styles/styles.ts","../src/styles/util.ts","../src/util/composition.ts","../src/util/validator.ts","../src/util/datejs.ts","../src/additional/LabelRenderer.vue?rollup-plugin-vue=script.ts","../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/additional/LabelRenderer.vue","../src/controls/components/ValidationBadge.vue?rollup-plugin-vue=script.ts","../src/controls/components/ValidationBadge.vue","../src/controls/components/ValidationIcon.vue?rollup-plugin-vue=script.ts","../src/controls/components/ValidationIcon.vue","../src/additional/ListWithDetailRenderer.vue?rollup-plugin-vue=script.ts","../../node_modules/vue-runtime-helpers/dist/inject-style/browser.mjs","../src/additional/ListWithDetailRenderer.vue","../src/additional/index.ts","../src/layouts/ArrayLayoutRenderer.vue?rollup-plugin-vue=script.ts","../src/layouts/ArrayLayoutRenderer.vue","../src/layouts/CategorizationRenderer.vue?rollup-plugin-vue=script.ts","../src/layouts/CategorizationRenderer.vue","../src/layouts/CategorizationStepperRenderer.vue?rollup-plugin-vue=script.ts","../src/layouts/CategorizationStepperRenderer.vue","../src/layouts/GroupRenderer.vue?rollup-plugin-vue=script.ts","../src/layouts/GroupRenderer.vue","../src/layouts/HorizontalLayoutRenderer.vue?rollup-plugin-vue=script.ts","../src/layouts/HorizontalLayoutRenderer.vue","../src/layouts/VerticalLayoutRenderer.vue?rollup-plugin-vue=script.ts","../src/layouts/VerticalLayoutRenderer.vue","../src/layouts/index.ts","../src/array/index.ts","../src/complex/AllOfRenderer.vue?rollup-plugin-vue=script.ts","../src/complex/AllOfRenderer.vue","../src/complex/components/CombinatorProperties.vue?rollup-plugin-vue=script.ts","../src/complex/components/CombinatorProperties.vue","../src/complex/AnyOfRenderer.vue?rollup-plugin-vue=script.ts","../src/complex/AnyOfRenderer.vue","../src/complex/ArrayControlRenderer.vue?rollup-plugin-vue=script.ts","../src/complex/ArrayControlRenderer.vue","../src/complex/EnumArrayRenderer.vue?rollup-plugin-vue=script.ts","../src/complex/EnumArrayRenderer.vue","../src/complex/ObjectRenderer.vue?rollup-plugin-vue=script.ts","../src/complex/ObjectRenderer.vue","../src/complex/OneOfRenderer.vue?rollup-plugin-vue=script.ts","../src/complex/OneOfRenderer.vue","../src/complex/index.ts","../src/controls/ControlWrapper.vue?rollup-plugin-vue=script.ts","../src/controls/ControlWrapper.vue","../src/controls/directives/DisabledIconFocus.ts","../src/controls/AnyOfStringOrEnumControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/AnyOfStringOrEnumControlRenderer.vue","../src/controls/BooleanControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/BooleanControlRenderer.vue","../src/controls/BooleanToggleControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/BooleanToggleControlRenderer.vue","../src/controls/DateControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/DateControlRenderer.vue","../src/controls/DateTimeControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/DateTimeControlRenderer.vue","../src/controls/EnumControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/EnumControlRenderer.vue","../src/controls/IntegerControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/IntegerControlRenderer.vue","../src/controls/MultiStringControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/MultiStringControlRenderer.vue","../src/controls/NumberControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/NumberControlRenderer.vue","../src/controls/OneOfEnumControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/OneOfEnumControlRenderer.vue","../src/controls/OneOfRadioGroupControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/OneOfRadioGroupControlRenderer.vue","../src/controls/PasswordControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/PasswordControlRenderer.vue","../src/controls/RadioGroupControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/RadioGroupControlRenderer.vue","../src/controls/SliderControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/SliderControlRenderer.vue","../src/controls/StringControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/StringControlRenderer.vue","../src/controls/TimeControlRenderer.vue?rollup-plugin-vue=script.ts","../src/controls/TimeControlRenderer.vue","../src/controls/index.ts","../src/extended/AutocompleteEnumControlRenderer.vue?rollup-plugin-vue=script.ts","../src/extended/AutocompleteEnumControlRenderer.vue","../src/extended/AutocompleteOneOfEnumControlRenderer.vue?rollup-plugin-vue=script.ts","../src/extended/AutocompleteOneOfEnumControlRenderer.vue","../src/extended/index.ts","../src/dynaform/SuggestControlRenderer.vue?rollup-plugin-vue=script.ts","../src/dynaform/SuggestControlRenderer.vue","../src/dynaform/index.ts","../src/files/MultipleFileControlRenderer.vue?rollup-plugin-vue=script.ts","../src/files/MultipleFileControlRenderer.vue","../src/files/index.ts","../src/grids/GridControlRenderer.vue?rollup-plugin-vue=script.ts","../src/grids/GridControlRenderer.vue","../src/grids/index.ts","../src/renderers.ts"],"names":["defaultStyles","control","root","input","verticalLayout","item","horizontalLayout","group","label","arrayList","toolbar","addButton","noData","itemHeader","itemLabel","itemContent","itemMoveUp","itemMoveDown","itemDelete","listWithDetail","categorization","createEmptyStyles","useStyles","userStyles","inject","element","styles","merge","classes","variables","mergeStyles","cloneDeep","mergeWith","useControlAppliedOptions","computed","useComputedLabel","computeLabel","appliedOptions","useVuetifyControl","adaptValue","isFocused","ref","onChange","persistentHint","isDescriptionHidden","computedLabel","controlWrapper","id","description","errors","visible","required","useTranslator","jsonforms","translate","useVuetifyLayout","useVuetifyArrayControl","childLabelForIndex","childLabelProp","getFirstPrimitiveProp","labelValue","Resolve","composePaths","Number","useVuetifyBasicControl","useAjv","createAjv","ajv","createAjvCore","dayjs","customParsing","utc","timezone","parseDateTime","dayjsData","labelRenderer","defineComponent","name","components","DispatchRenderer","VLabel","props","rendererProps","setup","t","layout","useJsonFormsLayout","translatedLabel","entry","renderer","tester","rankWith","uiTypeIs","VBadge","VTooltip","type","Array","bordered","color","inline","offsetX","undefined","offsetY","overlap","tooltipMessages","error","e","errorObject","index","findIndex","schemaPath","instancePath","labels","createLabelDescriptionFrom","createControlElement","message","v","ValidationBadge","VIcon","controlRenderer","VList","VListItemGroup","VListItem","VListItemTitle","VListItemContent","VListItemAction","VListItemAvatar","VAvatar","VRow","VCol","VToolbar","VToolbarTitle","VBtn","VSpacer","VExpansionPanels","VExpansionPanel","VExpansionPanelHeader","VExpansionPanelContent","VContainer","VVirtualScroll","ValidationIcon","selectedIndex","useJsonFormsArrayControl","foundUISchema","findUISchema","arraySchema","methods","createDefaultValue","addButtonClick","moveUpClick","event","moveDownClick","removeItemsClick","childErrors","and","isObjectArray","additionalRenderers","VCard","VCardTitle","VCardText","isObjectArrayWithNesting","layoutRenderer","VTabs","VTab","VTabsItems","VTabItem","activeCategory","visibleCategories","isVisible","isSingleLevelCategorization","categorizationHasCategory","VStepper","VStepperHeader","VStepperStep","VDivider","VStepperItems","VStepperContent","VCardActions","categorizationStepperTester","optionIs","isLayout","layoutRendererEntry","layoutRenderers","arrayListRendererEntry","schemaTypeIs","arrayRenderers","useJsonFormsAllOfControl","subSchema","resolveSubSchemas","delegateUISchema","findMatchingUISchema","allOfRenderInfos","createCombinatorRenderInfos","isAllOfControl","schema","combinatorKeyword","path","otherProps","omit","Generate","Object","isLayoutWithElements","CombinatorProperties","useJsonFormsAnyOfControl","anyOfRenderInfos","isAnyOfControl","DispatchCell","VSimpleTable","getValidColumnProps","scopedSchema","title","startCase","resolveUiSchema","controlWithoutLabel","scope","or","isObjectArrayControl","isPrimitiveArrayControl","useJsonFormsMultiEnumControl","useControl","mapStateToMultiEnumControlProps","mapDispatchToMultiEnumProps","VCheckbox","dataHasEnum","toggle","hasOneOfItems","hasEnumItems","schemaMatches","hasType","schemaSubPathMatches","useJsonFormsControlWithDetail","detailUiSchema","result","isEmpty","isObjectControl","isControlEnabled","state","config","getConfig","rootData","getData","uischema","ownProps","rootSchema","getSchema","isInherentlyEnabled","VDialog","useJsonFormsOneOfControl","tabIndex","newSelectedIndex","dialog","controlEnabled","oneOfRenderInfos","handleTabChange","setTimeout","confirm","cancel","openNewTab","isOneOfControl","complexRenderers","String","DisabledIconFocus","componentUpdated","el","x","ControlWrapper","VHover","VCombobox","directives","useJsonFormsControl","value","items","findEnumSchema","s","findTextSchema","hasEnumAndText","enumSchema","stringSchema","remainingSchemas","wrongType","simpleAnyOf","newValue","isBooleanControl","VSwitch","VTextField","isDateControl","dataTime","get","datetimeLocalFormat","saveFormat","dateTime","set","datetimeLocalFormats","isDateTimeControl","VSelect","useJsonFormsEnumControl","isEnumControl","parseInt","step","options","isIntegerControl","VTextarea","isStringControl","isMultiLineControl","parseFloat","isNumberControl","useJsonFormsOneOfEnumControl","isOneOfEnumControl","VRadioGroup","VRadio","passwordVisible","formatIs","VSlider","isRangeControl","suggestions","isArray","every","isString","isTimeControl","controlRenderers","VAutocomplete","extendedRenderers","data","descriptionLimit","entries","isLoading","model","search","Description","changeHandler","console","watch","fetch","res","dynaformRenderers","VFileInput","VListItemSubtitle","VProgressLinear","files","newFiles","file","size","mimetype","deleteFile","downloadFile","filesRenderers","VPagination","page","totalPages","Math","paginate","list","temp","gridRenderers","vuetifyRenderers","extendedVuetifyRenderers"],"mappings":"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","sourcesContent":["import { Styles } from './styles';\n\nexport const defaultStyles: Styles = {\n  control: {\n    root: 'control',\n    input: 'input',\n  },\n  verticalLayout: {\n    root: 'vertical-layout',\n    item: 'vertical-layout-item',\n  },\n  horizontalLayout: {\n    root: 'horizontal-layout',\n    item: 'horizontal-layout-item',\n  },\n  group: {\n    root: 'group',\n    label: 'group-label',\n    item: 'group-item',\n  },\n  arrayList: {\n    root: 'array-list',\n    toolbar: 'array-list-toolbar',\n    addButton: 'array-list-add',\n    label: 'array-list-label',\n    noData: 'array-list-no-data',\n    item: 'array-list-item',\n    itemHeader: 'array-list-item-header',\n    itemLabel: 'array-list-item-label',\n    itemContent: 'array-list-item-content',\n    itemMoveUp: 'array-list-item-move-up',\n    itemMoveDown: 'array-list-item-move-down',\n    itemDelete: 'array-list-item-delete',\n  },\n  listWithDetail: {\n    root: 'list-with-detail',\n    toolbar: 'list-with-detail-toolbar',\n    addButton: 'list-with-detail-add',\n    label: 'list-with-detail-label',\n    noData: 'list-with-detail-no-data',\n    item: 'list-with-detail-item',\n    itemLabel: 'list-with-detail-item-label',\n    itemContent: 'list-with-detail-item-content',\n    itemMoveUp: 'list-with-detail-item-move-up',\n    itemMoveDown: 'list-with-detail-item-move-down',\n    itemDelete: 'list-with-detail-item-delete',\n  },\n  label: {\n    root: 'label-element',\n  },\n  categorization: {\n    root: 'categorization',\n  },\n};\n","import { UISchemaElement } from '@jsonforms/core';\nimport { inject } from '../vue';\nimport merge from 'lodash/merge';\nimport { defaultStyles } from './defaultStyles';\n\nconst createEmptyStyles = (): Styles => ({\n  control: {},\n  verticalLayout: {},\n  horizontalLayout: {},\n  group: {},\n  arrayList: {},\n  listWithDetail: {},\n  label: {},\n  categorization: {},\n});\n\nexport interface Styles {\n  control: {\n    root?: string;\n    input?: string;\n  };\n  verticalLayout: {\n    root?: string;\n    item?: string;\n  };\n  horizontalLayout: {\n    root?: string;\n    item?: string;\n  };\n  group: {\n    root?: string;\n    label?: string;\n    item?: string;\n  };\n  arrayList: {\n    root?: string;\n    toolbar?: string;\n    addButton?: string;\n    label?: string;\n    noData?: string;\n    item?: string;\n    itemHeader?: string;\n    itemLabel?: string;\n    itemContent?: string;\n    itemMoveUp?: string;\n    itemMoveDown?: string;\n    itemDelete?: string;\n  };\n  listWithDetail: {\n    root?: string;\n    toolbar?: string;\n    addButton?: string;\n    label?: string;\n    noData?: string;\n    item?: string;\n    itemLabel?: string;\n    itemContent?: string;\n    itemMoveUp?: string;\n    itemMoveDown?: string;\n    itemDelete?: string;\n  };\n  label: {\n    root?: string;\n  };\n  categorization: {\n    root?: string;\n  };\n}\n\nexport const useStyles = (element?: UISchemaElement): Styles => {\n  const userStyles = inject('styles', defaultStyles);\n  if (!element?.options?.styles) {\n    return userStyles;\n  }\n  const styles = createEmptyStyles();\n  if (userStyles) {\n    merge(styles, userStyles);\n  } else {\n    merge(styles, defaultStyles);\n  }\n  if (element?.options?.styles) {\n    merge(styles, element.options.styles);\n  }\n  return styles;\n};\n","import { Styles } from './styles';\nimport cloneDeep from 'lodash/cloneDeep';\nimport mergeWith from 'lodash/mergeWith';\n\nexport const classes = (\n  strings: TemplateStringsArray,\n  ...variables: any[]\n): string => {\n  return strings\n    .reduce((acc, curr, index) => {\n      return `${acc}${curr}${variables[index] || ''}`;\n    }, '')\n    .trim();\n};\n\n/**\n * Helper function to merge two styles definitions. The contained classes will be combined, not overwritten.\n *\n * Example usage:\n * ```ts\n * const myStyles = mergeStyles(defaultStyles, { control: { root: 'mycontrol' } });\n * ```\n */\nexport const mergeStyles = (\n  stylesA: Partial<Styles>,\n  stylesB: Partial<Styles>\n): Partial<Styles> => {\n  const styles = cloneDeep(stylesA);\n  mergeWith(styles, stylesB, (aValue, bValue) => {\n    if (typeof aValue === 'string' && typeof bValue === 'string') {\n      return `${aValue} ${bValue}`;\n    }\n    return undefined;\n  });\n  return styles;\n};\n","import {\n  composePaths,\n  computeLabel,\n  getFirstPrimitiveProp,\n  isDescriptionHidden,\n  JsonFormsSubStates,\n  Resolve,\n} from '@jsonforms/core';\nimport cloneDeep from 'lodash/cloneDeep';\nimport merge from 'lodash/merge';\nimport { useStyles } from '../styles';\nimport { computed, ComputedRef, inject, ref } from '../vue';\nimport Ajv from 'ajv';\n\nconst useControlAppliedOptions = <I extends { control: any }>(input: I) => {\n  return computed(() =>\n    merge(\n      {},\n      cloneDeep(input.control.value.config),\n      cloneDeep(input.control.value.uischema.options)\n    )\n  );\n};\n\nconst useComputedLabel = <I extends { control: any }>(\n  input: I,\n  appliedOptions: ComputedRef<any>\n) => {\n  return computed((): string => {\n    return computeLabel(\n      input.control.value.label,\n      input.control.value.required,\n      !!appliedOptions.value?.hideRequiredAsterisk\n    );\n  });\n};\n\n/**\n * Adds styles, isFocused, appliedOptions and onChange\n */\nexport const useVuetifyControl = <\n  I extends { control: any; handleChange: any }\n>(\n  input: I,\n  adaptValue: (target: any) => any = (v) => v\n) => {\n  const appliedOptions = useControlAppliedOptions(input);\n\n  const isFocused = ref(false);\n  const onChange = (value: any) => {\n    input.handleChange(input.control.value.path, adaptValue(value));\n  };\n\n  const persistentHint = (): boolean => {\n    return !isDescriptionHidden(\n      input.control.value.visible,\n      input.control.value.description,\n      isFocused.value,\n      !!appliedOptions.value?.showUnfocusedDescription\n    );\n  };\n\n  const computedLabel = useComputedLabel(input, appliedOptions);\n\n  const controlWrapper = computed(() => {\n    const { id, description, errors, label, visible, required } =\n      input.control.value;\n    return { id, description, errors, label, visible, required };\n  });\n\n  const styles = useStyles(input.control.value.uischema);\n\n  return {\n    ...input,\n    styles,\n    isFocused,\n    appliedOptions,\n    controlWrapper,\n    onChange,\n    persistentHint,\n    computedLabel,\n  };\n};\n\nexport const useTranslator = () => {\n  const jsonforms = inject<JsonFormsSubStates>('jsonforms');\n\n  if (!jsonforms) {\n    throw new Error(\n      \"'jsonforms couldn't be injected. Are you within JSON Forms?\"\n    );\n  }\n\n  if (!jsonforms.i18n || !jsonforms.i18n.translate) {\n    throw new Error(\n      \"'jsonforms i18n couldn't be injected. Are you within JSON Forms?\"\n    );\n  }\n\n  const translate = computed(() => {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    return jsonforms.i18n!.translate!;\n  });\n\n  return translate;\n};\n\n/**\n * Adds styles and appliedOptions\n */\nexport const useVuetifyLayout = <I extends { layout: any }>(input: I) => {\n  const appliedOptions = computed(() =>\n    merge(\n      {},\n      cloneDeep(input.layout.value.config),\n      cloneDeep(input.layout.value.uischema.options)\n    )\n  );\n  return {\n    ...input,\n    styles: useStyles(input.layout.value.uischema),\n    appliedOptions,\n  };\n};\n\n/**\n * Adds styles, appliedOptions and childUiSchema\n */\nexport const useVuetifyArrayControl = <I extends { control: any }>(\n  input: I\n) => {\n  const appliedOptions = useControlAppliedOptions(input);\n\n  const computedLabel = useComputedLabel(input, appliedOptions);\n\n  const childLabelForIndex = (index: number) => {\n    const childLabelProp =\n      input.control.value.uischema.options?.childLabelProp ??\n      getFirstPrimitiveProp(input.control.value.schema);\n    if (!childLabelProp) {\n      return `${index}`;\n    }\n    const labelValue = Resolve.data(\n      input.control.value.data,\n      composePaths(`${index}`, childLabelProp)\n    );\n    if (\n      labelValue === undefined ||\n      labelValue === null ||\n      Number.isNaN(labelValue)\n    ) {\n      return '';\n    }\n    return `${labelValue}`;\n  };\n  return {\n    ...input,\n    styles: useStyles(input.control.value.uischema),\n    appliedOptions,\n    childLabelForIndex,\n    computedLabel,\n  };\n};\n\n/**\n * Adds styles and appliedOptions\n */\nexport const useVuetifyBasicControl = <I extends { control: any }>(\n  input: I\n) => {\n  const appliedOptions = useControlAppliedOptions(input);\n\n  return {\n    ...input,\n    styles: useStyles(input.control.value.uischema),\n    appliedOptions,\n  };\n};\n\n/**\n * Extracts Ajv from JSON Forms\n */\nexport const useAjv = () => {\n  const jsonforms = inject<JsonFormsSubStates>('jsonforms');\n\n  if (!jsonforms) {\n    throw new Error(\n      \"'jsonforms' couldn't be injected. Are you within JSON Forms?\"\n    );\n  }\n\n  // should always exist\n  return jsonforms.core?.ajv as Ajv;\n};\n","import { Options } from 'ajv';\nimport { createAjv as createAjvCore } from '@jsonforms/core';\nimport Ajv from 'ajv';\n\nexport const createAjv = (options?: Options): Ajv => {\n  const ajv = createAjvCore(options);\n  ajv.addFormat('password', (_) => true);\n  return ajv;\n};\n","import dayjs from 'dayjs';\nimport customParsing from 'dayjs/plugin/customParseFormat';\nimport utc from 'dayjs/plugin/utc';\nimport timezone from 'dayjs/plugin/timezone'; // dependent on utc plugin\n\n// required for the custom save formats in the date, time and date-time pickers\ndayjs.extend(customParsing);\ndayjs.extend(utc);\ndayjs.extend(timezone);\n\nexport const parseDateTime = (\n  data: string | null | undefined,\n  format: string | string[] | undefined\n): dayjs.Dayjs | null => {\n  if (!data) {\n    return null;\n  }\n  const dayjsData = dayjs(data, format);\n  if (!dayjsData.isValid()) {\n    return null;\n  }\n  return dayjsData;\n};\n","\n\n\n\n\n\n\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  uiTypeIs,\n  LabelElement,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout, useTranslator } from '../util';\nimport { VLabel } from 'vuetify/lib';\n\nconst labelRenderer = defineComponent({\n  name: 'label-renderer',\n  components: {\n    DispatchRenderer,\n    VLabel,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    const t = useTranslator();\n    const layout = useVuetifyLayout(useJsonFormsLayout(props));\n    return { ...layout, t };\n  },\n  computed: {\n    translatedLabel(): string | undefined {\n      if (this.layout.uischema.options?.i18n) {\n        return this.t(\n          this.layout.uischema.options.i18n,\n          (this.layout.uischema as LabelElement).text\n        );\n      }\n      return this.t(\n        (this.layout.uischema as LabelElement).text,\n        (this.layout.uischema as LabelElement).text\n      );\n    },\n  },\n});\n\nexport default labelRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: labelRenderer,\n  tester: rankWith(1, uiTypeIs('Label')),\n};\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <v-label v-if=\"layout.visible\" :class=\"styles.label.root\">\n    {{ translatedLabel }}\n  </v-label>\n</template>\n\n<script lang=\"ts\">\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  uiTypeIs,\n  LabelElement,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout, useTranslator } from '../util';\nimport { VLabel } from 'vuetify/lib';\n\nconst labelRenderer = defineComponent({\n  name: 'label-renderer',\n  components: {\n    DispatchRenderer,\n    VLabel,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    const t = useTranslator();\n    const layout = useVuetifyLayout(useJsonFormsLayout(props));\n    return { ...layout, t };\n  },\n  computed: {\n    translatedLabel(): string | undefined {\n      if (this.layout.uischema.options?.i18n) {\n        return this.t(\n          this.layout.uischema.options.i18n,\n          (this.layout.uischema as LabelElement).text\n        );\n      }\n      return this.t(\n        (this.layout.uischema as LabelElement).text,\n        (this.layout.uischema as LabelElement).text\n      );\n    },\n  },\n});\n\nexport default labelRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: labelRenderer,\n  tester: rankWith(1, uiTypeIs('Label')),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { defineComponent, CompType } from '../../vue';\nimport { VBadge, VTooltip } from 'vuetify/lib';\nimport { ErrorObject } from 'ajv';\nimport findIndex from 'lodash/findIndex';\nimport {\n  createControlElement,\n  createLabelDescriptionFrom,\n  JsonSchema,\n} from '@jsonforms/core';\n\nexport default defineComponent({\n  name: 'validation-badge',\n  components: {\n    VBadge,\n    VTooltip,\n  },\n  props: {\n    errors: {\n      required: true,\n      type: Array as CompType<ErrorObject, ArrayConstructor>,\n    },\n    bordered: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'error',\n    },\n    inline: {\n      type: Boolean,\n      default: false,\n    },\n    offsetX: {\n      type: [Number, String],\n      default: undefined,\n    },\n    offsetY: {\n      type: [Number, String],\n      default: undefined,\n    },\n    overlap: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    tooltipMessages(): string[] {\n      const error: {\n        instancePath: string;\n        schemaPath: string;\n        labels: (string | undefined)[];\n        message: string;\n      }[] = [];\n\n      for (const e of this.errors) {\n        const errorObject = e as ErrorObject;\n        const index = findIndex(error, { schemaPath: errorObject.schemaPath });\n        if (errorObject.message) {\n          if (index == -1) {\n            error.push({\n              schemaPath: errorObject.schemaPath,\n              instancePath: errorObject.instancePath,\n              labels: [\n                createLabelDescriptionFrom(\n                  createControlElement(errorObject.instancePath),\n                  errorObject.schema as JsonSchema\n                ).text,\n              ],\n              message: errorObject.message,\n            });\n          } else {\n            error[index].labels.push(\n              createLabelDescriptionFrom(\n                createControlElement(errorObject.instancePath),\n                errorObject.schema as JsonSchema\n              ).text\n            );\n          }\n        }\n      }\n\n      return error.map((v) => v.labels.join(',') + ': ' + v.message);\n    },\n  },\n});\n","<template>\n  <div>\n    <v-tooltip bottom v-if=\"errors.length > 0\">\n      <template v-slot:activator=\"{ on: onTooltip }\">\n        <v-badge\n          :color=\"color\"\n          :bordered=\"bordered\"\n          :inline=\"inline\"\n          :offsetX=\"offsetX\"\n          :offsetY=\"offsetY\"\n          :overlap=\"overlap\"\n        >\n          <template v-slot:badge>\n            {{ errors.length }}\n          </template>\n          <div v-on=\"onTooltip\"><slot></slot></div>\n        </v-badge>\n      </template>\n\n      <p>Validation Errors</p>\n      <p\n        v-for=\"(message, index) in tooltipMessages\"\n        :key=\"`${index}`\"\n        class=\"mb-0\"\n      >\n        {{ message }}\n      </p>\n    </v-tooltip>\n    <slot v-else></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, CompType } from '../../vue';\nimport { VBadge, VTooltip } from 'vuetify/lib';\nimport { ErrorObject } from 'ajv';\nimport findIndex from 'lodash/findIndex';\nimport {\n  createControlElement,\n  createLabelDescriptionFrom,\n  JsonSchema,\n} from '@jsonforms/core';\n\nexport default defineComponent({\n  name: 'validation-badge',\n  components: {\n    VBadge,\n    VTooltip,\n  },\n  props: {\n    errors: {\n      required: true,\n      type: Array as CompType<ErrorObject, ArrayConstructor>,\n    },\n    bordered: {\n      type: Boolean,\n      default: false,\n    },\n    color: {\n      type: String,\n      default: 'error',\n    },\n    inline: {\n      type: Boolean,\n      default: false,\n    },\n    offsetX: {\n      type: [Number, String],\n      default: undefined,\n    },\n    offsetY: {\n      type: [Number, String],\n      default: undefined,\n    },\n    overlap: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    tooltipMessages(): string[] {\n      const error: {\n        instancePath: string;\n        schemaPath: string;\n        labels: (string | undefined)[];\n        message: string;\n      }[] = [];\n\n      for (const e of this.errors) {\n        const errorObject = e as ErrorObject;\n        const index = findIndex(error, { schemaPath: errorObject.schemaPath });\n        if (errorObject.message) {\n          if (index == -1) {\n            error.push({\n              schemaPath: errorObject.schemaPath,\n              instancePath: errorObject.instancePath,\n              labels: [\n                createLabelDescriptionFrom(\n                  createControlElement(errorObject.instancePath),\n                  errorObject.schema as JsonSchema\n                ).text,\n              ],\n              message: errorObject.message,\n            });\n          } else {\n            error[index].labels.push(\n              createLabelDescriptionFrom(\n                createControlElement(errorObject.instancePath),\n                errorObject.schema as JsonSchema\n              ).text\n            );\n          }\n        }\n      }\n\n      return error.map((v) => v.labels.join(',') + ': ' + v.message);\n    },\n  },\n});\n</script>\n","\n\n\n\n\n\n\nimport { defineComponent, CompType } from '../../vue';\nimport { ErrorObject } from 'ajv';\nimport { default as ValidationBadge } from './ValidationBadge.vue';\nimport { VIcon } from 'vuetify/lib';\n\nexport default defineComponent({\n  name: 'validation-icon',\n  components: {\n    ValidationBadge,\n    VIcon,\n  },\n  props: {\n    errors: {\n      required: true,\n      type: Array as CompType<ErrorObject, ArrayConstructor>,\n    },\n  },\n});\n","<template>\n  <validation-badge v-if=\"errors && errors.length > 0\" :errors=\"errors\">\n    <v-icon color=\"error\">mdi-alert-circle-outline</v-icon>\n  </validation-badge>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, CompType } from '../../vue';\nimport { ErrorObject } from 'ajv';\nimport { default as ValidationBadge } from './ValidationBadge.vue';\nimport { VIcon } from 'vuetify/lib';\n\nexport default defineComponent({\n  name: 'validation-icon',\n  components: {\n    ValidationBadge,\n    VIcon,\n  },\n  props: {\n    errors: {\n      required: true,\n      type: Array as CompType<ErrorObject, ArrayConstructor>,\n    },\n  },\n});\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  JsonFormsRendererRegistryEntry,\n  ControlElement,\n  rankWith,\n  composePaths,\n  createDefaultValue,\n  and,\n  uiTypeIs,\n  isObjectArray,\n  findUISchema,\n  UISchemaElement,\n  Resolve,\n  JsonSchema,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsArrayControl,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VList,\n  VListItemGroup,\n  VListItem,\n  VListItemTitle,\n  VListItemContent,\n  VListItemAction,\n  VListItemAvatar,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VExpansionPanels,\n  VExpansionPanel,\n  VExpansionPanelHeader,\n  VExpansionPanelContent,\n  VVirtualScroll,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\nimport { ErrorObject } from 'ajv';\n\nconst controlRenderer = defineComponent({\n  name: 'list-with-detail-renderer',\n  components: {\n    DispatchRenderer,\n    VList,\n    VListItemGroup,\n    VListItem,\n    VListItemTitle,\n    VListItemContent,\n    VListItemAction,\n    VListItemAvatar,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VBtn,\n    VIcon,\n    VSpacer,\n    VExpansionPanels,\n    VExpansionPanel,\n    VExpansionPanelHeader,\n    VExpansionPanelContent,\n    VContainer,\n    VVirtualScroll,\n    ValidationIcon,\n    ValidationBadge,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const selectedIndex = ref<number | undefined>(undefined);\n\n    return {\n      ...useVuetifyArrayControl(useJsonFormsArrayControl(props)),\n      selectedIndex,\n    };\n  },\n  computed: {\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n    foundUISchema(): UISchemaElement {\n      return findUISchema(\n        this.control.uischemas,\n        this.control.schema,\n        this.control.uischema.scope,\n        this.control.path,\n        undefined,\n        this.control.uischema\n      );\n    },\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    childErrors(index: number): ErrorObject[] {\n      return this.control.childErrors.filter((e) =>\n        e.instancePath.startsWith(\n          this.composePaths(this.control.path, `${index}`)\n        )\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(4, and(uiTypeIs('ListWithDetail'), isObjectArray)),\n};\n","const isOldIE = typeof navigator !== 'undefined' &&\r\n    /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\r\nfunction createInjector(context) {\r\n    return (id, style) => addStyle(id, style);\r\n}\r\nlet HEAD;\r\nconst styles = {};\r\nfunction addStyle(id, css) {\r\n    const group = isOldIE ? css.media || 'default' : id;\r\n    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });\r\n    if (!style.ids.has(id)) {\r\n        style.ids.add(id);\r\n        let code = css.source;\r\n        if (css.map) {\r\n            // https://developer.chrome.com/devtools/docs/javascript-debugging\r\n            // this makes source maps inside style tags work properly in Chrome\r\n            code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */';\r\n            // http://stackoverflow.com/a/26603875\r\n            code +=\r\n                '\\n/*# sourceMappingURL=data:application/json;base64,' +\r\n                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\r\n                    ' */';\r\n        }\r\n        if (!style.element) {\r\n            style.element = document.createElement('style');\r\n            style.element.type = 'text/css';\r\n            if (css.media)\r\n                style.element.setAttribute('media', css.media);\r\n            if (HEAD === undefined) {\r\n                HEAD = document.head || document.getElementsByTagName('head')[0];\r\n            }\r\n            HEAD.appendChild(style.element);\r\n        }\r\n        if ('styleSheet' in style.element) {\r\n            style.styles.push(code);\r\n            style.element.styleSheet.cssText = style.styles\r\n                .filter(Boolean)\r\n                .join('\\n');\r\n        }\r\n        else {\r\n            const index = style.ids.size - 1;\r\n            const textNode = document.createTextNode(code);\r\n            const nodes = style.element.childNodes;\r\n            if (nodes[index])\r\n                style.element.removeChild(nodes[index]);\r\n            if (nodes.length)\r\n                style.element.insertBefore(textNode, nodes[index]);\r\n            else\r\n                style.element.appendChild(textNode);\r\n        }\r\n    }\r\n}\n\nexport default createInjector;\n//# sourceMappingURL=browser.mjs.map\n","<template>\n  <v-container\n    v-if=\"control.visible\"\n    fill-height\n    :class=\"styles.listWithDetail.root\"\n  >\n    <v-row>\n      <v-col class=\"pa-0\">\n        <v-toolbar flat :class=\"styles.listWithDetail.toolbar\">\n          <v-toolbar-title :class=\"styles.listWithDetail.label\">{{\n            computedLabel\n          }}</v-toolbar-title>\n          <validation-icon\n            v-if=\"control.childErrors.length > 0\"\n            :errors=\"control.childErrors\"\n          />\n          <v-spacer></v-spacer>\n\n          <v-tooltip bottom>\n            <template v-slot:activator=\"{ on: onTooltip }\">\n              <v-btn\n                fab\n                text\n                elevation=\"0\"\n                small\n                :aria-label=\"`Add to ${control.label}`\"\n                v-on=\"onTooltip\"\n                :class=\"styles.listWithDetail.addButton\"\n                @click=\"addButtonClick\"\n                :disabled=\"\n                  !control.enabled ||\n                  (appliedOptions.restrict &&\n                    arraySchema !== undefined &&\n                    arraySchema.maxItems !== undefined &&\n                    control.data.length >= arraySchema.maxItems)\n                \"\n              >\n                <v-icon>mdi-plus</v-icon>\n              </v-btn>\n            </template>\n            {{ `Add to ${control.label}` }}\n          </v-tooltip>\n        </v-toolbar>\n      </v-col>\n    </v-row>\n    <v-row v-if=\"noData\" :class=\"styles.listWithDetail.noData\">\n      <v-col>No data</v-col>\n    </v-row>\n    <v-row v-else>\n      <v-col class=\"shrink pa-0\">\n        <v-list-item-group v-model=\"selectedIndex\">\n          <v-virtual-scroll\n            :items=\"control.data\"\n            :item-height=\"64\"\n            bench=\"4\"\n            :min-height=\"`${4 * 64}`\"\n            :max-height=\"`${6 * 64}`\"\n            :min-width=\"appliedOptions.showSortButtons ? 350 : 250\"\n            max-width=\"350\"\n          >\n            <template v-slot=\"{ index }\">\n              <v-list-item\n                dense\n                :value=\"index\"\n                :class=\"styles.listWithDetail.item\"\n              >\n                <v-list-item-avatar\n                  aria-label=\"Index\"\n                  size=\"64\"\n                  class=\"ma-0\"\n                  tile\n                  color=\"rgba(0,0,0,0)\"\n                >\n                  <validation-badge\n                    overlap\n                    bordered\n                    :errors=\"childErrors(index)\"\n                  >\n                    <v-avatar size=\"40\" aria-label=\"Index\" color=\"info\"\n                      ><span class=\"info--text text--lighten-5\">{{\n                        index + 1\n                      }}</span></v-avatar\n                    >\n                  </validation-badge>\n                </v-list-item-avatar>\n                <v-list-item-content>\n                  <v-list-item-title>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <span\n                          v-on=\"onTooltip\"\n                          :class=\"styles.listWithDetail.itemLabel\"\n                        >\n                          {{ childLabelForIndex(index) }}</span\n                        >\n                      </template>\n                      {{ childLabelForIndex(index) }}\n                    </v-tooltip>\n                  </v-list-item-title>\n                </v-list-item-content>\n                <v-list-item-action v-if=\"appliedOptions.showSortButtons\">\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        class=\"ma-0\"\n                        aria-label=\"Move up\"\n                        :disabled=\"index <= 0 || !control.enabled\"\n                        :class=\"styles.listWithDetail.itemMoveUp\"\n                        @click.native=\"moveUpClick($event, index)\"\n                      >\n                        <v-icon class=\"notranslate\">mdi-arrow-up</v-icon>\n                      </v-btn>\n                    </template>\n                    Move Up\n                  </v-tooltip>\n                </v-list-item-action>\n                <v-list-item-action v-if=\"appliedOptions.showSortButtons\">\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        class=\"ma-0\"\n                        aria-label=\"Move down\"\n                        :disabled=\"\n                          index >= control.data.length - 1 || !control.enabled\n                        \"\n                        :class=\"styles.listWithDetail.itemMoveDown\"\n                        @click.native=\"moveDownClick($event, index)\"\n                      >\n                        <v-icon class=\"notranslate\">mdi-arrow-down</v-icon>\n                      </v-btn>\n                    </template>\n                    Move Down\n                  </v-tooltip>\n                </v-list-item-action>\n                <v-list-item-action>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        class=\"ma-0\"\n                        aria-label=\"Delete\"\n                        :class=\"styles.listWithDetail.itemDelete\"\n                        @click.native=\"removeItemsClick($event, [index])\"\n                        :disabled=\"\n                          !control.enabled ||\n                          (appliedOptions.restrict &&\n                            arraySchema !== undefined &&\n                            arraySchema.minItems !== undefined &&\n                            control.data.length <= arraySchema.minItems)\n                        \"\n                      >\n                        <v-icon class=\"notranslate\">mdi-delete</v-icon>\n                      </v-btn>\n                    </template>\n                    Delete\n                  </v-tooltip>\n                </v-list-item-action>\n              </v-list-item>\n            </template>\n          </v-virtual-scroll>\n        </v-list-item-group>\n      </v-col>\n      <v-col v-if=\"selectedIndex === undefined\" class=\"grow\">\n        <span class=\"text-h6\">No Selection</span>\n      </v-col>\n      <v-col v-else :class=\"`grow ${styles.listWithDetail.itemContent}`\">\n        <dispatch-renderer\n          :schema=\"control.schema\"\n          :uischema=\"foundUISchema\"\n          :path=\"composePaths(control.path, `${selectedIndex}`)\"\n          :enabled=\"control.enabled\"\n          :renderers=\"control.renderers\"\n          :cells=\"control.cells\"\n        />\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport {\n  JsonFormsRendererRegistryEntry,\n  ControlElement,\n  rankWith,\n  composePaths,\n  createDefaultValue,\n  and,\n  uiTypeIs,\n  isObjectArray,\n  findUISchema,\n  UISchemaElement,\n  Resolve,\n  JsonSchema,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsArrayControl,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VList,\n  VListItemGroup,\n  VListItem,\n  VListItemTitle,\n  VListItemContent,\n  VListItemAction,\n  VListItemAvatar,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VExpansionPanels,\n  VExpansionPanel,\n  VExpansionPanelHeader,\n  VExpansionPanelContent,\n  VVirtualScroll,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\nimport { ErrorObject } from 'ajv';\n\nconst controlRenderer = defineComponent({\n  name: 'list-with-detail-renderer',\n  components: {\n    DispatchRenderer,\n    VList,\n    VListItemGroup,\n    VListItem,\n    VListItemTitle,\n    VListItemContent,\n    VListItemAction,\n    VListItemAvatar,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VBtn,\n    VIcon,\n    VSpacer,\n    VExpansionPanels,\n    VExpansionPanel,\n    VExpansionPanelHeader,\n    VExpansionPanelContent,\n    VContainer,\n    VVirtualScroll,\n    ValidationIcon,\n    ValidationBadge,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const selectedIndex = ref<number | undefined>(undefined);\n\n    return {\n      ...useVuetifyArrayControl(useJsonFormsArrayControl(props)),\n      selectedIndex,\n    };\n  },\n  computed: {\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n    foundUISchema(): UISchemaElement {\n      return findUISchema(\n        this.control.uischemas,\n        this.control.schema,\n        this.control.uischema.scope,\n        this.control.path,\n        undefined,\n        this.control.uischema\n      );\n    },\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    childErrors(index: number): ErrorObject[] {\n      return this.control.childErrors.filter((e) =>\n        e.instancePath.startsWith(\n          this.composePaths(this.control.path, `${index}`)\n        )\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(4, and(uiTypeIs('ListWithDetail'), isObjectArray)),\n};\n</script>\n\n<style scoped>\n.notranslate {\n  transform: none !important;\n}\n</style>\n","export { default as LabelRenderer } from './LabelRenderer.vue';\nexport { default as ListWithDetailRenderer } from './ListWithDetailRenderer.vue';\n\nimport { entry as labelRendererEntry } from './LabelRenderer.vue';\nimport { entry as listWithDetailRendererEntry } from './ListWithDetailRenderer.vue';\n\nexport const additionalRenderers = [\n  labelRendererEntry,\n  listWithDetailRendererEntry,\n];\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  JsonFormsRendererRegistryEntry,\n  ControlElement,\n  rankWith,\n  isObjectArrayWithNesting,\n  composePaths,\n  createDefaultValue,\n  UISchemaElement,\n  findUISchema,\n  Resolve,\n  JsonSchema,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsArrayControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VCard,\n  VCardTitle,\n  VCardText,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VExpansionPanels,\n  VExpansionPanel,\n  VExpansionPanelHeader,\n  VExpansionPanelContent,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\nimport { ErrorObject } from 'ajv';\n\nconst controlRenderer = defineComponent({\n  name: 'array-layout-renderer',\n  components: {\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VIcon,\n    VBtn,\n    VSpacer,\n    VExpansionPanels,\n    VExpansionPanel,\n    VExpansionPanelHeader,\n    VExpansionPanelContent,\n    VContainer,\n    ValidationIcon,\n    ValidationBadge,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyArrayControl(useJsonFormsArrayControl(props));\n  },\n  computed: {\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n    foundUISchema(): UISchemaElement {\n      return findUISchema(\n        this.control.uischemas,\n        this.control.schema,\n        this.control.uischema.scope,\n        this.control.path,\n        undefined,\n        this.control.uischema,\n        this.control.rootSchema\n      );\n    },\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    childErrors(index: number): ErrorObject[] {\n      return this.control.childErrors.filter((e) =>\n        e.instancePath.startsWith(\n          this.composePaths(this.control.path, `${index}`)\n        )\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(4, isObjectArrayWithNesting),\n};\n","<template>\n  <v-card v-if=\"control.visible\" :class=\"styles.arrayList.root\" elevation=\"0\">\n    <v-card-title>\n      <v-toolbar flat :class=\"styles.arrayList.toolbar\">\n        <v-toolbar-title :class=\"styles.arrayList.label\">{{\n          computedLabel\n        }}</v-toolbar-title>\n        <validation-icon\n          v-if=\"control.childErrors.length > 0\"\n          :errors=\"control.childErrors\"\n        />\n        <v-spacer></v-spacer>\n\n        <v-tooltip bottom>\n          <template v-slot:activator=\"{ on: onTooltip }\">\n            <v-btn\n              fab\n              text\n              elevation=\"0\"\n              small\n              :aria-label=\"`Add to ${control.label}`\"\n              v-on=\"onTooltip\"\n              :class=\"styles.arrayList.addButton\"\n              :disabled=\"\n                !control.enabled ||\n                (appliedOptions.restrict &&\n                  arraySchema !== undefined &&\n                  arraySchema.maxItems !== undefined &&\n                  control.data.length >= arraySchema.maxItems)\n              \"\n              @click=\"addButtonClick\"\n            >\n              <v-icon>mdi-plus</v-icon>\n            </v-btn>\n          </template>\n          {{ `Add to ${control.label}` }}\n        </v-tooltip>\n      </v-toolbar>\n    </v-card-title>\n    <v-card-text>\n      <v-container justify-space-around align-content-center>\n        <v-row justify=\"center\">\n          <v-expansion-panels accordion focusable>\n            <v-expansion-panel\n              v-for=\"(element, index) in control.data\"\n              :key=\"`${control.path}-${index}`\"\n              :class=\"styles.arrayList.item\"\n            >\n              <v-expansion-panel-header :class=\"styles.arrayList.itemHeader\">\n                <v-container py-0>\n                  <v-row\n                    :style=\"`display: grid; grid-template-columns: min-content auto min-content ${\n                      appliedOptions.showSortButtons\n                        ? 'min-content min-content'\n                        : ''\n                    }`\"\n                  >\n                    <v-col align-self=\"center\" px-0>\n                      <validation-badge\n                        overlap\n                        bordered\n                        :errors=\"childErrors(index)\"\n                      >\n                        <v-avatar size=\"40\" aria-label=\"Index\" color=\"info\"\n                          ><span class=\"info--text text--lighten-5\">{{\n                            index + 1\n                          }}</span></v-avatar\n                        >\n                      </validation-badge>\n                    </v-col>\n\n                    <v-col\n                      align-self=\"center\"\n                      :class=\"`text-truncate ${styles.arrayList.itemLabel}`\"\n                      >{{ childLabelForIndex(index) }}</v-col\n                    >\n                    <v-col\n                      align-self=\"center\"\n                      v-if=\"appliedOptions.showSortButtons\"\n                    >\n                      <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on: onTooltip }\">\n                          <v-btn\n                            v-on=\"onTooltip\"\n                            fab\n                            text\n                            elevation=\"0\"\n                            small\n                            class=\"v-expansion-panel-header__icon\"\n                            aria-label=\"Move up\"\n                            :disabled=\"index <= 0 || !control.enabled\"\n                            :class=\"styles.arrayList.itemMoveUp\"\n                            @click.native=\"moveUpClick($event, index)\"\n                          >\n                            <v-icon class=\"notranslate\">mdi-arrow-up</v-icon>\n                          </v-btn>\n                        </template>\n                        Move Up\n                      </v-tooltip>\n                    </v-col>\n                    <v-col\n                      align-self=\"center\"\n                      v-if=\"appliedOptions.showSortButtons\"\n                    >\n                      <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on: onTooltip }\">\n                          <v-btn\n                            v-on=\"onTooltip\"\n                            fab\n                            text\n                            elevation=\"0\"\n                            small\n                            class=\"v-expansion-panel-header__icon\"\n                            aria-label=\"Move down\"\n                            :disabled=\"\n                              index >= control.data.length - 1 ||\n                              !control.enabled\n                            \"\n                            :class=\"styles.arrayList.itemMoveDown\"\n                            @click.native=\"moveDownClick($event, index)\"\n                          >\n                            <v-icon class=\"notranslate\">mdi-arrow-down</v-icon>\n                          </v-btn>\n                        </template>\n                        Move Down\n                      </v-tooltip>\n                    </v-col>\n                    <v-col align-self=\"center\">\n                      <v-tooltip bottom>\n                        <template v-slot:activator=\"{ on: onTooltip }\">\n                          <v-btn\n                            v-on=\"onTooltip\"\n                            fab\n                            text\n                            elevation=\"0\"\n                            small\n                            class=\"v-expansion-panel-header__icon\"\n                            aria-label=\"Delete\"\n                            :class=\"styles.arrayList.itemDelete\"\n                            :disabled=\"\n                              !control.enabled ||\n                              (appliedOptions.restrict &&\n                                arraySchema !== undefined &&\n                                arraySchema.minItems !== undefined &&\n                                control.data.length <= arraySchema.minItems)\n                            \"\n                            @click.native=\"removeItemsClick($event, [index])\"\n                          >\n                            <v-icon class=\"notranslate\">mdi-delete</v-icon>\n                          </v-btn>\n                        </template>\n                        Delete\n                      </v-tooltip>\n                    </v-col>\n                  </v-row>\n                </v-container>\n              </v-expansion-panel-header>\n              <v-expansion-panel-content :class=\"styles.arrayList.itemContent\">\n                <dispatch-renderer\n                  :schema=\"control.schema\"\n                  :uischema=\"foundUISchema\"\n                  :path=\"composePaths(control.path, `${index}`)\"\n                  :enabled=\"control.enabled\"\n                  :renderers=\"control.renderers\"\n                  :cells=\"control.cells\"\n                />\n              </v-expansion-panel-content>\n            </v-expansion-panel>\n          </v-expansion-panels>\n        </v-row>\n      </v-container>\n      <v-container v-if=\"noData\" :class=\"styles.arrayList.noData\">\n        No data\n      </v-container></v-card-text\n    >\n  </v-card>\n</template>\n\n<script lang=\"ts\">\nimport {\n  JsonFormsRendererRegistryEntry,\n  ControlElement,\n  rankWith,\n  isObjectArrayWithNesting,\n  composePaths,\n  createDefaultValue,\n  UISchemaElement,\n  findUISchema,\n  Resolve,\n  JsonSchema,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsArrayControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VCard,\n  VCardTitle,\n  VCardText,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VExpansionPanels,\n  VExpansionPanel,\n  VExpansionPanelHeader,\n  VExpansionPanelContent,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\nimport { ErrorObject } from 'ajv';\n\nconst controlRenderer = defineComponent({\n  name: 'array-layout-renderer',\n  components: {\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VIcon,\n    VBtn,\n    VSpacer,\n    VExpansionPanels,\n    VExpansionPanel,\n    VExpansionPanelHeader,\n    VExpansionPanelContent,\n    VContainer,\n    ValidationIcon,\n    ValidationBadge,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyArrayControl(useJsonFormsArrayControl(props));\n  },\n  computed: {\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n    foundUISchema(): UISchemaElement {\n      return findUISchema(\n        this.control.uischemas,\n        this.control.schema,\n        this.control.uischema.scope,\n        this.control.path,\n        undefined,\n        this.control.uischema,\n        this.control.rootSchema\n      );\n    },\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    childErrors(index: number): ErrorObject[] {\n      return this.control.childErrors.filter((e) =>\n        e.instancePath.startsWith(\n          this.composePaths(this.control.path, `${index}`)\n        )\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(4, isObjectArrayWithNesting),\n};\n</script>\n\n<style scoped>\n.notranslate {\n  transform: none !important;\n}\n</style>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  and,\n  uiTypeIs,\n  Categorization,\n  Category,\n  Tester,\n  isVisible,\n  categorizationHasCategory,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useAjv, useVuetifyLayout } from '../util';\nimport { VCard, VTabs, VTab, VTabsItems, VTabItem } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'categorization-renderer',\n  components: {\n    DispatchRenderer,\n    VCard,\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    const activeCategory = ref(0);\n    const ajv = useAjv();\n\n    return {\n      ...useVuetifyLayout(useJsonFormsLayout(props)),\n      activeCategory,\n      ajv,\n    };\n  },\n  computed: {\n    visibleCategories(): (Category | Categorization)[] {\n      return (this.layout.uischema as Categorization).elements.filter(\n        (category: Category | Categorization) =>\n          isVisible(category, this.layout.data, this.layout.path, this.ajv)\n      );\n    },\n  },\n});\n\nexport default layoutRenderer;\n\nexport const isSingleLevelCategorization: Tester = and(\n  uiTypeIs('Categorization'),\n  categorizationHasCategory\n);\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, isSingleLevelCategorization),\n};\n","<template>\n  <v-card v-if=\"layout.visible\" :class=\"styles.categorization.root\">\n    <v-tabs v-model=\"activeCategory\" :vertical=\"layout.direction == 'row'\">\n      <v-tab\n        v-for=\"(element, index) in visibleCategories\"\n        :key=\"`${layout.path}-${index}`\"\n      >\n        {{ element.label }}\n      </v-tab>\n    </v-tabs>\n\n    <v-tabs-items v-model=\"activeCategory\">\n      <v-tab-item\n        v-for=\"(element, index) in visibleCategories\"\n        :key=\"`${layout.path}-${index}`\"\n      >\n        <dispatch-renderer\n          :schema=\"layout.schema\"\n          :uischema=\"element\"\n          :path=\"layout.path\"\n          :enabled=\"layout.enabled\"\n          :renderers=\"layout.renderers\"\n          :cells=\"layout.cells\"\n        />\n      </v-tab-item>\n    </v-tabs-items>\n  </v-card>\n</template>\n\n<script lang=\"ts\">\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  and,\n  uiTypeIs,\n  Categorization,\n  Category,\n  Tester,\n  isVisible,\n  categorizationHasCategory,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useAjv, useVuetifyLayout } from '../util';\nimport { VCard, VTabs, VTab, VTabsItems, VTabItem } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'categorization-renderer',\n  components: {\n    DispatchRenderer,\n    VCard,\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    const activeCategory = ref(0);\n    const ajv = useAjv();\n\n    return {\n      ...useVuetifyLayout(useJsonFormsLayout(props)),\n      activeCategory,\n      ajv,\n    };\n  },\n  computed: {\n    visibleCategories(): (Category | Categorization)[] {\n      return (this.layout.uischema as Categorization).elements.filter(\n        (category: Category | Categorization) =>\n          isVisible(category, this.layout.data, this.layout.path, this.ajv)\n      );\n    },\n  },\n});\n\nexport default layoutRenderer;\n\nexport const isSingleLevelCategorization: Tester = and(\n  uiTypeIs('Categorization'),\n  categorizationHasCategory\n);\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, isSingleLevelCategorization),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  and,\n  uiTypeIs,\n  Categorization,\n  Category,\n  optionIs,\n  Tester,\n  isVisible,\n  categorizationHasCategory,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useAjv, useVuetifyLayout } from '../util';\nimport {\n  VStepper,\n  VStepperHeader,\n  VStepperStep,\n  VDivider,\n  VStepperItems,\n  VStepperContent,\n  VSpacer,\n  VCard,\n  VCardActions,\n  VBtn,\n} from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'categorization-stepper-renderer',\n  components: {\n    DispatchRenderer,\n    VStepper,\n    VStepperHeader,\n    VStepperStep,\n    VDivider,\n    VSpacer,\n    VStepperItems,\n    VStepperContent,\n    VCard,\n    VCardActions,\n    VBtn,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    const activeCategory = ref(1);\n    const ajv = useAjv();\n\n    return {\n      ...useVuetifyLayout(useJsonFormsLayout(props)),\n      activeCategory,\n      ajv,\n    };\n  },\n  computed: {\n    visibleCategories(): (Category | Categorization)[] {\n      return (this.layout.uischema as Categorization).elements.filter(\n        (category: Category | Categorization) =>\n          isVisible(category, this.layout.data, this.layout.path, this.ajv)\n      );\n    },\n  },\n});\n\nexport default layoutRenderer;\n\nexport const categorizationStepperTester: Tester = and(\n  uiTypeIs('Categorization'),\n  categorizationHasCategory,\n  optionIs('variant', 'stepper')\n);\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(3, categorizationStepperTester),\n};\n","<template>\n  <div v-if=\"layout.visible\" :class=\"styles.categorization.root\">\n    <v-stepper\n      non-linear\n      v-model=\"activeCategory\"\n      :vertical=\"layout.direction == 'row'\"\n    >\n      <v-stepper-header>\n        <template v-for=\"(element, index) in visibleCategories\">\n          <v-stepper-step\n            :key=\"`${layout.path}-${index}`\"\n            :step=\"index + 1\"\n            editable\n          >\n            {{ element.label }}\n          </v-stepper-step>\n          <v-divider\n            v-if=\"index !== visibleCategories.length - 1\"\n            :key=\"index\"\n          ></v-divider>\n        </template>\n      </v-stepper-header>\n\n      <v-stepper-items>\n        <v-stepper-content\n          v-for=\"(element, index) in visibleCategories\"\n          :key=\"`${layout.path}-${index}`\"\n          :step=\"index + 1\"\n        >\n          <v-card elevation=\"0\">\n            <dispatch-renderer\n              :schema=\"layout.schema\"\n              :uischema=\"element\"\n              :path=\"layout.path\"\n              :enabled=\"layout.enabled\"\n              :renderers=\"layout.renderers\"\n              :cells=\"layout.cells\"\n            />\n\n            <div v-if=\"!!appliedOptions.showNavButtons\">\n              <v-divider></v-divider>\n\n              <v-card-actions>\n                <v-btn\n                  text\n                  left\n                  :disabled=\"activeCategory - 1 <= 0\"\n                  @click=\"activeCategory--\"\n                >\n                  Back\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn\n                  text\n                  right\n                  color=\"primary\"\n                  :disabled=\"activeCategory - 1 >= visibleCategories.length - 1\"\n                  @click=\"activeCategory++\"\n                >\n                  Next\n                </v-btn>\n              </v-card-actions>\n            </div>\n          </v-card>\n        </v-stepper-content>\n      </v-stepper-items>\n    </v-stepper>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  and,\n  uiTypeIs,\n  Categorization,\n  Category,\n  optionIs,\n  Tester,\n  isVisible,\n  categorizationHasCategory,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useAjv, useVuetifyLayout } from '../util';\nimport {\n  VStepper,\n  VStepperHeader,\n  VStepperStep,\n  VDivider,\n  VStepperItems,\n  VStepperContent,\n  VSpacer,\n  VCard,\n  VCardActions,\n  VBtn,\n} from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'categorization-stepper-renderer',\n  components: {\n    DispatchRenderer,\n    VStepper,\n    VStepperHeader,\n    VStepperStep,\n    VDivider,\n    VSpacer,\n    VStepperItems,\n    VStepperContent,\n    VCard,\n    VCardActions,\n    VBtn,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    const activeCategory = ref(1);\n    const ajv = useAjv();\n\n    return {\n      ...useVuetifyLayout(useJsonFormsLayout(props)),\n      activeCategory,\n      ajv,\n    };\n  },\n  computed: {\n    visibleCategories(): (Category | Categorization)[] {\n      return (this.layout.uischema as Categorization).elements.filter(\n        (category: Category | Categorization) =>\n          isVisible(category, this.layout.data, this.layout.path, this.ajv)\n      );\n    },\n  },\n});\n\nexport default layoutRenderer;\n\nexport const categorizationStepperTester: Tester = and(\n  uiTypeIs('Categorization'),\n  categorizationHasCategory,\n  optionIs('variant', 'stepper')\n);\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(3, categorizationStepperTester),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  and,\n  isLayout,\n  uiTypeIs,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout } from '../util';\nimport { VCard, VCardTitle, VCardText } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'group-renderer',\n  components: {\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    return useVuetifyLayout(useJsonFormsLayout(props));\n  },\n});\n\nexport default layoutRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, and(isLayout, uiTypeIs('Group'))),\n};\n","<template>\n  <v-card\n    v-if=\"layout.visible\"\n    :class=\"`pa-0 ${styles.group.root}`\"\n    elevation=\"2\"\n  >\n    <v-card-title v-if=\"layout.uischema.label\" :class=\"styles.group.label\">{{\n      layout.uischema.label\n    }}</v-card-title>\n\n    <v-card-text\n      v-for=\"(element, index) in layout.uischema.elements\"\n      :key=\"`${layout.path}-${index}`\"\n      :class=\"styles.group.item\"\n    >\n      <dispatch-renderer\n        :schema=\"layout.schema\"\n        :uischema=\"element\"\n        :path=\"layout.path\"\n        :enabled=\"layout.enabled\"\n        :renderers=\"layout.renderers\"\n        :cells=\"layout.cells\"\n      />\n    </v-card-text>\n  </v-card>\n</template>\n\n<script lang=\"ts\">\nimport {\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n  and,\n  isLayout,\n  uiTypeIs,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout } from '../util';\nimport { VCard, VCardTitle, VCardText } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'group-renderer',\n  components: {\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    return useVuetifyLayout(useJsonFormsLayout(props));\n  },\n});\n\nexport default layoutRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, and(isLayout, uiTypeIs('Group'))),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  uiTypeIs,\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout } from '../util';\nimport { VContainer, VRow, VCol } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'horizontal-layout-renderer',\n  components: {\n    DispatchRenderer,\n    VContainer,\n    VRow,\n    VCol,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    return useVuetifyLayout(useJsonFormsLayout(props));\n  },\n});\n\nexport default layoutRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, uiTypeIs('HorizontalLayout')),\n};\n","<template>\n  <v-container\n    v-if=\"layout.visible\"\n    :class=\"`pa-0 ${styles.horizontalLayout.root}`\"\n  >\n    <v-row>\n      <v-col\n        v-for=\"(element, index) in layout.uischema.elements\"\n        :key=\"`${layout.path}-${index}`\"\n        :class=\"styles.horizontalLayout.item\"\n      >\n        <dispatch-renderer\n          :schema=\"layout.schema\"\n          :uischema=\"element\"\n          :path=\"layout.path\"\n          :enabled=\"layout.enabled\"\n          :renderers=\"layout.renderers\"\n          :cells=\"layout.cells\"\n        />\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport {\n  uiTypeIs,\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout } from '../util';\nimport { VContainer, VRow, VCol } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'horizontal-layout-renderer',\n  components: {\n    DispatchRenderer,\n    VContainer,\n    VRow,\n    VCol,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    return useVuetifyLayout(useJsonFormsLayout(props));\n  },\n});\n\nexport default layoutRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, uiTypeIs('HorizontalLayout')),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  uiTypeIs,\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout } from '../util';\nimport { VContainer, VRow, VCol } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'vertical-layout-renderer',\n  components: {\n    DispatchRenderer,\n    VContainer,\n    VRow,\n    VCol,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    return useVuetifyLayout(useJsonFormsLayout(props));\n  },\n});\n\nexport default layoutRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, uiTypeIs('VerticalLayout')),\n};\n","<template>\n  <v-container\n    v-if=\"layout.visible\"\n    fill-height\n    :class=\"`pa-0 ${styles.verticalLayout.root}`\"\n  >\n    <v-row\n      v-for=\"(element, index) in layout.uischema.elements\"\n      :key=\"`${layout.path}-${index}`\"\n      no-gutters\n    >\n      <v-col cols=\"12\" :class=\"styles.verticalLayout.item\">\n        <dispatch-renderer\n          :schema=\"layout.schema\"\n          :uischema=\"element\"\n          :path=\"layout.path\"\n          :enabled=\"layout.enabled\"\n          :renderers=\"layout.renderers\"\n          :cells=\"layout.cells\"\n        />\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport {\n  uiTypeIs,\n  JsonFormsRendererRegistryEntry,\n  Layout,\n  rankWith,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsLayout,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyLayout } from '../util';\nimport { VContainer, VRow, VCol } from 'vuetify/lib';\n\nconst layoutRenderer = defineComponent({\n  name: 'vertical-layout-renderer',\n  components: {\n    DispatchRenderer,\n    VContainer,\n    VRow,\n    VCol,\n  },\n  props: {\n    ...rendererProps<Layout>(),\n  },\n  setup(props: RendererProps<Layout>) {\n    return useVuetifyLayout(useJsonFormsLayout(props));\n  },\n});\n\nexport default layoutRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: layoutRenderer,\n  tester: rankWith(2, uiTypeIs('VerticalLayout')),\n};\n</script>\n","import {\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isLayout,\n} from '@jsonforms/core';\n\nimport { entry as arrayLayoutRendererEntry } from './ArrayLayoutRenderer.vue';\nimport { entry as categorizationRendererEntry } from './CategorizationRenderer.vue';\nimport { entry as categorizationStepperRendererEntry } from './CategorizationStepperRenderer.vue';\nimport { entry as groupRendererEntry } from './GroupRenderer.vue';\nimport { entry as horizontalLayoutRendererEntry } from './HorizontalLayoutRenderer.vue';\nimport { entry as verticalLayoutRendererEntry } from './VerticalLayoutRenderer.vue';\nimport { default as VerticalLayoutRenderer } from './VerticalLayoutRenderer.vue';\n\nexport { default as ArrayLayoutRenderer } from './ArrayLayoutRenderer.vue';\nexport { default as CategorizationRenderer } from './CategorizationRenderer.vue';\nexport { default as CategorizationStepperRenderer } from './CategorizationStepperRenderer.vue';\nexport { default as GroupRenderer } from './GroupRenderer.vue';\nexport { default as HorizontalLayoutRenderer } from './HorizontalLayoutRenderer.vue';\nexport { default as VerticalLayoutRenderer } from './VerticalLayoutRenderer.vue';\n\n// default layout renderer is the VerticalLayoutRenderer\nconst layoutRendererEntry: JsonFormsRendererRegistryEntry = {\n  renderer: VerticalLayoutRenderer,\n  tester: rankWith(1, isLayout),\n};\n\nexport const layoutRenderers = [\n  layoutRendererEntry,\n  arrayLayoutRendererEntry,\n  categorizationRendererEntry,\n  categorizationStepperRendererEntry,\n  groupRendererEntry,\n  horizontalLayoutRendererEntry,\n  verticalLayoutRendererEntry,\n];\n","import {\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  schemaTypeIs,\n} from '@jsonforms/core';\nimport { ArrayLayoutRenderer } from '../layouts';\n\nexport const arrayListRendererEntry: JsonFormsRendererRegistryEntry = {\n  renderer: ArrayLayoutRenderer,\n  tester: rankWith(2, schemaTypeIs('array')),\n};\n\nexport const arrayRenderers = [arrayListRendererEntry];\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  CombinatorSubSchemaRenderInfo,\n  ControlElement,\n  createCombinatorRenderInfos,\n  findMatchingUISchema,\n  isAllOfControl,\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  rankWith,\n  resolveSubSchemas,\n  UISchemaElement,\n} from '@jsonforms/core';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsAllOfControl,\n} from '@jsonforms/vue2';\nimport { defineComponent } from '../vue';\nimport { useVuetifyControl } from '../util';\n\nconst controlRenderer = defineComponent({\n  name: 'all-of-renderer',\n  components: {\n    DispatchRenderer,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsAllOfControl(props));\n  },\n  computed: {\n    subSchema(): JsonSchema {\n      return resolveSubSchemas(\n        this.control.schema,\n        this.control.rootSchema,\n        'allOf'\n      );\n    },\n    delegateUISchema(): UISchemaElement {\n      return findMatchingUISchema(this.control.uischemas)(\n        this.subSchema,\n        this.control.uischema.scope,\n        this.control.path\n      );\n    },\n    allOfRenderInfos(): CombinatorSubSchemaRenderInfo[] {\n      return createCombinatorRenderInfos(\n        this.subSchema.allOf!,\n        this.control.rootSchema,\n        'allOf',\n        this.control.uischema,\n        this.control.path,\n        this.control.uischemas\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, isAllOfControl),\n};\n","<template>\n  <div v-if=\"control.visible\">\n    <template v-if=\"delegateUISchema\">\n      <dispatch-renderer\n        :schema=\"subSchema\"\n        :uischema=\"delegateUISchema\"\n        :path=\"control.path\"\n        :enabled=\"control.enabled\"\n        :renderers=\"control.renderers\"\n        :cells=\"control.cells\"\n      />\n    </template>\n    <template v-else-if=\"allOfRenderInfos\">\n      <dispatch-renderer\n        v-for=\"(allOfRenderInfo, allOfIndex) in allOfRenderInfos\"\n        :key=\"`${control.path}-${allOfIndex}`\"\n        :schema=\"allOfRenderInfo.schema\"\n        :uischema=\"allOfRenderInfo.uischema\"\n        :path=\"control.path\"\n        :enabled=\"control.enabled\"\n        :renderers=\"control.renderers\"\n        :cells=\"control.cells\"\n      />\n    </template>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  CombinatorSubSchemaRenderInfo,\n  ControlElement,\n  createCombinatorRenderInfos,\n  findMatchingUISchema,\n  isAllOfControl,\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  rankWith,\n  resolveSubSchemas,\n  UISchemaElement,\n} from '@jsonforms/core';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsAllOfControl,\n} from '@jsonforms/vue2';\nimport { defineComponent } from '../vue';\nimport { useVuetifyControl } from '../util';\n\nconst controlRenderer = defineComponent({\n  name: 'all-of-renderer',\n  components: {\n    DispatchRenderer,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsAllOfControl(props));\n  },\n  computed: {\n    subSchema(): JsonSchema {\n      return resolveSubSchemas(\n        this.control.schema,\n        this.control.rootSchema,\n        'allOf'\n      );\n    },\n    delegateUISchema(): UISchemaElement {\n      return findMatchingUISchema(this.control.uischemas)(\n        this.subSchema,\n        this.control.uischema.scope,\n        this.control.path\n      );\n    },\n    allOfRenderInfos(): CombinatorSubSchemaRenderInfo[] {\n      return createCombinatorRenderInfos(\n        this.subSchema.allOf!,\n        this.control.rootSchema,\n        'allOf',\n        this.control.uischema,\n        this.control.path,\n        this.control.uischemas\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, isAllOfControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\nimport { Generate, JsonSchema, Layout, UISchemaElement } from '@jsonforms/core';\nimport omit from 'lodash/omit';\nimport { CompType, defineComponent } from '../../vue';\nimport { DispatchRenderer } from '@jsonforms/vue2';\n\ninterface CombinatorProps {\n  schema: JsonSchema;\n  combinatorKeyword: 'oneOf' | 'anyOf';\n  path: string;\n}\n\nexport default defineComponent({\n  name: 'combinator-properties',\n  components: {\n    DispatchRenderer,\n  },\n  props: {\n    schema: {\n      type: Object as CompType<JsonSchema, ObjectConstructor>,\n      required: true,\n    },\n    combinatorKeyword: {\n      type: String as CompType<'oneOf' | 'anyOf', StringConstructor>,\n      required: true,\n    },\n    path: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props: CombinatorProps) {\n    const otherProps: JsonSchema = omit(\n      props.schema,\n      props.combinatorKeyword\n    ) as JsonSchema;\n    const foundUISchema: UISchemaElement = Generate.uiSchema(\n      otherProps,\n      'VerticalLayout'\n    );\n\n    const isLayout = (uischema: UISchemaElement): uischema is Layout =>\n      Object.prototype.hasOwnProperty.call(uischema, 'elements');\n\n    let isLayoutWithElements = false;\n    if (foundUISchema !== null && isLayout(foundUISchema)) {\n      isLayoutWithElements = foundUISchema.elements.length > 0;\n    }\n\n    return {\n      otherProps,\n      foundUISchema,\n      isLayoutWithElements,\n    };\n  },\n});\n","<template>\n  <div v-if=\"isLayoutWithElements\">\n    <dispatch-renderer\n      :schema=\"otherProps\"\n      :path=\"path\"\n      :uischema=\"foundUISchema\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Generate, JsonSchema, Layout, UISchemaElement } from '@jsonforms/core';\nimport omit from 'lodash/omit';\nimport { CompType, defineComponent } from '../../vue';\nimport { DispatchRenderer } from '@jsonforms/vue2';\n\ninterface CombinatorProps {\n  schema: JsonSchema;\n  combinatorKeyword: 'oneOf' | 'anyOf';\n  path: string;\n}\n\nexport default defineComponent({\n  name: 'combinator-properties',\n  components: {\n    DispatchRenderer,\n  },\n  props: {\n    schema: {\n      type: Object as CompType<JsonSchema, ObjectConstructor>,\n      required: true,\n    },\n    combinatorKeyword: {\n      type: String as CompType<'oneOf' | 'anyOf', StringConstructor>,\n      required: true,\n    },\n    path: {\n      type: String,\n      required: true,\n    },\n  },\n  setup(props: CombinatorProps) {\n    const otherProps: JsonSchema = omit(\n      props.schema,\n      props.combinatorKeyword\n    ) as JsonSchema;\n    const foundUISchema: UISchemaElement = Generate.uiSchema(\n      otherProps,\n      'VerticalLayout'\n    );\n\n    const isLayout = (uischema: UISchemaElement): uischema is Layout =>\n      Object.prototype.hasOwnProperty.call(uischema, 'elements');\n\n    let isLayoutWithElements = false;\n    if (foundUISchema !== null && isLayout(foundUISchema)) {\n      isLayoutWithElements = foundUISchema.elements.length > 0;\n    }\n\n    return {\n      otherProps,\n      foundUISchema,\n      isLayoutWithElements,\n    };\n  },\n});\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  CombinatorSubSchemaRenderInfo,\n  ControlElement,\n  createCombinatorRenderInfos,\n  isAnyOfControl,\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  rankWith,\n  resolveSubSchemas,\n} from '@jsonforms/core';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsAnyOfControl,\n} from '@jsonforms/vue2';\nimport { VTabs, VTab, VTabsItems, VTabItem } from 'vuetify/lib';\nimport { defineComponent, ref } from '../vue';\nimport { useVuetifyControl } from '../util';\nimport { CombinatorProperties } from './components';\n\nconst controlRenderer = defineComponent({\n  name: 'any-of-renderer',\n  components: {\n    DispatchRenderer,\n    CombinatorProperties,\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const input = useJsonFormsAnyOfControl(props);\n    const control = (input.control as any).value as typeof input.control;\n    const selectedIndex = ref(control.indexOfFittingSchema || 0);\n\n    return {\n      ...useVuetifyControl(input),\n      selectedIndex,\n    };\n  },\n  computed: {\n    subSchema(): JsonSchema {\n      return resolveSubSchemas(\n        this.control.schema,\n        this.control.rootSchema,\n        'anyOf'\n      );\n    },\n    anyOfRenderInfos(): CombinatorSubSchemaRenderInfo[] {\n      return createCombinatorRenderInfos(\n        this.subSchema.anyOf!,\n        this.control.rootSchema,\n        'anyOf',\n        this.control.uischema,\n        this.control.path,\n        this.control.uischemas\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, isAnyOfControl),\n};\n","<template>\n  <div v-if=\"control.visible\">\n    <combinator-properties\n      :schema=\"subSchema\"\n      combinatorKeyword=\"anyOf\"\n      :path=\"path\"\n    />\n\n    <v-tabs v-model=\"selectedIndex\">\n      <v-tab\n        v-for=\"(anyOfRenderInfo, anyOfIndex) in anyOfRenderInfos\"\n        :key=\"`${control.path}-${anyOfIndex}`\"\n      >\n        {{ anyOfRenderInfo.label }}\n      </v-tab>\n    </v-tabs>\n\n    <v-tabs-items v-model=\"selectedIndex\">\n      <v-tab-item\n        v-for=\"(anyOfRenderInfo, anyOfIndex) in anyOfRenderInfos\"\n        :key=\"`${control.path}-${anyOfIndex}`\"\n      >\n        <dispatch-renderer\n          v-if=\"selectedIndex === anyOfIndex\"\n          :schema=\"anyOfRenderInfo.schema\"\n          :uischema=\"anyOfRenderInfo.uischema\"\n          :path=\"control.path\"\n          :renderers=\"control.renderers\"\n          :cells=\"control.cells\"\n        />\n      </v-tab-item>\n    </v-tabs-items>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  CombinatorSubSchemaRenderInfo,\n  ControlElement,\n  createCombinatorRenderInfos,\n  isAnyOfControl,\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  rankWith,\n  resolveSubSchemas,\n} from '@jsonforms/core';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsAnyOfControl,\n} from '@jsonforms/vue2';\nimport { VTabs, VTab, VTabsItems, VTabItem } from 'vuetify/lib';\nimport { defineComponent, ref } from '../vue';\nimport { useVuetifyControl } from '../util';\nimport { CombinatorProperties } from './components';\n\nconst controlRenderer = defineComponent({\n  name: 'any-of-renderer',\n  components: {\n    DispatchRenderer,\n    CombinatorProperties,\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const input = useJsonFormsAnyOfControl(props);\n    const control = (input.control as any).value as typeof input.control;\n    const selectedIndex = ref(control.indexOfFittingSchema || 0);\n\n    return {\n      ...useVuetifyControl(input),\n      selectedIndex,\n    };\n  },\n  computed: {\n    subSchema(): JsonSchema {\n      return resolveSubSchemas(\n        this.control.schema,\n        this.control.rootSchema,\n        'anyOf'\n      );\n    },\n    anyOfRenderInfos(): CombinatorSubSchemaRenderInfo[] {\n      return createCombinatorRenderInfos(\n        this.subSchema.anyOf!,\n        this.control.rootSchema,\n        'anyOf',\n        this.control.uischema,\n        this.control.path,\n        this.control.uischemas\n      );\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, isAnyOfControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  isObjectArrayControl,\n  isPrimitiveArrayControl,\n  JsonFormsRendererRegistryEntry,\n  or,\n  rankWith,\n  composePaths,\n  createDefaultValue,\n  ControlElement,\n  JsonSchema,\n  Resolve,\n} from '@jsonforms/core';\nimport startCase from 'lodash/startCase';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchCell,\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsArrayControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VCard,\n  VCardTitle,\n  VCardText,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VSimpleTable,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\n\nconst controlRenderer = defineComponent({\n  name: 'array-control-renderer',\n  components: {\n    DispatchCell,\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VIcon,\n    VBtn,\n    VSpacer,\n    VContainer,\n    ValidationIcon,\n    ValidationBadge,\n    VSimpleTable,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyArrayControl(useJsonFormsArrayControl(props));\n  },\n  computed: {\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    getValidColumnProps(scopedSchema: JsonSchema) {\n      if (\n        scopedSchema.type === 'object' &&\n        typeof scopedSchema.properties === 'object'\n      ) {\n        return Object.keys(scopedSchema.properties).filter(\n          (prop) => scopedSchema.properties![prop].type !== 'array'\n        );\n      }\n      // primitives\n      return [''];\n    },\n    title(prop: string) {\n      return this.control.schema.properties?.[prop]?.title ?? startCase(prop);\n    },\n    resolveUiSchema(propName: string) {\n      return this.control.schema.properties\n        ? this.controlWithoutLabel(`#/properties/${propName}`)\n        : this.controlWithoutLabel('#');\n    },\n    controlWithoutLabel(scope: string): ControlElement {\n      return { type: 'Control', scope: scope, label: false };\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, or(isObjectArrayControl, isPrimitiveArrayControl)),\n};\n","<template>\n  <v-card v-if=\"control.visible\" :class=\"styles.arrayList.root\" elevation=\"0\">\n    <v-card-title>\n      <v-toolbar flat :class=\"styles.arrayList.toolbar\">\n        <v-toolbar-title :class=\"styles.arrayList.label\">{{\n          computedLabel\n        }}</v-toolbar-title>\n        <validation-icon\n          v-if=\"control.childErrors.length > 0\"\n          :errors=\"control.childErrors\"\n        />\n        <v-spacer></v-spacer>\n\n        <v-tooltip bottom>\n          <template v-slot:activator=\"{ on: onTooltip }\">\n            <v-btn\n              fab\n              text\n              elevation=\"0\"\n              small\n              :aria-label=\"`Add to ${control.label}`\"\n              v-on=\"onTooltip\"\n              :class=\"styles.arrayList.addButton\"\n              :disabled=\"\n                !control.enabled ||\n                (appliedOptions.restrict &&\n                  arraySchema !== undefined &&\n                  arraySchema.maxItems !== undefined &&\n                  control.data.length >= arraySchema.maxItems)\n              \"\n              @click=\"addButtonClick\"\n            >\n              <v-icon>mdi-plus</v-icon>\n            </v-btn>\n          </template>\n          {{ `Add to ${control.label}` }}\n        </v-tooltip>\n      </v-toolbar>\n    </v-card-title>\n    <v-card-text>\n      <v-container justify-space-around align-content-center>\n        <v-row justify=\"center\">\n          <v-simple-table class=\"array-container flex\">\n            <thead v-if=\"control.schema.type === 'object'\">\n              <tr>\n                <th\n                  v-for=\"(prop, index) in getValidColumnProps(control.schema)\"\n                  :key=\"`${control.path}-header-${index}`\"\n                  scope=\"col\"\n                >\n                  {{ title(prop) }}\n                </th>\n                <th\n                  v-if=\"control.enabled\"\n                  :class=\"\n                    appliedOptions.showSortButtons\n                      ? 'fixed-cell'\n                      : 'fixed-cell-small'\n                  \"\n                  scope=\"col\"\n                ></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"(element, index) in control.data\"\n                :key=\"`${control.path}-${index}`\"\n                :class=\"styles.arrayList.item\"\n              >\n                <td\n                  v-for=\"propName in getValidColumnProps(control.schema)\"\n                  :key=\"\n                    composePaths(\n                      composePaths(control.path, `${index}`),\n                      propName\n                    )\n                  \"\n                >\n                  <dispatch-renderer\n                    :schema=\"control.schema\"\n                    :uischema=\"resolveUiSchema(propName)\"\n                    :path=\"composePaths(control.path, `${index}`)\"\n                    :enabled=\"control.enabled\"\n                    :renderers=\"control.renderers\"\n                    :cells=\"control.cells\"\n                  />\n                </td>\n                <td\n                  v-if=\"control.enabled\"\n                  :class=\"\n                    appliedOptions.showSortButtons\n                      ? 'fixed-cell'\n                      : 'fixed-cell-small'\n                  \"\n                >\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        v-if=\"appliedOptions.showSortButtons\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        aria-label=\"Move up\"\n                        :disabled=\"index <= 0 || !control.enabled\"\n                        :class=\"styles.arrayList.itemMoveUp\"\n                        @click.native=\"moveUpClick($event, index)\"\n                      >\n                        <v-icon class=\"notranslate\">mdi-arrow-up</v-icon>\n                      </v-btn>\n                    </template>\n                    Move Up\n                  </v-tooltip>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        v-if=\"appliedOptions.showSortButtons\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        aria-label=\"Move down\"\n                        :disabled=\"\n                          index >= control.data.length - 1 || !control.enabled\n                        \"\n                        :class=\"styles.arrayList.itemMoveDown\"\n                        @click.native=\"moveDownClick($event, index)\"\n                      >\n                        <v-icon class=\"notranslate\">mdi-arrow-down</v-icon>\n                      </v-btn>\n                    </template>\n                    Move Down\n                  </v-tooltip>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        aria-label=\"Delete\"\n                        :class=\"styles.arrayList.itemDelete\"\n                        :disabled=\"\n                          !control.enabled ||\n                          (appliedOptions.restrict &&\n                            arraySchema !== undefined &&\n                            arraySchema.minItems !== undefined &&\n                            control.data.length <= arraySchema.minItems)\n                        \"\n                        @click.native=\"removeItemsClick($event, [index])\"\n                      >\n                        <v-icon class=\"notranslate\">mdi-delete</v-icon>\n                      </v-btn>\n                    </template>\n                    Delete\n                  </v-tooltip>\n                </td>\n              </tr>\n            </tbody>\n          </v-simple-table>\n        </v-row>\n      </v-container>\n      <v-container v-if=\"noData\" :class=\"styles.arrayList.noData\">\n        No data\n      </v-container>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script lang=\"ts\">\nimport {\n  isObjectArrayControl,\n  isPrimitiveArrayControl,\n  JsonFormsRendererRegistryEntry,\n  or,\n  rankWith,\n  composePaths,\n  createDefaultValue,\n  ControlElement,\n  JsonSchema,\n  Resolve,\n} from '@jsonforms/core';\nimport startCase from 'lodash/startCase';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchCell,\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsArrayControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VCard,\n  VCardTitle,\n  VCardText,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VSimpleTable,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\n\nconst controlRenderer = defineComponent({\n  name: 'array-control-renderer',\n  components: {\n    DispatchCell,\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VIcon,\n    VBtn,\n    VSpacer,\n    VContainer,\n    ValidationIcon,\n    ValidationBadge,\n    VSimpleTable,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyArrayControl(useJsonFormsArrayControl(props));\n  },\n  computed: {\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    getValidColumnProps(scopedSchema: JsonSchema) {\n      if (\n        scopedSchema.type === 'object' &&\n        typeof scopedSchema.properties === 'object'\n      ) {\n        return Object.keys(scopedSchema.properties).filter(\n          (prop) => scopedSchema.properties![prop].type !== 'array'\n        );\n      }\n      // primitives\n      return [''];\n    },\n    title(prop: string) {\n      return this.control.schema.properties?.[prop]?.title ?? startCase(prop);\n    },\n    resolveUiSchema(propName: string) {\n      return this.control.schema.properties\n        ? this.controlWithoutLabel(`#/properties/${propName}`)\n        : this.controlWithoutLabel('#');\n    },\n    controlWithoutLabel(scope: string): ControlElement {\n      return { type: 'Control', scope: scope, label: false };\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, or(isObjectArrayControl, isPrimitiveArrayControl)),\n};\n</script>\n\n<style scoped>\n.fixed-cell {\n  width: 150px;\n  height: 50px;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n  text-align: center;\n}\n\n.fixed-cell-small {\n  width: 50px;\n  height: 50px;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n  text-align: center;\n}\n\n.array-container tbody tr td {\n  border-bottom: none !important;\n}\n\n.array-container tbody tr td .container {\n  padding: 0;\n  margin: 0;\n}\n</style>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  and,\n  ControlElement,\n  hasType,\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  mapDispatchToMultiEnumProps,\n  mapStateToMultiEnumControlProps,\n  rankWith,\n  schemaMatches,\n  schemaSubPathMatches,\n  uiTypeIs,\n  composePaths,\n} from '@jsonforms/core';\nimport { VCheckbox, VContainer, VRow, VCol } from 'vuetify/lib';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useControl,\n  ControlProps,\n} from '@jsonforms/vue2';\nimport { defineComponent } from '../vue';\nimport { useVuetifyBasicControl } from '../util';\n\n//TODO: move into JsonForm Vue project under src/components/jsonFormsCompositions.ts\nconst useJsonFormsMultiEnumControl = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToMultiEnumControlProps,\n    mapDispatchToMultiEnumProps\n  );\n};\n\nconst controlRenderer = defineComponent({\n  name: 'enum-array-renderer',\n  components: {\n    DispatchRenderer,\n    VCheckbox,\n    VContainer,\n    VRow,\n    VCol,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyBasicControl(useJsonFormsMultiEnumControl(props));\n  },\n  methods: {\n    dataHasEnum(value: any) {\n      return !!this.control.data?.includes(value);\n    },\n    composePaths,\n    toggle(value: any, add: boolean) {\n      if (add) {\n        this.addItem(this.control.path, value);\n      } else {\n        // mistyped in core\n        this.removeItem?.(this.control.path, value);\n      }\n    },\n  },\n});\n\nexport default controlRenderer;\n\nconst hasOneOfItems = (schema: JsonSchema): boolean =>\n  schema.oneOf !== undefined &&\n  schema.oneOf.length > 0 &&\n  (schema.oneOf as JsonSchema[]).every((entry: JsonSchema) => {\n    return entry.const !== undefined;\n  });\n\nconst hasEnumItems = (schema: JsonSchema): boolean =>\n  schema.type === 'string' && schema.enum !== undefined;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(\n    5,\n    and(\n      uiTypeIs('Control'),\n      and(\n        schemaMatches(\n          (schema) =>\n            hasType(schema, 'array') &&\n            !Array.isArray(schema.items) &&\n            schema.uniqueItems === true\n        ),\n        schemaSubPathMatches('items', (schema) => {\n          return hasOneOfItems(schema) || hasEnumItems(schema);\n        })\n      )\n    )\n  ),\n};\n","<template>\n  <v-container fluid v-if=\"control.visible\">\n    <v-row>\n      <v-col v-for=\"(o, index) in control.options\" :key=\"o.value\">\n        <v-checkbox\n          :label=\"o.label\"\n          :input-value=\"dataHasEnum(o.value)\"\n          :id=\"control.id + `-input-${index}`\"\n          :path=\"composePaths(control.path, `${index}`)\"\n          :error-messages=\"control.errors\"\n          :disabled=\"!control.enabled\"\n          :indeterminate=\"control.data === undefined\"\n          @change=\"(value) => toggle(o.value, value)\"\n        ></v-checkbox>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport {\n  and,\n  ControlElement,\n  hasType,\n  JsonFormsRendererRegistryEntry,\n  JsonSchema,\n  mapDispatchToMultiEnumProps,\n  mapStateToMultiEnumControlProps,\n  rankWith,\n  schemaMatches,\n  schemaSubPathMatches,\n  uiTypeIs,\n  composePaths,\n} from '@jsonforms/core';\nimport { VCheckbox, VContainer, VRow, VCol } from 'vuetify/lib';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useControl,\n  ControlProps,\n} from '@jsonforms/vue2';\nimport { defineComponent } from '../vue';\nimport { useVuetifyBasicControl } from '../util';\n\n//TODO: move into JsonForm Vue project under src/components/jsonFormsCompositions.ts\nconst useJsonFormsMultiEnumControl = (props: ControlProps) => {\n  return useControl(\n    props,\n    mapStateToMultiEnumControlProps,\n    mapDispatchToMultiEnumProps\n  );\n};\n\nconst controlRenderer = defineComponent({\n  name: 'enum-array-renderer',\n  components: {\n    DispatchRenderer,\n    VCheckbox,\n    VContainer,\n    VRow,\n    VCol,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyBasicControl(useJsonFormsMultiEnumControl(props));\n  },\n  methods: {\n    dataHasEnum(value: any) {\n      return !!this.control.data?.includes(value);\n    },\n    composePaths,\n    toggle(value: any, add: boolean) {\n      if (add) {\n        this.addItem(this.control.path, value);\n      } else {\n        // mistyped in core\n        this.removeItem?.(this.control.path, value);\n      }\n    },\n  },\n});\n\nexport default controlRenderer;\n\nconst hasOneOfItems = (schema: JsonSchema): boolean =>\n  schema.oneOf !== undefined &&\n  schema.oneOf.length > 0 &&\n  (schema.oneOf as JsonSchema[]).every((entry: JsonSchema) => {\n    return entry.const !== undefined;\n  });\n\nconst hasEnumItems = (schema: JsonSchema): boolean =>\n  schema.type === 'string' && schema.enum !== undefined;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(\n    5,\n    and(\n      uiTypeIs('Control'),\n      and(\n        schemaMatches(\n          (schema) =>\n            hasType(schema, 'array') &&\n            !Array.isArray(schema.items) &&\n            schema.uniqueItems === true\n        ),\n        schemaSubPathMatches('items', (schema) => {\n          return hasOneOfItems(schema) || hasEnumItems(schema);\n        })\n      )\n    )\n  ),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  findUISchema,\n  GroupLayout,\n  isObjectControl,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  UISchemaElement,\n} from '@jsonforms/core';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsControlWithDetail,\n} from '@jsonforms/vue2';\nimport { defineComponent } from '../vue';\nimport { useVuetifyControl } from '../util';\n\nconst controlRenderer = defineComponent({\n  name: 'object-renderer',\n  components: {\n    DispatchRenderer,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControlWithDetail(props));\n  },\n  computed: {\n    detailUiSchema(): UISchemaElement {\n      const result = findUISchema(\n        this.control.uischemas,\n        this.control.schema,\n        this.control.uischema.scope,\n        this.control.path,\n        'Group',\n        this.control.uischema,\n        this.control.rootSchema\n      );\n\n      if (isEmpty(this.control.path)) {\n        result.type = 'VerticalLayout';\n      } else {\n        (result as GroupLayout).label = this.control.label;\n      }\n\n      return result;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isObjectControl),\n};\n","<template>\n  <div v-if=\"control.visible\">\n    <dispatch-renderer\n      :visible=\"control.visible\"\n      :enabled=\"control.enabled\"\n      :schema=\"control.schema\"\n      :uischema=\"detailUiSchema\"\n      :path=\"control.path\"\n      :renderers=\"control.renderers\"\n      :cells=\"control.cells\"\n    />\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  findUISchema,\n  GroupLayout,\n  isObjectControl,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  UISchemaElement,\n} from '@jsonforms/core';\nimport isEmpty from 'lodash/isEmpty';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsControlWithDetail,\n} from '@jsonforms/vue2';\nimport { defineComponent } from '../vue';\nimport { useVuetifyControl } from '../util';\n\nconst controlRenderer = defineComponent({\n  name: 'object-renderer',\n  components: {\n    DispatchRenderer,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControlWithDetail(props));\n  },\n  computed: {\n    detailUiSchema(): UISchemaElement {\n      const result = findUISchema(\n        this.control.uischemas,\n        this.control.schema,\n        this.control.uischema.scope,\n        this.control.path,\n        'Group',\n        this.control.uischema,\n        this.control.rootSchema\n      );\n\n      if (isEmpty(this.control.path)) {\n        result.type = 'VerticalLayout';\n      } else {\n        (result as GroupLayout).label = this.control.label;\n      }\n\n      return result;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isObjectControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  createCombinatorRenderInfos,\n  isOneOfControl,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  createDefaultValue,\n  resolveSubSchemas,\n  JsonFormsSubStates,\n  isInherentlyEnabled,\n  getConfig,\n  getSchema,\n  getData,\n  ControlProps,\n  JsonSchema,\n  CombinatorSubSchemaRenderInfo,\n} from '@jsonforms/core';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsOneOfControl,\n} from '@jsonforms/vue2';\nimport {\n  VDialog,\n  VCard,\n  VCardTitle,\n  VCardText,\n  VCardActions,\n  VSpacer,\n  VBtn,\n  VTabs,\n  VTab,\n  VTabsItems,\n  VTabItem,\n} from 'vuetify/lib';\nimport { computed, defineComponent, inject, ref } from '../vue';\nimport { useVuetifyControl } from '../util';\nimport { CombinatorProperties } from './components';\nimport isEmpty from 'lodash/isEmpty';\nimport Vue from 'vue';\n\n// TODO: currently mapStateToOneOfProps in core does not provide control enabled property\n// currently used in handleTabChange when switching to the next tab and data needs to be cleared but no data changed should happend\n// for example when the JsonForm is in read only state no data should be modified\nconst isControlEnabled = (\n  ownProps: ControlProps,\n  jsonforms: JsonFormsSubStates\n): boolean => {\n  const state = { jsonforms };\n  const config = getConfig(state);\n  const rootData = getData(state);\n  const { uischema } = ownProps;\n\n  const rootSchema = getSchema(state);\n\n  return isInherentlyEnabled(\n    state,\n    ownProps,\n    uischema,\n    ownProps.schema || rootSchema,\n    rootData,\n    config\n  );\n};\n\nconst controlRenderer = defineComponent({\n  name: 'one-of-renderer',\n  components: {\n    DispatchRenderer,\n    CombinatorProperties,\n    VDialog,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardActions,\n    VSpacer,\n    VBtn,\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const input = useJsonFormsOneOfControl(props);\n    const control = (input.control as any).value as typeof input.control;\n\n    const selectedIndex = ref(control.indexOfFittingSchema || 0);\n    const tabIndex = ref(selectedIndex.value);\n    const newSelectedIndex = ref(0);\n    const dialog = ref(false);\n\n    // TODO: once the enabled property is mapped by JsonForms core we can remove this jsonforms and controlEnabled variables\n    const jsonforms = inject<JsonFormsSubStates>('jsonforms');\n    if (!jsonforms) {\n      throw new Error(\n        \"'jsonforms' couldn't be injected. Are you within JSON Forms?\"\n      );\n    }\n    const controlEnabled = computed(() =>\n      isControlEnabled(props as ControlProps, jsonforms)\n    );\n\n    return {\n      ...useVuetifyControl(input),\n      selectedIndex,\n      tabIndex,\n      dialog,\n      newSelectedIndex,\n      controlEnabled,\n    };\n  },\n  computed: {\n    subSchema(): JsonSchema {\n      return resolveSubSchemas(\n        this.control.schema,\n        this.control.rootSchema,\n        'oneOf'\n      );\n    },\n    oneOfRenderInfos(): CombinatorSubSchemaRenderInfo[] {\n      return createCombinatorRenderInfos(\n        this.subSchema.oneOf!,\n        this.control.rootSchema,\n        'oneOf',\n        this.control.uischema,\n        this.control.path,\n        this.control.uischemas\n      );\n    },\n  },\n  methods: {\n    handleTabChange(): void {\n      // TODO change this.controlEnabled to this.control.enabled once this is suppored by JsonForms core - see above TODO comments\n      if (this.controlEnabled && !isEmpty(this.control.data)) {\n        this.dialog = true;\n        this.$nextTick(() => {\n          this.newSelectedIndex = this.tabIndex;\n          // revert the selection while the dialog is open\n          this.tabIndex = this.selectedIndex;\n        });\n        // this.$nextTick does not work so use setTimeout\n        setTimeout(() =>\n          ((this.$refs.confirm as Vue).$el as HTMLElement).focus()\n        );\n      } else {\n        this.$nextTick(() => {\n          this.selectedIndex = this.tabIndex;\n        });\n      }\n    },\n    confirm(_event: Event): void {\n      this.openNewTab();\n      this.dialog = false;\n    },\n    cancel(_event: Event): void {\n      this.newSelectedIndex = this.selectedIndex;\n      this.dialog = false;\n    },\n    openNewTab(): void {\n      this.handleChange(\n        this.path,\n        createDefaultValue(this.control.schema.oneOf![this.newSelectedIndex])\n      );\n      this.tabIndex = this.newSelectedIndex;\n      this.selectedIndex = this.newSelectedIndex;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, isOneOfControl),\n};\n","<template>\n  <div v-if=\"control.visible\">\n    <combinator-properties\n      :schema=\"subSchema\"\n      combinatorKeyword=\"oneOf\"\n      :path=\"path\"\n    />\n\n    <v-tabs v-model=\"tabIndex\">\n      <v-tab\n        @change=\"handleTabChange\"\n        v-for=\"(oneOfRenderInfo, oneOfIndex) in oneOfRenderInfos\"\n        :key=\"`${control.path}-${oneOfIndex}`\"\n      >\n        {{ oneOfRenderInfo.label }}\n      </v-tab>\n    </v-tabs>\n\n    <v-tabs-items v-model=\"selectedIndex\">\n      <v-tab-item\n        v-for=\"(oneOfRenderInfo, oneOfIndex) in oneOfRenderInfos\"\n        :key=\"`${control.path}-${oneOfIndex}`\"\n      >\n        <dispatch-renderer\n          v-if=\"selectedIndex === oneOfIndex\"\n          :schema=\"oneOfRenderInfo.schema\"\n          :uischema=\"oneOfRenderInfo.uischema\"\n          :path=\"control.path\"\n          :renderers=\"control.renderers\"\n          :cells=\"control.cells\"\n        />\n      </v-tab-item>\n    </v-tabs-items>\n\n    <v-dialog v-model=\"dialog\" persistent max-width=\"600\" @keydown.esc=\"cancel\">\n      <v-card>\n        <v-card-title class=\"text-h5\"> Clear form? </v-card-title>\n\n        <v-card-text>\n          Your data will be cleared if you navigate away from this tab. Do you\n          want to proceed?\n        </v-card-text>\n\n        <v-card-actions>\n          <v-spacer></v-spacer>\n\n          <v-btn text @click=\"cancel\"> No </v-btn>\n          <v-btn text ref=\"confirm\" @click=\"confirm\"> Yes </v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  createCombinatorRenderInfos,\n  isOneOfControl,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  createDefaultValue,\n  resolveSubSchemas,\n  JsonFormsSubStates,\n  isInherentlyEnabled,\n  getConfig,\n  getSchema,\n  getData,\n  ControlProps,\n  JsonSchema,\n  CombinatorSubSchemaRenderInfo,\n} from '@jsonforms/core';\nimport {\n  DispatchRenderer,\n  rendererProps,\n  RendererProps,\n  useJsonFormsOneOfControl,\n} from '@jsonforms/vue2';\nimport {\n  VDialog,\n  VCard,\n  VCardTitle,\n  VCardText,\n  VCardActions,\n  VSpacer,\n  VBtn,\n  VTabs,\n  VTab,\n  VTabsItems,\n  VTabItem,\n} from 'vuetify/lib';\nimport { computed, defineComponent, inject, ref } from '../vue';\nimport { useVuetifyControl } from '../util';\nimport { CombinatorProperties } from './components';\nimport isEmpty from 'lodash/isEmpty';\nimport Vue from 'vue';\n\n// TODO: currently mapStateToOneOfProps in core does not provide control enabled property\n// currently used in handleTabChange when switching to the next tab and data needs to be cleared but no data changed should happend\n// for example when the JsonForm is in read only state no data should be modified\nconst isControlEnabled = (\n  ownProps: ControlProps,\n  jsonforms: JsonFormsSubStates\n): boolean => {\n  const state = { jsonforms };\n  const config = getConfig(state);\n  const rootData = getData(state);\n  const { uischema } = ownProps;\n\n  const rootSchema = getSchema(state);\n\n  return isInherentlyEnabled(\n    state,\n    ownProps,\n    uischema,\n    ownProps.schema || rootSchema,\n    rootData,\n    config\n  );\n};\n\nconst controlRenderer = defineComponent({\n  name: 'one-of-renderer',\n  components: {\n    DispatchRenderer,\n    CombinatorProperties,\n    VDialog,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VCardActions,\n    VSpacer,\n    VBtn,\n    VTabs,\n    VTab,\n    VTabsItems,\n    VTabItem,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const input = useJsonFormsOneOfControl(props);\n    const control = (input.control as any).value as typeof input.control;\n\n    const selectedIndex = ref(control.indexOfFittingSchema || 0);\n    const tabIndex = ref(selectedIndex.value);\n    const newSelectedIndex = ref(0);\n    const dialog = ref(false);\n\n    // TODO: once the enabled property is mapped by JsonForms core we can remove this jsonforms and controlEnabled variables\n    const jsonforms = inject<JsonFormsSubStates>('jsonforms');\n    if (!jsonforms) {\n      throw new Error(\n        \"'jsonforms' couldn't be injected. Are you within JSON Forms?\"\n      );\n    }\n    const controlEnabled = computed(() =>\n      isControlEnabled(props as ControlProps, jsonforms)\n    );\n\n    return {\n      ...useVuetifyControl(input),\n      selectedIndex,\n      tabIndex,\n      dialog,\n      newSelectedIndex,\n      controlEnabled,\n    };\n  },\n  computed: {\n    subSchema(): JsonSchema {\n      return resolveSubSchemas(\n        this.control.schema,\n        this.control.rootSchema,\n        'oneOf'\n      );\n    },\n    oneOfRenderInfos(): CombinatorSubSchemaRenderInfo[] {\n      return createCombinatorRenderInfos(\n        this.subSchema.oneOf!,\n        this.control.rootSchema,\n        'oneOf',\n        this.control.uischema,\n        this.control.path,\n        this.control.uischemas\n      );\n    },\n  },\n  methods: {\n    handleTabChange(): void {\n      // TODO change this.controlEnabled to this.control.enabled once this is suppored by JsonForms core - see above TODO comments\n      if (this.controlEnabled && !isEmpty(this.control.data)) {\n        this.dialog = true;\n        this.$nextTick(() => {\n          this.newSelectedIndex = this.tabIndex;\n          // revert the selection while the dialog is open\n          this.tabIndex = this.selectedIndex;\n        });\n        // this.$nextTick does not work so use setTimeout\n        setTimeout(() =>\n          ((this.$refs.confirm as Vue).$el as HTMLElement).focus()\n        );\n      } else {\n        this.$nextTick(() => {\n          this.selectedIndex = this.tabIndex;\n        });\n      }\n    },\n    confirm(_event: Event): void {\n      this.openNewTab();\n      this.dialog = false;\n    },\n    cancel(_event: Event): void {\n      this.newSelectedIndex = this.selectedIndex;\n      this.dialog = false;\n    },\n    openNewTab(): void {\n      this.handleChange(\n        this.path,\n        createDefaultValue(this.control.schema.oneOf![this.newSelectedIndex])\n      );\n      this.tabIndex = this.newSelectedIndex;\n      this.selectedIndex = this.newSelectedIndex;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, isOneOfControl),\n};\n</script>\n","export { default as AllOfRenderer } from './AllOfRenderer.vue';\nexport { default as AnyOfRenderer } from './AnyOfRenderer.vue';\nexport { default as ArrayControlRenderer } from './ArrayControlRenderer.vue';\nexport { default as EnumArrayRenderer } from './EnumArrayRenderer.vue';\nexport { default as ObjectRenderer } from './ObjectRenderer.vue';\nexport { default as OneOfRenderer } from './OneOfRenderer.vue';\n\nimport { entry as allOfRendererEntry } from './AllOfRenderer.vue';\nimport { entry as anyOfRendererEntry } from './AnyOfRenderer.vue';\nimport { entry as arrayControlRendererEntry } from './ArrayControlRenderer.vue';\nimport { entry as enumArrayRendererEntry } from './EnumArrayRenderer.vue';\nimport { entry as objectRendererEntry } from './ObjectRenderer.vue';\nimport { entry as oneOfRendererEntry } from './OneOfRenderer.vue';\n\nexport const complexRenderers = [\n  allOfRendererEntry,\n  anyOfRendererEntry,\n  arrayControlRendererEntry,\n  enumArrayRendererEntry,\n  objectRendererEntry,\n  oneOfRendererEntry,\n];\n","\n\n\n\n\n\n\nimport { defineComponent, CompType } from '../vue';\nimport { Styles } from '../styles';\n\nexport default defineComponent({\n  name: 'control-wrapper',\n  props: {\n    id: {\n      required: true as const,\n      type: String,\n    },\n    visible: {\n      required: false as const,\n      type: Boolean,\n      default: true,\n    },\n    styles: {\n      required: true,\n      type: Object as CompType<Styles, ObjectConstructor>,\n    },\n  },\n});\n","<template>\n  <div v-if=\"visible\" :class=\"styles.control.root\" :id=\"id\">\n    <slot></slot>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, CompType } from '../vue';\nimport { Styles } from '../styles';\n\nexport default defineComponent({\n  name: 'control-wrapper',\n  props: {\n    id: {\n      required: true as const,\n      type: String,\n    },\n    visible: {\n      required: false as const,\n      type: Boolean,\n      default: true,\n    },\n    styles: {\n      required: true,\n      type: Object as CompType<Styles, ObjectConstructor>,\n    },\n  },\n});\n</script>\n","export const DisabledIconFocus = {\n  componentUpdated(el: HTMLElement): void {\n    el.querySelectorAll('.v-input__icon button').forEach((x) =>\n      x.setAttribute('tabindex', '-1')\n    );\n  },\n};\n\nexport default DisabledIconFocus;\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  and,\n  uiTypeIs,\n  schemaMatches,\n  JsonSchema,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VCombobox } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'anyof-string-or-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VHover,\n    VCombobox,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    items(): string[] {\n      // made sure via the testers\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return findEnumSchema(this.control.schema.anyOf!)!.enum!;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nconst findEnumSchema = (schemas: JsonSchema[]) =>\n  schemas.find(\n    (s) => s.enum !== undefined && (s.type === 'string' || s.type === undefined)\n  );\nconst findTextSchema = (schemas: JsonSchema[]) =>\n  schemas.find((s) => s.type === 'string' && s.enum === undefined);\n\nconst hasEnumAndText = (schemas: JsonSchema[]): boolean => {\n  // idea: map to type,enum and check that all types are string and at least one item is of type enum,\n  const enumSchema = findEnumSchema(schemas);\n  const stringSchema = findTextSchema(schemas);\n  const remainingSchemas = schemas.filter(\n    (s) => s !== enumSchema || s !== stringSchema\n  );\n  const wrongType = remainingSchemas.find((s) => s.type && s.type !== 'string');\n  return !!enumSchema && !!stringSchema && !wrongType;\n};\nconst simpleAnyOf = and(\n  uiTypeIs('Control'),\n  schemaMatches(\n    (schema) => Array.isArray(schema.anyOf) && hasEnumAndText(schema.anyOf)\n  )\n);\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(5, simpleAnyOf),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-combobox\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :value=\"control.data\"\n        :maxlength=\"\n          appliedOptions.restrict ? control.schema.maxLength : undefined\n        \"\n        :counter=\"\n          control.schema.maxLength !== undefined\n            ? control.schema.maxLength\n            : undefined\n        \"\n        :items=\"items\"\n        :clearable=\"hover\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  and,\n  uiTypeIs,\n  schemaMatches,\n  JsonSchema,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VCombobox } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'anyof-string-or-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VHover,\n    VCombobox,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    items(): string[] {\n      // made sure via the testers\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return findEnumSchema(this.control.schema.anyOf!)!.enum!;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nconst findEnumSchema = (schemas: JsonSchema[]) =>\n  schemas.find(\n    (s) => s.enum !== undefined && (s.type === 'string' || s.type === undefined)\n  );\nconst findTextSchema = (schemas: JsonSchema[]) =>\n  schemas.find((s) => s.type === 'string' && s.enum === undefined);\n\nconst hasEnumAndText = (schemas: JsonSchema[]): boolean => {\n  // idea: map to type,enum and check that all types are string and at least one item is of type enum,\n  const enumSchema = findEnumSchema(schemas);\n  const stringSchema = findTextSchema(schemas);\n  const remainingSchemas = schemas.filter(\n    (s) => s !== enumSchema || s !== stringSchema\n  );\n  const wrongType = remainingSchemas.find((s) => s.type && s.type !== 'string');\n  return !!enumSchema && !!stringSchema && !wrongType;\n};\nconst simpleAnyOf = and(\n  uiTypeIs('Control'),\n  schemaMatches(\n    (schema) => Array.isArray(schema.anyOf) && hasEnumAndText(schema.anyOf)\n  )\n);\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(5, simpleAnyOf),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isBooleanControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VCheckbox } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'boolean-control-renderer',\n  components: {\n    VCheckbox,\n    ControlWrapper,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (newValue) => newValue || false\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isBooleanControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-checkbox\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :indeterminate=\"control.data === undefined\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isBooleanControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VCheckbox } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'boolean-control-renderer',\n  components: {\n    VCheckbox,\n    ControlWrapper,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (newValue) => newValue || false\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isBooleanControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isBooleanControl,\n  optionIs,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSwitch } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'boolean-toggle-control-renderer',\n  components: {\n    ControlWrapper,\n    VSwitch,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, and(isBooleanControl, optionIs('toggle', true))),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-switch\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isBooleanControl,\n  optionIs,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSwitch } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'boolean-toggle-control-renderer',\n  components: {\n    ControlWrapper,\n    VSwitch,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(3, and(isBooleanControl, optionIs('toggle', true))),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isDateControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'date-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isDateControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-text-field\n      type=\"date\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isDateControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'date-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isDateControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isDateTimeControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl, parseDateTime } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'datetime-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n  computed: {\n    dataTime: {\n      get(): string | null | undefined {\n        const datetimeLocalFormat = 'YYYY-MM-DDTHH:mm:ss.SSS';\n        const saveFormat = this.appliedOptions.dateTimeSaveFormat ?? undefined;\n        const value = this.control.data as string | undefined | null;\n\n        const dateTime = parseDateTime(value, saveFormat);\n        return dateTime ? dateTime.local().format(datetimeLocalFormat) : value;\n      },\n      set(value: string) {\n        const datetimeLocalFormats = [\n          'YYYY-MM-DDTHH:mm:ss.SSS',\n          'YYYY-MM-DDTHH:mm:ss',\n          'YYYY-MM-DDTHH:mm',\n        ];\n        const saveFormat =\n          this.appliedOptions.dateTimeSaveFormat ?? 'YYYY-MM-DDTHH:mm:ssZ';\n\n        const dateTime = parseDateTime(value, datetimeLocalFormats);\n        const result = dateTime ? dateTime.format(saveFormat) : value;\n\n        this.onChange(result);\n      },\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isDateTimeControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-text-field\n      type=\"datetime-local\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"dataTime\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isDateTimeControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl, parseDateTime } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'datetime-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n  computed: {\n    dataTime: {\n      get(): string | null | undefined {\n        const datetimeLocalFormat = 'YYYY-MM-DDTHH:mm:ss.SSS';\n        const saveFormat = this.appliedOptions.dateTimeSaveFormat ?? undefined;\n        const value = this.control.data as string | undefined | null;\n\n        const dateTime = parseDateTime(value, saveFormat);\n        return dateTime ? dateTime.local().format(datetimeLocalFormat) : value;\n      },\n      set(value: string) {\n        const datetimeLocalFormats = [\n          'YYYY-MM-DDTHH:mm:ss.SSS',\n          'YYYY-MM-DDTHH:mm:ss',\n          'YYYY-MM-DDTHH:mm',\n        ];\n        const saveFormat =\n          this.appliedOptions.dateTimeSaveFormat ?? 'YYYY-MM-DDTHH:mm:ssZ';\n\n        const dateTime = parseDateTime(value, datetimeLocalFormats);\n        const result = dateTime ? dateTime.format(saveFormat) : value;\n\n        this.onChange(result);\n      },\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isDateTimeControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isEnumControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-select\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"control.options\"\n        item-text=\"label\"\n        item-value=\"value\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isEnumControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isIntegerControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'integer-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => parseInt(value, 10) || undefined\n    );\n  },\n  computed: {\n    step(): number {\n      const options: any = this.appliedOptions;\n      return options.step ?? 1;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isIntegerControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-text-field\n      type=\"number\"\n      :step=\"step\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isIntegerControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'integer-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => parseInt(value, 10) || undefined\n    );\n  },\n  computed: {\n    step(): number {\n      const options: any = this.appliedOptions;\n      return options.step ?? 1;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isIntegerControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isStringControl,\n  isMultiLineControl,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VTextarea } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'multi-string-control-renderer',\n  components: {\n    ControlWrapper,\n    VHover,\n    VTextarea,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, and(isStringControl, isMultiLineControl)),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-textarea\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :value=\"control.data\"\n        :maxlength=\"\n          appliedOptions.restrict ? control.schema.maxLength : undefined\n        \"\n        :size=\"\n          appliedOptions.trim && control.schema.maxLength !== undefined\n            ? control.schema.maxLength\n            : undefined\n        \"\n        :clearable=\"hover\"\n        multi-line\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isStringControl,\n  isMultiLineControl,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VTextarea } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'multi-string-control-renderer',\n  components: {\n    ControlWrapper,\n    VHover,\n    VTextarea,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, and(isStringControl, isMultiLineControl)),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isNumberControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'number-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => parseFloat(value) || undefined\n    );\n  },\n  computed: {\n    step(): number {\n      const options: any = this.appliedOptions;\n      return options.step ?? 0.1;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isNumberControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-text-field\n      type=\"number\"\n      :step=\"step\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isNumberControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'number-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => parseFloat(value) || undefined\n    );\n  },\n  computed: {\n    step(): number {\n      const options: any = this.appliedOptions;\n      return options.step ?? 0.1;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isNumberControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isOneOfEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsOneOfEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'oneof-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsOneOfEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(5, isOneOfEnumControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-select\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"control.options\"\n        item-text=\"label\"\n        item-value=\"value\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isOneOfEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsOneOfEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\n\nconst controlRenderer = defineComponent({\n  name: 'oneof-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsOneOfEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(5, isOneOfEnumControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isOneOfEnumControl,\n  optionIs,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsOneOfEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VRadioGroup, VRadio, VLabel } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'oneof-radio-group-control-renderer',\n  components: {\n    ControlWrapper,\n    VRadioGroup,\n    VRadio,\n    VLabel,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsOneOfEnumControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(20, and(isOneOfEnumControl, optionIs('format', 'radio'))),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-label :for=\"control.id + '-input'\">{{ computedLabel }}</v-label>\n    <v-radio-group\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      row\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    >\n      <v-radio\n        v-for=\"o in control.options\"\n        :key=\"o.value\"\n        :label=\"o.label\"\n        :value=\"o.value\"\n      ></v-radio>\n    </v-radio-group>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isOneOfEnumControl,\n  optionIs,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsOneOfEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VRadioGroup, VRadio, VLabel } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'oneof-radio-group-control-renderer',\n  components: {\n    ControlWrapper,\n    VRadioGroup,\n    VRadio,\n    VLabel,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsOneOfEnumControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(20, and(isOneOfEnumControl, optionIs('format', 'radio'))),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isStringControl,\n  and,\n  formatIs,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'password-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const passwordVisible = ref(false);\n\n    return {\n      ...useVuetifyControl(\n        useJsonFormsControl(props),\n        (value) => value || undefined\n      ),\n      passwordVisible,\n    };\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, and(isStringControl, formatIs('password'))),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-text-field\n      :type=\"passwordVisible ? 'text' : 'password'\"\n      :append-icon=\"passwordVisible ? 'mdi-eye' : 'mdi-eye-off'\"\n      @click:append=\"() => (passwordVisible = !passwordVisible)\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      :maxlength=\"\n        appliedOptions.restrict ? control.schema.maxLength : undefined\n      \"\n      :size=\"\n        appliedOptions.trim && control.schema.maxLength !== undefined\n          ? control.schema.maxLength\n          : undefined\n      \"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isStringControl,\n  and,\n  formatIs,\n} from '@jsonforms/core';\nimport { defineComponent, ref } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'password-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    const passwordVisible = ref(false);\n\n    return {\n      ...useVuetifyControl(\n        useJsonFormsControl(props),\n        (value) => value || undefined\n      ),\n      passwordVisible,\n    };\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, and(isStringControl, formatIs('password'))),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isEnumControl,\n  optionIs,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VRadioGroup, VRadio, VLabel } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'radio-group-control-renderer',\n  components: {\n    ControlWrapper,\n    VRadioGroup,\n    VRadio,\n    VLabel,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsEnumControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(20, and(isEnumControl, optionIs('format', 'radio'))),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-label :for=\"control.id + '-input'\">{{ computedLabel }}</v-label>\n    <v-radio-group\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      row\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    >\n      <v-radio\n        v-for=\"o in control.options\"\n        :key=\"o.value\"\n        :label=\"o.label\"\n        :value=\"o.value\"\n      ></v-radio>\n    </v-radio-group>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isEnumControl,\n  optionIs,\n  and,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VRadioGroup, VRadio, VLabel } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'radio-group-control-renderer',\n  components: {\n    ControlWrapper,\n    VRadioGroup,\n    VRadio,\n    VLabel,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsEnumControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(20, and(isEnumControl, optionIs('format', 'radio'))),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isRangeControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSlider } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'slider-control-renderer',\n  components: {\n    ControlWrapper,\n    VSlider,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props), (value) =>\n      Number(value)\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(4, isRangeControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-slider\n      :step=\"control.schema.multipleOf || 1\"\n      :min=\"control.schema.minimum\"\n      :max=\"control.schema.maximum\"\n      :thumb-label=\"true\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isRangeControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSlider } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'slider-control-renderer',\n  components: {\n    ControlWrapper,\n    VSlider,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props), (value) =>\n      Number(value)\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(4, isRangeControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isStringControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VTextField, VCombobox } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\nimport isArray from 'lodash/isArray';\nimport every from 'lodash/every';\nimport isString from 'lodash/isString';\n\nconst controlRenderer = defineComponent({\n  name: 'string-control-renderer',\n  components: {\n    ControlWrapper,\n    VHover,\n    VTextField,\n    VCombobox,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    suggestions(): string[] | undefined {\n      const suggestions = this.control.uischema.options?.suggestion;\n\n      if (\n        suggestions === undefined ||\n        !isArray(suggestions) ||\n        !every(suggestions, isString)\n      ) {\n        // check for incorrect data\n        return undefined;\n      }\n      return suggestions;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isStringControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-combobox\n        v-if=\"suggestions !== undefined\"\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :maxlength=\"\n          appliedOptions.restrict ? control.schema.maxLength : undefined\n        \"\n        :counter=\"\n          control.schema.maxLength !== undefined\n            ? control.schema.maxLength\n            : undefined\n        \"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"suggestions\"\n        hide-no-data\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n      <v-text-field\n        v-else\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :value=\"control.data\"\n        :maxlength=\"\n          appliedOptions.restrict ? control.schema.maxLength : undefined\n        \"\n        :counter=\"\n          control.schema.maxLength !== undefined\n            ? control.schema.maxLength\n            : undefined\n        \"\n        :clearable=\"hover\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isStringControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VTextField, VCombobox } from 'vuetify/lib';\nimport { DisabledIconFocus } from './directives';\nimport isArray from 'lodash/isArray';\nimport every from 'lodash/every';\nimport isString from 'lodash/isString';\n\nconst controlRenderer = defineComponent({\n  name: 'string-control-renderer',\n  components: {\n    ControlWrapper,\n    VHover,\n    VTextField,\n    VCombobox,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    suggestions(): string[] | undefined {\n      const suggestions = this.control.uischema.options?.suggestion;\n\n      if (\n        suggestions === undefined ||\n        !isArray(suggestions) ||\n        !every(suggestions, isString)\n      ) {\n        // check for incorrect data\n        return undefined;\n      }\n      return suggestions;\n    },\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, isStringControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isTimeControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'time-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isTimeControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-text-field\n      type=\"time\"\n      :id=\"control.id + '-input'\"\n      :class=\"styles.control.input\"\n      :disabled=\"!control.enabled\"\n      :autofocus=\"appliedOptions.focus\"\n      :placeholder=\"appliedOptions.placeholder\"\n      :label=\"computedLabel\"\n      :hint=\"control.description\"\n      :persistent-hint=\"persistentHint()\"\n      :required=\"control.required\"\n      :error-messages=\"control.errors\"\n      :value=\"control.data\"\n      @change=\"onChange\"\n      @focus=\"isFocused = true\"\n      @blur=\"isFocused = false\"\n    />\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isTimeControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from './ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VTextField } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'time-control-renderer',\n  components: {\n    ControlWrapper,\n    VTextField,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(useJsonFormsControl(props));\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(2, isTimeControl),\n};\n</script>\n","export { default as AnyOfStringOrEnumControlRenderer } from './AnyOfStringOrEnumControlRenderer.vue';\nexport { default as BooleanControlRenderer } from './BooleanControlRenderer.vue';\nexport { default as BooleanToggleControlRenderer } from './BooleanToggleControlRenderer.vue';\nexport { default as ControlWrapper } from './ControlWrapper.vue';\nexport { default as DateControlRenderer } from './DateControlRenderer.vue';\nexport { default as DateTimeControlRenderer } from './DateTimeControlRenderer.vue';\nexport { default as EnumControlRenderer } from './EnumControlRenderer.vue';\nexport { default as IntegerControlRenderer } from './IntegerControlRenderer.vue';\nexport { default as MultiStringControlRenderer } from './MultiStringControlRenderer.vue';\nexport { default as NumberControlRenderer } from './NumberControlRenderer.vue';\nexport { default as OneOfEnumControlRenderer } from './OneOfEnumControlRenderer.vue';\nexport { default as OneOfRadioGroupControlRenderer } from './OneOfRadioGroupControlRenderer.vue';\nexport { default as PasswordControlRenderer } from './PasswordControlRenderer.vue';\nexport { default as RadioGroupControlRenderer } from './RadioGroupControlRenderer.vue';\nexport { default as SliderControlRenderer } from './SliderControlRenderer.vue';\nexport { default as StringControlRenderer } from './StringControlRenderer.vue';\nexport { default as TimeControlRenderer } from './TimeControlRenderer.vue';\n\nimport { entry as anyOfStringOrEnumControlRendererEntry } from './AnyOfStringOrEnumControlRenderer.vue';\nimport { entry as booleanControlRendererEntry } from './BooleanControlRenderer.vue';\nimport { entry as booleanToggleControlRendererEntry } from './BooleanToggleControlRenderer.vue';\nimport { entry as dateControlRendererEntry } from './DateControlRenderer.vue';\nimport { entry as dateTimeControlRendererEntry } from './DateTimeControlRenderer.vue';\nimport { entry as enumControlRendererEntry } from './EnumControlRenderer.vue';\nimport { entry as integerControlRendererEntry } from './IntegerControlRenderer.vue';\nimport { entry as multiStringControlRendererEntry } from './MultiStringControlRenderer.vue';\nimport { entry as numberControlRendererEntry } from './NumberControlRenderer.vue';\nimport { entry as oneOfEnumControlRendererEntry } from './OneOfEnumControlRenderer.vue';\nimport { entry as oneOfRadioGroupControlRendererEntry } from './OneOfRadioGroupControlRenderer.vue';\nimport { entry as passwordControlRendererEntry } from './PasswordControlRenderer.vue';\nimport { entry as radioGroupControlRendererEntry } from './RadioGroupControlRenderer.vue';\nimport { entry as sliderControlRendererEntry } from './SliderControlRenderer.vue';\nimport { entry as stringControlRendererEntry } from './StringControlRenderer.vue';\nimport { entry as timeControlRendererEntry } from './TimeControlRenderer.vue';\n\nexport const controlRenderers = [\n  anyOfStringOrEnumControlRendererEntry,\n  booleanControlRendererEntry,\n  booleanToggleControlRendererEntry,\n  dateControlRendererEntry,\n  dateTimeControlRendererEntry,\n  enumControlRendererEntry,\n  integerControlRendererEntry,\n  multiStringControlRendererEntry,\n  numberControlRendererEntry,\n  oneOfEnumControlRendererEntry,\n  oneOfRadioGroupControlRendererEntry,\n  passwordControlRendererEntry,\n  radioGroupControlRendererEntry,\n  sliderControlRendererEntry,\n  stringControlRendererEntry,\n  timeControlRendererEntry,\n];\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from '../controls/ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover, VAutocomplete } from 'vuetify/lib';\nimport { DisabledIconFocus } from '../controls/directives';\n\nconst controlRenderer = defineComponent({\n  name: 'autocomplete-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VAutocomplete,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(10, isEnumControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-select\n        v-if=\"appliedOptions.autocomplete === false\"\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"control.options\"\n        item-text=\"label\"\n        item-value=\"value\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n      <v-autocomplete\n        v-else\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"control.options\"\n        item-text=\"label\"\n        item-value=\"value\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from '../controls/ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover, VAutocomplete } from 'vuetify/lib';\nimport { DisabledIconFocus } from '../controls/directives';\n\nconst controlRenderer = defineComponent({\n  name: 'autocomplete-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VAutocomplete,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(10, isEnumControl),\n};\n</script>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isOneOfEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsOneOfEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from '../controls/ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover, VAutocomplete } from 'vuetify/lib';\nimport { DisabledIconFocus } from '../controls/directives';\n\nconst controlRenderer = defineComponent({\n  name: 'autocomplete-oneof-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VAutocomplete,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsOneOfEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(10, isOneOfEnumControl),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-select\n        v-if=\"appliedOptions.autocomplete === false\"\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"control.options\"\n        item-text=\"label\"\n        item-value=\"value\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n      <v-autocomplete\n        v-else\n        v-disabled-icon-focus\n        :id=\"control.id + '-input'\"\n        :class=\"styles.control.input\"\n        :disabled=\"!control.enabled\"\n        :autofocus=\"appliedOptions.focus\"\n        :placeholder=\"appliedOptions.placeholder\"\n        :label=\"computedLabel\"\n        :hint=\"control.description\"\n        :persistent-hint=\"persistentHint()\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n        :clearable=\"hover\"\n        :value=\"control.data\"\n        :items=\"control.options\"\n        item-text=\"label\"\n        item-value=\"value\"\n        @change=\"onChange\"\n        @focus=\"isFocused = true\"\n        @blur=\"isFocused = false\"\n      />\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  JsonFormsRendererRegistryEntry,\n  rankWith,\n  isOneOfEnumControl,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  useJsonFormsOneOfEnumControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { default as ControlWrapper } from '../controls/ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VSelect, VHover, VAutocomplete } from 'vuetify/lib';\nimport { DisabledIconFocus } from '../controls/directives';\n\nconst controlRenderer = defineComponent({\n  name: 'autocomplete-oneof-enum-control-renderer',\n  components: {\n    ControlWrapper,\n    VSelect,\n    VAutocomplete,\n    VHover,\n  },\n  directives: {\n    DisabledIconFocus,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsOneOfEnumControl(props),\n      (value) => value || undefined\n    );\n  },\n});\n\nexport default controlRenderer;\n\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(10, isOneOfEnumControl),\n};\n</script>\n","export { default as AutocompleteEnumControlRenderer } from './AutocompleteEnumControlRenderer.vue';\nexport { default as AutocompleteOneOfEnumControlRenderer } from './AutocompleteOneOfEnumControlRenderer.vue';\n\nimport { entry as autocompleteEnumControlRendererEntry } from './AutocompleteEnumControlRenderer.vue';\nimport { entry as autocompleteOneOfEnumControlRendererEntry } from './AutocompleteOneOfEnumControlRenderer.vue';\n\nexport const extendedRenderers = [\n  autocompleteEnumControlRendererEntry,\n  autocompleteOneOfEnumControlRendererEntry,\n];\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  rankWith,\n  uiTypeIs,\n  JsonFormsRendererRegistryEntry,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  RendererProps,\n  useJsonFormsControl,\n} from '@jsonforms/vue2';\n\nimport { default as ControlWrapper } from '../controls/ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VAutocomplete } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'suggest-control-renderer',\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  data: () => ({\n    descriptionLimit: 60,\n    entries: [],\n    isLoading: false,\n    model: null,\n    search: null,\n  }),\n\n  components: {\n    ControlWrapper,\n    VAutocomplete,\n    VHover,\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    items(): any {\n      return this.entries.map((entry: any) => {\n        const Description =\n          entry.Description.length > this.descriptionLimit\n            ? entry.Description.slice(0, this.descriptionLimit) + '...'\n            : entry.Description;\n        return Object.assign({}, entry, { Description });\n      });\n    },\n  },\n  methods: {\n    changeHandler(value: Array<any>): any {\n      console.log('changeHandler');\n      console.log(value);\n    },\n  },\n  watch: {\n    search() {\n      // Items have already been loaded\n      // if (this.items.length > 0) return;\n      // Items have already been requested\n      if (this.isLoading) return;\n      this.isLoading = true;\n      // Lazily load input items\n      // fetch('https://api.publicapis.org/entries')\n      fetch(this.appliedOptions.url)\n        .then((res) => res.json())\n        .then((res: any) => {\n          const { entries } = res;\n          this.entries = entries;\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        .finally(() => (this.isLoading = false));\n    },\n  },\n});\nexport default controlRenderer;\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, uiTypeIs('Suggest')),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-hover v-slot=\"{ hover }\">\n      <v-autocomplete\n        :value=\"control.data\"\n        :items=\"items\"\n        :loading=\"isLoading\"\n        :search-input.sync=\"search\"\n        hide-no-data\n        item-text=\"Description\"\n        item-value=\"API\"\n        :label=\"computedLabel\"\n        :placeholder=\"appliedOptions.placeholder\"\n        prepend-icon=\"mdi-database-search\"\n        return-object\n        :clearable=\"hover\"\n        @change=\"changeHandler\"\n      ></v-autocomplete>\n    </v-hover>\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  rankWith,\n  uiTypeIs,\n  JsonFormsRendererRegistryEntry,\n} from '@jsonforms/core';\nimport { defineComponent } from '../vue';\nimport {\n  rendererProps,\n  RendererProps,\n  useJsonFormsControl,\n} from '@jsonforms/vue2';\n\nimport { default as ControlWrapper } from '../controls/ControlWrapper.vue';\nimport { useVuetifyControl } from '../util';\nimport { VHover, VAutocomplete } from 'vuetify/lib';\n\nconst controlRenderer = defineComponent({\n  name: 'suggest-control-renderer',\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  data: () => ({\n    descriptionLimit: 60,\n    entries: [],\n    isLoading: false,\n    model: null,\n    search: null,\n  }),\n\n  components: {\n    ControlWrapper,\n    VAutocomplete,\n    VHover,\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    items(): any {\n      return this.entries.map((entry: any) => {\n        const Description =\n          entry.Description.length > this.descriptionLimit\n            ? entry.Description.slice(0, this.descriptionLimit) + '...'\n            : entry.Description;\n        return Object.assign({}, entry, { Description });\n      });\n    },\n  },\n  methods: {\n    changeHandler(value: Array<any>): any {\n      console.log('changeHandler');\n      console.log(value);\n    },\n  },\n  watch: {\n    search() {\n      // Items have already been loaded\n      // if (this.items.length > 0) return;\n      // Items have already been requested\n      if (this.isLoading) return;\n      this.isLoading = true;\n      // Lazily load input items\n      // fetch('https://api.publicapis.org/entries')\n      fetch(this.appliedOptions.url)\n        .then((res) => res.json())\n        .then((res: any) => {\n          const { entries } = res;\n          this.entries = entries;\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        .finally(() => (this.isLoading = false));\n    },\n  },\n});\nexport default controlRenderer;\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(1, uiTypeIs('Suggest')),\n};\n</script>\n","export { default as SuggestControlRenderer } from './SuggestControlRenderer.vue';\n\nimport { entry as suggestControlRendererEntry } from './SuggestControlRenderer.vue';\n\nexport const dynaformRenderers = [suggestControlRendererEntry];\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  ControlElement,\n  rankWith,\n  JsonFormsRendererRegistryEntry,\n  and,\n  isObjectArrayWithNesting,\n  optionIs,\n} from '@jsonforms/core';\nimport { defineComponent } from '@vue/composition-api';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyControl } from '../util';\nimport { ControlWrapper } from '../controls';\nimport {\n  VCard,\n  VFileInput,\n  VListItem,\n  VListItemAvatar,\n  VIcon,\n  VListItemContent,\n  VListItemTitle,\n  VListItemSubtitle,\n  VProgressLinear,\n  VListItemAction,\n  VBtn,\n} from 'vuetify/lib';\nconst controlRenderer = defineComponent({\n  name: 'multiple-file-control-renderer',\n  components: {\n    ControlWrapper,\n    VCard,\n    VFileInput,\n    VListItem,\n    VListItemAvatar,\n    VIcon,\n    VListItemContent,\n    VListItemTitle,\n    VListItemSubtitle,\n    VProgressLinear,\n    VListItemAction,\n    VBtn,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    files: {\n      get() {\n        return [];\n      },\n      set(files: Array<any>) {\n        const newFiles: Array<any> = files.map((file: any) => {\n          //TODO upload the file service\n          return {\n            name: file.name,\n            size: file.size,\n            mimetype: file.type,\n          };\n        });\n        this.onChange([\n          ...newFiles,\n          ...(this.control.data ? this.control.data : []),\n        ]);\n      },\n    },\n  },\n  methods: {\n    deleteFile(event: any, index: number) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.control.data.splice(index, 1);\n      this.onChange(this.control.data);\n    },\n    downloadFile(event: any) {\n      event.stopPropagation();\n      event.preventDefault();\n    },\n  },\n});\nexport default controlRenderer;\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(\n    6,\n    and(isObjectArrayWithNesting, optionIs('multipleFile', true))\n  ),\n};\n","<template>\n  <control-wrapper\n    v-bind=\"controlWrapper\"\n    :styles=\"styles\"\n    :isFocused=\"isFocused\"\n    :appliedOptions=\"appliedOptions\"\n  >\n    <v-card elevation=\"2\" outlined>\n      <v-file-input\n        v-model=\"files\"\n        :label=\"computedLabel\"\n        multiple\n        :placeholder=\"appliedOptions.placeholder\"\n        prepend-icon=\"mdi-paperclip\"\n        :clearable=\"false\"\n        :show-size=\"1000\"\n        :accept=\"appliedOptions.accept\"\n        :required=\"control.required\"\n        :error-messages=\"control.errors\"\n      >\n      </v-file-input>\n\n      <v-list-item v-for=\"(item, i) in control.data\" :key=\"i\">\n        <v-list-item-avatar>\n          <v-icon large> mdi-file-jpg-box </v-icon>\n        </v-list-item-avatar>\n\n        <v-list-item-content>\n          <v-list-item-title>{{ item.name }}</v-list-item-title>\n\n          <v-list-item-subtitle>\n            <v-progress-linear\n              color=\"light-green darken-4\"\n              height=\"10\"\n              value=\"70\"\n              striped\n            ></v-progress-linear>\n          </v-list-item-subtitle>\n        </v-list-item-content>\n        <v-list-item-action>\n          <v-btn icon @click=\"downloadFile($event, i)\" align=\"left\">\n            <v-icon color=\"grey lighten-1\">mdi-file-download</v-icon>\n          </v-btn>\n        </v-list-item-action>\n        <v-list-item-action>\n          <v-btn icon @click=\"deleteFile($event, i)\" align=\"right\">\n            <v-icon color=\"grey lighten-1\">mdi-delete</v-icon>\n          </v-btn>\n        </v-list-item-action>\n      </v-list-item>\n    </v-card>\n\n    <!-- </template> -->\n  </control-wrapper>\n</template>\n\n<script lang=\"ts\">\nimport {\n  ControlElement,\n  rankWith,\n  JsonFormsRendererRegistryEntry,\n  and,\n  isObjectArrayWithNesting,\n  optionIs,\n} from '@jsonforms/core';\nimport { defineComponent } from '@vue/composition-api';\nimport {\n  rendererProps,\n  useJsonFormsControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyControl } from '../util';\nimport { ControlWrapper } from '../controls';\nimport {\n  VCard,\n  VFileInput,\n  VListItem,\n  VListItemAvatar,\n  VIcon,\n  VListItemContent,\n  VListItemTitle,\n  VListItemSubtitle,\n  VProgressLinear,\n  VListItemAction,\n  VBtn,\n} from 'vuetify/lib';\nconst controlRenderer = defineComponent({\n  name: 'multiple-file-control-renderer',\n  components: {\n    ControlWrapper,\n    VCard,\n    VFileInput,\n    VListItem,\n    VListItemAvatar,\n    VIcon,\n    VListItemContent,\n    VListItemTitle,\n    VListItemSubtitle,\n    VProgressLinear,\n    VListItemAction,\n    VBtn,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return useVuetifyControl(\n      useJsonFormsControl(props),\n      (value) => value || undefined\n    );\n  },\n  computed: {\n    files: {\n      get() {\n        return [];\n      },\n      set(files: Array<any>) {\n        const newFiles: Array<any> = files.map((file: any) => {\n          //TODO upload the file service\n          return {\n            name: file.name,\n            size: file.size,\n            mimetype: file.type,\n          };\n        });\n        this.onChange([\n          ...newFiles,\n          ...(this.control.data ? this.control.data : []),\n        ]);\n      },\n    },\n  },\n  methods: {\n    deleteFile(event: any, index: number) {\n      event.stopPropagation();\n      event.preventDefault();\n      this.control.data.splice(index, 1);\n      this.onChange(this.control.data);\n    },\n    downloadFile(event: any) {\n      event.stopPropagation();\n      event.preventDefault();\n    },\n  },\n});\nexport default controlRenderer;\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(\n    6,\n    and(isObjectArrayWithNesting, optionIs('multipleFile', true))\n  ),\n};\n</script>\n","export { default as MultipleFileControlRenderer } from './MultipleFileControlRenderer.vue';\n\nimport { entry as multipleFileControlRendererEtry } from './MultipleFileControlRenderer.vue';\n\nexport const filesRenderers = [multipleFileControlRendererEtry];\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport {\n  isObjectArrayControl,\n  isPrimitiveArrayControl,\n  JsonFormsRendererRegistryEntry,\n  or,\n  rankWith,\n  composePaths,\n  createDefaultValue,\n  ControlElement,\n  JsonSchema,\n  Resolve,\n} from '@jsonforms/core';\nimport startCase from 'lodash/startCase';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchCell,\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsArrayControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VCard,\n  VCardTitle,\n  VCardText,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VSimpleTable,\n  VPagination,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\nimport { cloneDeep } from 'lodash';\nconst controlRenderer = defineComponent({\n  name: 'array-control-renderer',\n  components: {\n    DispatchCell,\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VIcon,\n    VBtn,\n    VSpacer,\n    VContainer,\n    ValidationIcon,\n    ValidationBadge,\n    VSimpleTable,\n    VPagination,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return {\n      ...useVuetifyArrayControl(useJsonFormsArrayControl(props)),\n      page: 1,\n    };\n  },\n  computed: {\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n    totalPages(): number {\n      return this.appliedOptions.pageSize\n        ? Math.ceil(this.control.data.length / this.appliedOptions.pageSize)\n        : 1;\n    },\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n    paginate(): Array<any> {\n      let size = this.appliedOptions.pageSize\n        ? this.appliedOptions.pageSize\n        : this.control.data.length;\n      let list = cloneDeep(this.control.data);\n      let temp = this.page;\n      if (this.page >= this.totalPages) {\n        temp -= 1;\n      }\n      var index = temp * size;\n      return list.slice(index, index + size);\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    getValidColumnProps(scopedSchema: JsonSchema) {\n      if (\n        scopedSchema.type === 'object' &&\n        typeof scopedSchema.properties === 'object'\n      ) {\n        return Object.keys(scopedSchema.properties).filter(\n          (prop) => scopedSchema.properties![prop].type !== 'array'\n        );\n      }\n      // primitives\n      return [''];\n    },\n    title(prop: string) {\n      return this.control.schema.properties?.[prop]?.title ?? startCase(prop);\n    },\n    resolveUiSchema(propName: string) {\n      return this.control.schema.properties\n        ? this.controlWithoutLabel(`#/properties/${propName}`)\n        : this.controlWithoutLabel('#');\n    },\n    controlWithoutLabel(scope: string): ControlElement {\n      return { type: 'Control', scope: scope, label: false };\n    },\n  },\n});\nexport default controlRenderer;\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(5, or(isObjectArrayControl, isPrimitiveArrayControl)),\n};\n","<template>\n  <v-card v-if=\"control.visible\" :class=\"styles.arrayList.root\" elevation=\"0\">\n    <v-card-title>\n      <v-toolbar flat :class=\"styles.arrayList.toolbar\">\n        <v-toolbar-title :class=\"styles.arrayList.label\">{{\n          computedLabel\n        }}</v-toolbar-title>\n        <validation-icon\n          v-if=\"control.childErrors.length > 0\"\n          :errors=\"control.childErrors\"\n        />\n        <v-spacer></v-spacer>\n\n        <v-tooltip bottom>\n          <template v-slot:activator=\"{ on: onTooltip }\">\n            <v-btn\n              fab\n              text\n              elevation=\"0\"\n              small\n              :aria-label=\"`Add to ${control.label}`\"\n              v-on=\"onTooltip\"\n              :class=\"styles.arrayList.addButton\"\n              :disabled=\"\n                !control.enabled ||\n                (appliedOptions.restrict &&\n                  arraySchema !== undefined &&\n                  arraySchema.maxItems !== undefined &&\n                  control.data.length >= arraySchema.maxItems)\n              \"\n              @click=\"addButtonClick\"\n            >\n              <v-icon>mdi-plus</v-icon>\n            </v-btn>\n          </template>\n          {{ `Add to ${control.label}` }}\n        </v-tooltip>\n      </v-toolbar>\n    </v-card-title>\n    <v-card-text>\n      <v-container justify-space-around align-content-center>\n        <v-row justify=\"center\">\n          <v-simple-table class=\"array-container flex\">\n            <thead v-if=\"control.schema.type === 'object'\">\n              <tr>\n                <th scope=\"col\"></th>\n                <th\n                  v-for=\"(prop, index) in getValidColumnProps(control.schema)\"\n                  :key=\"`${control.path}-header-${index}`\"\n                  scope=\"col\"\n                >\n                  {{ title(prop) }}\n                </th>\n                <th\n                  v-if=\"control.enabled\"\n                  :class=\"\n                    appliedOptions.showSortButtons\n                      ? 'fixed-cell'\n                      : 'fixed-cell-small'\n                  \"\n                  scope=\"col\"\n                ></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr\n                v-for=\"(element, index) in paginate\"\n                :key=\"`${control.path}-${page * (index + 1) - 1}`\"\n                :class=\"styles.arrayList.item\"\n              >\n                <td>\n                  {{ page * (index + 1) }}\n                </td>\n                <td\n                  v-for=\"propName in getValidColumnProps(control.schema)\"\n                  :key=\"\n                    composePaths(\n                      composePaths(control.path, `${page * (index + 1) - 1}`),\n                      propName\n                    )\n                  \"\n                >\n                  <dispatch-renderer\n                    :schema=\"control.schema\"\n                    :uischema=\"resolveUiSchema(propName)\"\n                    :path=\"\n                      composePaths(control.path, `${page * (index + 1) - 1}`)\n                    \"\n                    :enabled=\"control.enabled\"\n                    :renderers=\"control.renderers\"\n                    :cells=\"control.cells\"\n                  />\n                </td>\n                <td\n                  v-if=\"control.enabled\"\n                  :class=\"\n                    appliedOptions.showSortButtons\n                      ? 'fixed-cell'\n                      : 'fixed-cell-small'\n                  \"\n                >\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        v-if=\"appliedOptions.showSortButtons\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        aria-label=\"Move up\"\n                        :disabled=\"index <= 0 || !control.enabled\"\n                        :class=\"styles.arrayList.itemMoveUp\"\n                        @click.native=\"\n                          moveUpClick($event, page * (index + 1) - 1)\n                        \"\n                      >\n                        <v-icon class=\"notranslate\">mdi-arrow-up</v-icon>\n                      </v-btn>\n                    </template>\n                    Move Up\n                  </v-tooltip>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        v-if=\"appliedOptions.showSortButtons\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        aria-label=\"Move down\"\n                        :disabled=\"\n                          index >= control.data.length - 1 || !control.enabled\n                        \"\n                        :class=\"styles.arrayList.itemMoveDown\"\n                        @click.native=\"\n                          moveDownClick($event, page * (index + 1) - 1)\n                        \"\n                      >\n                        <v-icon class=\"notranslate\">mdi-arrow-down</v-icon>\n                      </v-btn>\n                    </template>\n                    Move Down\n                  </v-tooltip>\n                  <v-tooltip bottom>\n                    <template v-slot:activator=\"{ on: onTooltip }\">\n                      <v-btn\n                        v-on=\"onTooltip\"\n                        fab\n                        text\n                        elevation=\"0\"\n                        small\n                        aria-label=\"Delete\"\n                        :class=\"styles.arrayList.itemDelete\"\n                        :disabled=\"\n                          !control.enabled ||\n                          (appliedOptions.restrict &&\n                            arraySchema !== undefined &&\n                            arraySchema.minItems !== undefined &&\n                            control.data.length <= arraySchema.minItems)\n                        \"\n                        @click.native=\"\n                          removeItemsClick($event, [page * (index + 1) - 1])\n                        \"\n                      >\n                        <v-icon class=\"notranslate\">mdi-delete</v-icon>\n                      </v-btn>\n                    </template>\n                    Delete\n                  </v-tooltip>\n                </td>\n              </tr>\n            </tbody>\n          </v-simple-table>\n          <div class=\"text-center\">\n            <v-pagination\n              v-model=\"page\"\n              :length=\"totalPages || 10\"\n              prev-icon=\"mdi-menu-left\"\n              next-icon=\"mdi-menu-right\"\n            ></v-pagination>\n          </div>\n        </v-row>\n      </v-container>\n      <v-container v-if=\"noData\" :class=\"styles.arrayList.noData\">\n        No data\n      </v-container>\n    </v-card-text>\n  </v-card>\n</template>\n\n<script lang=\"ts\">\nimport {\n  isObjectArrayControl,\n  isPrimitiveArrayControl,\n  JsonFormsRendererRegistryEntry,\n  or,\n  rankWith,\n  composePaths,\n  createDefaultValue,\n  ControlElement,\n  JsonSchema,\n  Resolve,\n} from '@jsonforms/core';\nimport startCase from 'lodash/startCase';\nimport { defineComponent } from '../vue';\nimport {\n  DispatchCell,\n  DispatchRenderer,\n  rendererProps,\n  useJsonFormsArrayControl,\n  RendererProps,\n} from '@jsonforms/vue2';\nimport { useVuetifyArrayControl } from '../util';\nimport {\n  VCard,\n  VCardTitle,\n  VCardText,\n  VRow,\n  VCol,\n  VContainer,\n  VToolbar,\n  VToolbarTitle,\n  VTooltip,\n  VIcon,\n  VBtn,\n  VAvatar,\n  VSpacer,\n  VSimpleTable,\n  VPagination,\n} from 'vuetify/lib';\nimport { ValidationIcon, ValidationBadge } from '../controls/components/index';\nimport { cloneDeep } from 'lodash';\nconst controlRenderer = defineComponent({\n  name: 'array-control-renderer',\n  components: {\n    DispatchCell,\n    DispatchRenderer,\n    VCard,\n    VCardTitle,\n    VCardText,\n    VAvatar,\n    VRow,\n    VCol,\n    VToolbar,\n    VToolbarTitle,\n    VTooltip,\n    VIcon,\n    VBtn,\n    VSpacer,\n    VContainer,\n    ValidationIcon,\n    ValidationBadge,\n    VSimpleTable,\n    VPagination,\n  },\n  props: {\n    ...rendererProps<ControlElement>(),\n  },\n  setup(props: RendererProps<ControlElement>) {\n    return {\n      ...useVuetifyArrayControl(useJsonFormsArrayControl(props)),\n      page: 1,\n    };\n  },\n  computed: {\n    arraySchema(): JsonSchema | undefined {\n      return Resolve.schema(\n        this.control.rootSchema,\n        this.control.uischema.scope,\n        this.control.rootSchema\n      );\n    },\n    totalPages(): number {\n      return this.appliedOptions.pageSize\n        ? Math.ceil(this.control.data.length / this.appliedOptions.pageSize)\n        : 1;\n    },\n    noData(): boolean {\n      return !this.control.data || this.control.data.length === 0;\n    },\n    paginate(): Array<any> {\n      let size = this.appliedOptions.pageSize\n        ? this.appliedOptions.pageSize\n        : this.control.data.length;\n      let list = cloneDeep(this.control.data);\n      let temp = this.page;\n      if (this.page >= this.totalPages) {\n        temp -= 1;\n      }\n      var index = temp * size;\n      return list.slice(index, index + size);\n    },\n  },\n  methods: {\n    composePaths,\n    createDefaultValue,\n    addButtonClick() {\n      this.addItem(\n        this.control.path,\n        createDefaultValue(this.control.schema)\n      )();\n    },\n    moveUpClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveUp?.(this.control.path, toMove)();\n    },\n    moveDownClick(event: Event, toMove: number): void {\n      event.stopPropagation();\n      this.moveDown?.(this.control.path, toMove)();\n    },\n    removeItemsClick(event: Event, toDelete: number[]): void {\n      event.stopPropagation();\n      this.removeItems?.(this.control.path, toDelete)();\n    },\n    getValidColumnProps(scopedSchema: JsonSchema) {\n      if (\n        scopedSchema.type === 'object' &&\n        typeof scopedSchema.properties === 'object'\n      ) {\n        return Object.keys(scopedSchema.properties).filter(\n          (prop) => scopedSchema.properties![prop].type !== 'array'\n        );\n      }\n      // primitives\n      return [''];\n    },\n    title(prop: string) {\n      return this.control.schema.properties?.[prop]?.title ?? startCase(prop);\n    },\n    resolveUiSchema(propName: string) {\n      return this.control.schema.properties\n        ? this.controlWithoutLabel(`#/properties/${propName}`)\n        : this.controlWithoutLabel('#');\n    },\n    controlWithoutLabel(scope: string): ControlElement {\n      return { type: 'Control', scope: scope, label: false };\n    },\n  },\n});\nexport default controlRenderer;\nexport const entry: JsonFormsRendererRegistryEntry = {\n  renderer: controlRenderer,\n  tester: rankWith(5, or(isObjectArrayControl, isPrimitiveArrayControl)),\n};\n</script>\n\n<style scoped>\n.fixed-cell {\n  width: 150px;\n  height: 50px;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n  text-align: center;\n}\n.fixed-cell-small {\n  width: 50px;\n  height: 50px;\n  padding-left: 0 !important;\n  padding-right: 0 !important;\n  text-align: center;\n}\n.array-container tbody tr td {\n  border-bottom: none !important;\n}\n.array-container tbody tr td .container {\n  padding: 0;\n  margin: 0;\n}\n</style>\n","export { default as GridControlRenderer } from './GridControlRenderer.vue';\n\nimport { entry as gridControlRendererEntry } from './GridControlRenderer.vue';\n\nexport const gridRenderers = [gridControlRendererEntry];\n","import { additionalRenderers } from './additional';\nimport { arrayRenderers } from './array';\nimport { complexRenderers } from './complex';\nimport { controlRenderers } from './controls';\nimport { extendedRenderers } from './extended';\nimport { layoutRenderers } from './layouts';\nimport { dynaformRenderers } from './dynaform';\nimport { filesRenderers } from './files';\nimport { gridRenderers } from './grids';\n\nexport const vuetifyRenderers = [\n  ...additionalRenderers,\n  ...arrayRenderers,\n  ...complexRenderers,\n  ...controlRenderers,\n  ...layoutRenderers,\n];\n\nexport const extendedVuetifyRenderers = [\n  ...extendedRenderers,\n  ...vuetifyRenderers,\n  ...dynaformRenderers,\n  ...filesRenderers,\n  ...gridRenderers,\n];\n"]}]}