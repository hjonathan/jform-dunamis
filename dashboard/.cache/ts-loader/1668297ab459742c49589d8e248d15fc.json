{"remainingRequest":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/ts-loader/index.js??ref--14-2!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/views/example/Example.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/views/example/Example.vue","mtime":1645654908692},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js","mtime":1645670388105},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/ts-loader/index.js","mtime":1645670388499},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js","mtime":1645670389517}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/views/example/Example.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { examples } from '@/examples';\nimport { find } from 'lodash';\nimport { sync } from 'vuex-pathify';\n\nimport { mergeStyles, defaultStyles } from '@jsonforms/vue2-vuetify';\nimport { JsonFormsChangeEvent } from '@jsonforms/vue2';\nimport MonacoEditor from '@/components/MonacoEditor.vue';\nimport DemoForm from '@/components/DemoForm.vue';\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport {\n  configureJsonSchemaValidation,\n  configureUISchemaValidation,\n  configureDataValidation,\n  EditorApi,\n  getMonacoModelForUri,\n} from '@/core/jsonSchemaValidation';\nimport { Example } from '@/core/types';\n\nconst myStyles = mergeStyles(defaultStyles, {\n  control: { root: 'my-control' },\n});\n\nexport default {\n  name: 'ExampleView',\n  components: {\n    MonacoEditor,\n    DemoForm,\n  },\n  data() {\n    return {\n      activeTab: 0,\n      examples,\n      example: undefined,\n      snackbar: false,\n      snackbarText: '',\n      snackbarTimeout: 3000,\n    };\n  },\n  computed: {\n    renderers: sync('app/jsonforms@renderers'),\n    cells: sync('app/jsonforms@cells'),\n    config: sync('app/jsonforms@config'),\n    validationMode: sync('app/jsonforms@validationMode'),\n    ajv: sync('app/jsonforms@ajv'),\n    readonly: sync('app/jsonforms@readonly'),\n    monacoSchemaModel: sync('app/monaco@schemaModel'),\n    monacoUiSchemaModel: sync('app/monaco@uischemaModel'),\n    monacoDataModel: sync('app/monaco@dataModel'),\n    locale: sync('app/jsonforms@locale'),\n  },\n  mounted() {\n    this.setExample(\n      find(this.examples, (example) => example.id === this.$route.params.id)\n    );\n  },\n  watch: {\n    '$route.params.id'(id) {\n      this.setExample(find(this.examples, (example) => example.id === id));\n    },\n  },\n  methods: {\n    onChange(event: JsonFormsChangeEvent) {\n      this.$store.set(\n        'app/monaco@dataModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toDataUri(this.example.id)),\n          event.data ? JSON.stringify(event.data, null, 2) : ''\n        )\n      );\n    },\n    setExample(example: Example): void {\n      if (example) {\n        this.example = {\n          id: example.id,\n          title: example.title,\n          input: {\n            schema: example.input.schema,\n            uischema: example.input.uischema,\n            data: example.input.data,\n          },\n        };\n        this.updateMonacoModels(this.example);\n      }\n    },\n    reloadMonacoSchema() {\n      const example = find(\n        this.examples,\n        (example) => example.id === this.$route.params.id\n      );\n\n      if (example) {\n        this.$store.set(\n          'app/monaco@schemaModel',\n          getMonacoModelForUri(\n            monaco.Uri.parse(this.toSchemaUri(example.id)),\n            example.input.schema\n              ? JSON.stringify(example.input.schema, null, 2)\n              : ''\n          )\n        );\n        this.toast('Original example schema loaded. Apply it to take effect.');\n      }\n    },\n    saveMonacoSchema() {\n      const model = this.monacoSchemaModel as monaco.editor.ITextModel;\n      const example = this.example;\n\n      if (model && example) {\n        // TODO: is there a better way how to get errors including the error message from monaco editor ?\n        const hasError =\n          model\n            .getAllDecorations()\n            .filter((d) => d.options.className === 'squiggly-error')\n            .map((e) => e).length > 0;\n\n        const modelValue = model.getValue();\n        if (modelValue && !hasError) {\n          const newJson: Record<string, any> = JSON.parse(modelValue);\n          example.input.schema = newJson;\n\n          this.toast('New schema applied');\n        } else if (hasError) {\n          this.toast('Error: schema is invalid');\n        }\n      }\n    },\n    reloadMonacoUiSchema() {\n      const example = find(\n        this.examples,\n        (example: Example) => example.id === this.$route.params.id\n      );\n\n      if (example) {\n        this.$store.set(\n          'app/monaco@uischemaModel',\n          getMonacoModelForUri(\n            monaco.Uri.parse(this.toUiSchemaUri(example.id)),\n            example.input.uischema\n              ? JSON.stringify(example.input.uischema, null, 2)\n              : ''\n          )\n        );\n        this.toast(\n          'Original example UI schema loaded. Apply it to take effect.'\n        );\n      }\n    },\n    saveMonacoUiSchema() {\n      const model = this.monacoUiSchemaModel as monaco.editor.ITextModel;\n      const example = this.example;\n\n      if (model && example) {\n        // TODO: is there a better way how to get errors including the error message from monaco editor ?\n        const hasError =\n          model\n            .getAllDecorations()\n            .filter((d) => d.options.className === 'squiggly-error')\n            .map((e) => e).length > 0;\n\n        const modelValue = model.getValue();\n        if (modelValue && !hasError) {\n          const newJson: Record<string, any> = JSON.parse(modelValue);\n          example.input.uischema = newJson;\n          this.toast('New UI schema applied');\n        } else if (hasError) {\n          this.toast('Error: UI schema is invalid');\n        }\n      }\n    },\n    reloadMonacoData() {\n      const example = find(\n        this.examples,\n        (example) => example.id === this.$route.params.id\n      );\n\n      if (example) {\n        this.$store.set(\n          'app/monaco@dataModel',\n          getMonacoModelForUri(\n            monaco.Uri.parse(this.toDataUri(example.id)),\n            example.input.data\n              ? JSON.stringify(example.input.data, null, 2)\n              : ''\n          )\n        );\n        this.toast('Original example data loaded. Apply it to take effect.');\n      }\n    },\n    saveMonacoData() {\n      const model = this.monacoDataModel as monaco.editor.ITextModel;\n      const example = this.example;\n\n      if (model && example) {\n        // do not check for monaco errors just if this is valid JSON becase we want to see when we have validation errors\n\n        const modelValue = model.getValue();\n        if (modelValue) {\n          let newJson: Record<string, any> | undefined = undefined;\n\n          try {\n            newJson = JSON.parse(modelValue);\n          } catch (error) {\n            this.toast(`Error: ${error}`);\n          }\n\n          if (newJson) {\n            example.input.data = newJson;\n            this.toast('New data applied');\n          }\n        }\n      }\n    },\n    registerValidations(editor: EditorApi) {\n      configureJsonSchemaValidation(editor, ['*.schema.json']);\n      configureUISchemaValidation(editor, ['*.uischema.json']);\n      for (let example of examples) {\n        const schema = {\n          ...example.input.schema,\n          title: example.title,\n        };\n\n        if (example && example.input.schema) {\n          configureDataValidation(\n            editor,\n            `inmemory://${this.toSchemaUri(example.id)}`,\n            this.toDataUri(example.id),\n            schema\n          );\n        }\n      }\n    },\n    updateMonacoModels(example) {\n      this.$store.set(\n        'app/monaco@schemaModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toSchemaUri(example.id)),\n          example.input.schema\n            ? JSON.stringify(example.input.schema, null, 2)\n            : ''\n        )\n      );\n      this.$store.set(\n        'app/monaco@uischemaModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toUiSchemaUri(example.id)),\n          example.input.uischema\n            ? JSON.stringify(example.input.uischema, null, 2)\n            : ''\n        )\n      );\n      this.$store.set(\n        'app/monaco@dataModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toDataUri(example.id)),\n          example.input.data ? JSON.stringify(example.input.data, null, 2) : ''\n        )\n      );\n    },\n    toSchemaUri(id: string): string {\n      return `${id}.schema.json`;\n    },\n    toUiSchemaUri(id: string): string {\n      return `${id}.uischema.json`;\n    },\n    toDataUri(id: string): string {\n      return `${id}.data.json`;\n    },\n    toast(message: string): void {\n      this.snackbar = true;\n      this.snackbarText = message;\n    },\n  },\n  provide() {\n    return {\n      styles: myStyles,\n    };\n  },\n};\n"],"sourceRoot":""}]}