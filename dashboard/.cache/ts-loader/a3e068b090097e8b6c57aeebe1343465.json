{"remainingRequest":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/ts-loader/index.js??ref--14-2!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/components/DemoForm.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/components/DemoForm.vue","mtime":1645564537319},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js","mtime":1645670388105},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/ts-loader/index.js","mtime":1645670388499},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js","mtime":1645670389517}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgSnNvbkZvcm1zIH0gZnJvbSAnQGpzb25mb3Jtcy92dWUyJzsKaW1wb3J0IEpzb25SZWZzIGZyb20gJ2pzb24tcmVmcyc7CmltcG9ydCB7IGNyZWF0ZVRyYW5zbGF0b3IgfSBmcm9tICcuLi9pMThuJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdkZW1vLWZvcm0nLAogIGNvbXBvbmVudHM6IHsKICAgIEpzb25Gb3JtczogSnNvbkZvcm1zCiAgfSwKICBwcm9wczogewogICAgZXhhbXBsZTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgcmVuZGVyZXJzOiB7CiAgICAgIHJlcXVpcmVkOiB0cnVlLAogICAgICB0eXBlOiBBcnJheQogICAgfSwKICAgIGNlbGxzOiB7CiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIGNvbmZpZzogewogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogdW5kZWZpbmVkCiAgICB9LAogICAgcmVhZG9ubHk6IHsKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIHVpc2NoZW1hczogewogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICB2YWxpZGF0aW9uTW9kZTogewogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ1ZhbGlkYXRlQW5kU2hvdycKICAgIH0sCiAgICBhanY6IHsKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIGxvY2FsZTogewogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ2VuJwogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc29sdmVkU2NoZW1hOiB7CiAgICAgICAgc2NoZW1hOiB1bmRlZmluZWQsCiAgICAgICAgcmVzb2x2ZWQ6IGZhbHNlLAogICAgICAgIGVycm9yOiB1bmRlZmluZWQKICAgICAgfSwKICAgICAgaTE4bjogewogICAgICAgIGxvY2FsZTogdGhpcy5sb2NhbGUsCiAgICAgICAgdHJhbnNsYXRlOiBjcmVhdGVUcmFuc2xhdG9yKHRoaXMubG9jYWxlKQogICAgICB9CiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIGV4YW1wbGU6IHsKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihuZXdFeGFtcGxlLCBvbGRFeGFtcGxlKSB7CiAgICAgICAgdGhpcy5yZXNvbHZlU2NoZW1hKG5ld0V4YW1wbGUuaW5wdXQuc2NoZW1hKTsKICAgICAgfQogICAgfSwKICAgIGxvY2FsZTogZnVuY3Rpb24gbG9jYWxlKG5ld0xvY2FsZSkgewogICAgICBjb25zb2xlLmxvZygnTE9DQUxFIFNXSVRDSCcsIG5ld0xvY2FsZSk7CiAgICAgIHRoaXMuaTE4bi5sb2NhbGUgPSBuZXdMb2NhbGU7CiAgICAgIHRoaXMuaTE4bi50cmFuc2xhdGUgPSBjcmVhdGVUcmFuc2xhdG9yKG5ld0xvY2FsZSk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5yZXNvbHZlU2NoZW1hKHRoaXMuZXhhbXBsZS5pbnB1dC5zY2hlbWEpOwogIH0sCiAgbWV0aG9kczogewogICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGV2ZW50KSB7CiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGV2ZW50KTsKICAgIH0sCiAgICByZXNvbHZlU2NoZW1hOiBmdW5jdGlvbiByZXNvbHZlU2NoZW1hKHNjaGVtYSkgewogICAgICB2YXIgcmVzb2x2ZWRTY2hlbWEgPSB0aGlzLnJlc29sdmVkU2NoZW1hOwogICAgICByZXNvbHZlZFNjaGVtYS5zY2hlbWEgPSB1bmRlZmluZWQ7CiAgICAgIHJlc29sdmVkU2NoZW1hLnJlc29sdmVkID0gZmFsc2U7CiAgICAgIHJlc29sdmVkU2NoZW1hLmVycm9yID0gdW5kZWZpbmVkOwoKICAgICAgaWYgKHNjaGVtYSkgewogICAgICAgIEpzb25SZWZzLnJlc29sdmVSZWZzKHNjaGVtYSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICByZXNvbHZlZFNjaGVtYS5zY2hlbWEgPSByZXMucmVzb2x2ZWQ7CiAgICAgICAgICByZXNvbHZlZFNjaGVtYS5yZXNvbHZlZCA9IHRydWU7CiAgICAgICAgfSwgZnVuY3Rpb24gKGVycikgewogICAgICAgICAgcmVzb2x2ZWRTY2hlbWEucmVzb2x2ZWQgPSB0cnVlOwogICAgICAgICAgcmVzb2x2ZWRTY2hlbWEuZXJyb3IgPSBlcnIubWVzc2FnZTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBub3RoaW5nIHRvIHJlc29sdmUKICAgICAgICByZXNvbHZlZFNjaGVtYS5yZXNvbHZlZCA9IHRydWU7CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"sources":["/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/components/DemoForm.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"AA+DA,SAAS,SAAT,QAAgD,iBAAhD;AACA,OAAO,QAAP,MAAqB,WAArB;AACA,SAAS,gBAAT,QAAiC,SAAjC;AAEA,eAAe;AACb,EAAA,IAAI,EAAE,WADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,SAAS,EAAT;AADU,GAFC;AAKb,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AAAE,MAAA,IAAI,EAAE,MAAR;AAAqC,MAAA,QAAQ,EAAE;AAA/C,KADJ;AAEL,IAAA,SAAS,EAAE;AACT,MAAA,QAAQ,EAAE,IADD;AAET,MAAA,IAAI,EAAE;AAFG,KAFN;AAML,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE,KADL;AAEL,MAAA,IAAI,EAAE,KAFD;AAGL,MAAA,OAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAHJ,KANF;AAWL,IAAA,MAAM,EAAE;AACN,MAAA,QAAQ,EAAE,KADJ;AAEN,MAAA,IAAI,EAAE,MAFA;AAGN,MAAA,OAAO,EAAE;AAHH,KAXH;AAgBL,IAAA,QAAQ,EAAE;AACR,MAAA,QAAQ,EAAE,KADF;AAER,MAAA,IAAI,EAAE,OAFE;AAGR,MAAA,OAAO,EAAE;AAHD,KAhBL;AAqBL,IAAA,SAAS,EAAE;AACT,MAAA,QAAQ,EAAE,KADD;AAET,MAAA,IAAI,EAAE,KAFG;AAGT,MAAA,OAAO,EAAE;AAAA,eAAM,EAAN;AAAA;AAHA,KArBN;AA0BL,IAAA,cAAc,EAAE;AACd,MAAA,QAAQ,EAAE,KADI;AAEd,MAAA,IAAI,EAAE,MAFQ;AAGd,MAAA,OAAO,EAAE;AAHK,KA1BX;AA+BL,IAAA,GAAG,EAAE;AACH,MAAA,QAAQ,EAAE,KADP;AAEH,MAAA,IAAI,EAAE,MAFH;AAGH,MAAA,OAAO,EAAE;AAHN,KA/BA;AAoCL,IAAA,MAAM,EAAE;AACN,MAAA,QAAQ,EAAE,KADJ;AAEN,MAAA,IAAI,EAAE,MAFA;AAGN,MAAA,OAAO,EAAE;AAHH;AApCH,GALM;AA+Cb,EAAA,IA/Ca,kBA+CT;AACF,WAAO;AACL,MAAA,cAAc,EAAE;AACd,QAAA,MAAM,EAAE,SADM;AAEd,QAAA,QAAQ,EAAE,KAFI;AAGd,QAAA,KAAK,EAAE;AAHO,OADX;AAML,MAAA,IAAI,EAAE;AACJ,QAAA,MAAM,EAAE,KAAK,MADT;AAEJ,QAAA,SAAS,EAAE,gBAAgB,CAAC,KAAK,MAAN;AAFvB;AAND,KAAP;AAWD,GA3DY;AA4Db,EAAA,KAAK,EAAE;AACL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,IADC;AAEP,MAAA,OAFO,mBAEC,UAFD,EAEsB,UAFtB,EAEyC;AAC9C,aAAK,aAAL,CAAmB,UAAU,CAAC,KAAX,CAAiB,MAApC;AACD;AAJM,KADJ;AAOL,IAAA,MAPK,kBAOE,SAPF,EAOmB;AACtB,MAAA,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,SAA7B;AACA,WAAK,IAAL,CAAU,MAAV,GAAmB,SAAnB;AACA,WAAK,IAAL,CAAU,SAAV,GAAsB,gBAAgB,CAAC,SAAD,CAAtC;AACD;AAXI,GA5DM;AAyEb,EAAA,OAzEa,qBAyEN;AACL,SAAK,aAAL,CAAmB,KAAK,OAAL,CAAa,KAAb,CAAmB,MAAtC;AACD,GA3EY;AA4Eb,EAAA,OAAO,EAAE;AACP,IAAA,QADO,oBACE,KADF,EAC6B;AAClC,WAAK,KAAL,CAAW,QAAX,EAAqB,KAArB;AACD,KAHM;AAIP,IAAA,aAJO,yBAIO,MAJP,EAI0B;AAC/B,UAAM,cAAc,GAAG,KAAK,cAA5B;AACA,MAAA,cAAc,CAAC,MAAf,GAAwB,SAAxB;AACA,MAAA,cAAc,CAAC,QAAf,GAA0B,KAA1B;AACA,MAAA,cAAc,CAAC,KAAf,GAAuB,SAAvB;;AAEA,UAAI,MAAJ,EAAY;AACV,QAAA,QAAQ,CAAC,WAAT,CAAqB,MAArB,EAA6B,IAA7B,CACE,UAAU,GAAV,EAAa;AACX,UAAA,cAAc,CAAC,MAAf,GAAwB,GAAG,CAAC,QAA5B;AACA,UAAA,cAAc,CAAC,QAAf,GAA0B,IAA1B;AACD,SAJH,EAKE,UAAU,GAAV,EAAoB;AAClB,UAAA,cAAc,CAAC,QAAf,GAA0B,IAA1B;AACA,UAAA,cAAc,CAAC,KAAf,GAAuB,GAAG,CAAC,OAA3B;AACD,SARH;AAUD,OAXD,MAWO;AACL;AACA,QAAA,cAAc,CAAC,QAAf,GAA0B,IAA1B;AACD;AACF;AAzBM;AA5EI,CAAf","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { PropType } from 'vue';\nimport { Example, ResolvedSchema } from '@/core/types';\nimport { Ajv } from 'ajv';\nimport {\n  ValidationMode,\n  JsonFormsUISchemaRegistryEntry,\n  JsonFormsRendererRegistryEntry,\n  JsonFormsCellRendererRegistryEntry,\n  JsonSchema,\n  JsonFormsI18nState,\n} from '@jsonforms/core';\nimport { JsonForms, JsonFormsChangeEvent } from '@jsonforms/vue2';\nimport JsonRefs from 'json-refs';\nimport { createTranslator } from '../i18n';\n\nexport default {\n  name: 'demo-form',\n  components: {\n    JsonForms,\n  },\n  props: {\n    example: { type: Object as PropType<Example>, required: true },\n    renderers: {\n      required: true,\n      type: Array as PropType<JsonFormsRendererRegistryEntry[]>,\n    },\n    cells: {\n      required: false,\n      type: Array as PropType<JsonFormsCellRendererRegistryEntry[]>,\n      default: () => [],\n    },\n    config: {\n      required: false,\n      type: Object as PropType<any>,\n      default: undefined,\n    },\n    readonly: {\n      required: false,\n      type: Boolean,\n      default: false,\n    },\n    uischemas: {\n      required: false,\n      type: Array as PropType<JsonFormsUISchemaRegistryEntry[]>,\n      default: () => [],\n    },\n    validationMode: {\n      required: false,\n      type: String as PropType<ValidationMode>,\n      default: 'ValidateAndShow',\n    },\n    ajv: {\n      required: false,\n      type: Object as PropType<Ajv>,\n      default: undefined,\n    },\n    locale: {\n      required: false,\n      type: String,\n      default: 'en',\n    },\n  },\n  data() {\n    return {\n      resolvedSchema: {\n        schema: undefined,\n        resolved: false,\n        error: undefined,\n      } as ResolvedSchema,\n      i18n: {\n        locale: this.locale,\n        translate: createTranslator(this.locale),\n      } as JsonFormsI18nState,\n    };\n  },\n  watch: {\n    example: {\n      deep: true,\n      handler(newExample: Example, oldExample: Example): void {\n        this.resolveSchema(newExample.input.schema);\n      },\n    },\n    locale(newLocale: string): void {\n      console.log('LOCALE SWITCH', newLocale);\n      this.i18n.locale = newLocale;\n      this.i18n.translate = createTranslator(newLocale);\n    },\n  },\n  mounted() {\n    this.resolveSchema(this.example.input.schema);\n  },\n  methods: {\n    onChange(event: JsonFormsChangeEvent): void {\n      this.$emit('change', event);\n    },\n    resolveSchema(schema?: JsonSchema): void {\n      const resolvedSchema = this.resolvedSchema;\n      resolvedSchema.schema = undefined;\n      resolvedSchema.resolved = false;\n      resolvedSchema.error = undefined;\n\n      if (schema) {\n        JsonRefs.resolveRefs(schema).then(\n          function (res) {\n            resolvedSchema.schema = res.resolved;\n            resolvedSchema.resolved = true;\n          },\n          function (err: Error) {\n            resolvedSchema.resolved = true;\n            resolvedSchema.error = err.message;\n          }\n        );\n      } else {\n        // nothing to resolve\n        resolvedSchema.resolved = true;\n      }\n    },\n  },\n};\n"],"sourceRoot":""}]}