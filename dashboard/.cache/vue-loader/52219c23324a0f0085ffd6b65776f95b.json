{"remainingRequest":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/views/example/Example.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/views/example/Example.vue","mtime":1645564537363},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645571717127},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js","mtime":1645571722465},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/ts-loader/index.js","mtime":1645571723037},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645571717127},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js","mtime":1645571725060}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Example.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Example.vue","sourceRoot":"src/views/example","sourcesContent":["<template>\n  <v-container fluid class=\"demo\" v-if=\"example != null\">\n    <v-flex>\n      <v-card>\n        <v-card-title>{{ example.title }}</v-card-title>\n        <v-card-text>\n          <v-tabs v-model=\"activeTab\">\n            <v-tab :key=\"0\">Demo</v-tab>\n            <v-spacer expand />\n            <v-tab :key=\"1\">Schema</v-tab>\n            <v-tab :key=\"2\">UI Schema</v-tab>\n            <v-tab :key=\"3\">Data</v-tab>\n\n            <v-tab-item :key=\"0\">\n              <demo-form\n                :example=\"example\"\n                :renderers=\"renderers\"\n                :cells=\"cells\"\n                :config=\"config\"\n                :validationMode=\"validationMode\"\n                :ajv=\"ajv\"\n                :readonly=\"readonly\"\n                :locale=\"locale\"\n                @change=\"onChange\"\n              />\n            </v-tab-item>\n            <v-tab-item :key=\"1\">\n              <v-card>\n                <v-card-title>\n                  <v-toolbar flat>\n                    <v-toolbar-title>Schema</v-toolbar-title>\n                    <v-spacer></v-spacer>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <v-btn\n                          icon\n                          @click=\"reloadMonacoSchema\"\n                          v-on=\"onTooltip\"\n                        >\n                          <v-icon>mdi-reload</v-icon>\n                        </v-btn>\n                      </template>\n                      {{ `Reload Example Schema` }}\n                    </v-tooltip>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <v-btn icon @click=\"saveMonacoSchema\" v-on=\"onTooltip\">\n                          <v-icon>mdi-content-save</v-icon>\n                        </v-btn>\n                      </template>\n                      {{ `Apply Change To Example Schema` }}\n                    </v-tooltip>\n                  </v-toolbar>\n                </v-card-title>\n                <v-divider class=\"mx-4\"></v-divider>\n                <monaco-editor\n                  :theme=\"$vuetify.theme.dark ? 'vs-dark' : 'vs'\"\n                  height=\"500\"\n                  :language=\"`json`\"\n                  v-model=\"monacoSchemaModel\"\n                  :editorBeforeMount=\"registerValidations\"\n                ></monaco-editor>\n              </v-card>\n            </v-tab-item>\n            <v-tab-item :key=\"2\">\n              <v-card>\n                <v-card-title>\n                  <v-toolbar flat>\n                    <v-toolbar-title>UI Schema</v-toolbar-title>\n                    <v-spacer></v-spacer>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <v-btn\n                          icon\n                          @click=\"reloadMonacoUiSchema\"\n                          v-on=\"onTooltip\"\n                        >\n                          <v-icon>mdi-reload</v-icon>\n                        </v-btn>\n                      </template>\n                      {{ `Reload Example UI Schema` }}\n                    </v-tooltip>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <v-btn\n                          icon\n                          @click=\"saveMonacoUiSchema\"\n                          v-on=\"onTooltip\"\n                        >\n                          <v-icon>mdi-content-save</v-icon>\n                        </v-btn>\n                      </template>\n                      {{ `Apply Change To Example UI Schema` }}\n                    </v-tooltip>\n                  </v-toolbar>\n                </v-card-title>\n                <v-divider class=\"mx-4\"></v-divider>\n                <monaco-editor\n                  :theme=\"$vuetify.theme.dark ? 'vs-dark' : 'vs'\"\n                  height=\"500\"\n                  language=\"json\"\n                  v-model=\"monacoUiSchemaModel\"\n                  :editorBeforeMount=\"registerValidations\"\n                ></monaco-editor>\n              </v-card>\n            </v-tab-item>\n            <v-tab-item :key=\"3\">\n              <v-card>\n                <v-card-title>\n                  <v-toolbar flat>\n                    <v-toolbar-title>Data</v-toolbar-title>\n                    <v-spacer></v-spacer>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <v-btn icon @click=\"reloadMonacoData\" v-on=\"onTooltip\">\n                          <v-icon>mdi-reload</v-icon>\n                        </v-btn>\n                      </template>\n                      {{ `Reload Example Data` }}\n                    </v-tooltip>\n                    <v-tooltip bottom>\n                      <template v-slot:activator=\"{ on: onTooltip }\">\n                        <v-btn icon @click=\"saveMonacoData\" v-on=\"onTooltip\">\n                          <v-icon>mdi-content-save</v-icon>\n                        </v-btn>\n                      </template>\n                      {{ `Apply Change To Example Data` }}\n                    </v-tooltip>\n                  </v-toolbar>\n                </v-card-title>\n                <v-divider class=\"mx-4\"></v-divider>\n                <monaco-editor\n                  :theme=\"$vuetify.theme.dark ? 'vs-dark' : 'vs'\"\n                  height=\"500\"\n                  language=\"json\"\n                  v-model=\"monacoDataModel\"\n                  :editorBeforeMount=\"registerValidations\"\n                ></monaco-editor>\n              </v-card>\n            </v-tab-item>\n          </v-tabs>\n        </v-card-text>\n      </v-card>\n      <v-snackbar v-model=\"snackbar\" :timeout=\"snackbarTimeout\">\n        {{ snackbarText }}\n\n        <template v-slot:action=\"{ attrs }\">\n          <v-btn text v-bind=\"attrs\" @click=\"snackbar = false\"> Close </v-btn>\n        </template>\n      </v-snackbar>\n    </v-flex>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport { examples } from '@/examples';\nimport { find } from 'lodash';\nimport { sync } from 'vuex-pathify';\n\nimport { mergeStyles, defaultStyles } from '@jsonforms/vue2-vuetify';\nimport { JsonFormsChangeEvent } from '@jsonforms/vue2';\nimport MonacoEditor from '@/components/MonacoEditor.vue';\nimport DemoForm from '@/components/DemoForm.vue';\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport {\n  configureJsonSchemaValidation,\n  configureUISchemaValidation,\n  configureDataValidation,\n  EditorApi,\n  getMonacoModelForUri,\n} from '@/core/jsonSchemaValidation';\nimport { Example } from '@/core/types';\n\nconst myStyles = mergeStyles(defaultStyles, {\n  control: { root: 'my-control' },\n});\n\nexport default {\n  name: 'ExampleView',\n  components: {\n    MonacoEditor,\n    DemoForm,\n  },\n  data() {\n    return {\n      activeTab: 0,\n      examples,\n      example: undefined,\n      snackbar: false,\n      snackbarText: '',\n      snackbarTimeout: 3000,\n    };\n  },\n  computed: {\n    renderers: sync('app/jsonforms@renderers'),\n    cells: sync('app/jsonforms@cells'),\n    config: sync('app/jsonforms@config'),\n    validationMode: sync('app/jsonforms@validationMode'),\n    ajv: sync('app/jsonforms@ajv'),\n    readonly: sync('app/jsonforms@readonly'),\n    monacoSchemaModel: sync('app/monaco@schemaModel'),\n    monacoUiSchemaModel: sync('app/monaco@uischemaModel'),\n    monacoDataModel: sync('app/monaco@dataModel'),\n    locale: sync('app/jsonforms@locale'),\n  },\n  mounted() {\n    this.setExample(\n      find(this.examples, (example) => example.id === this.$route.params.id)\n    );\n  },\n  watch: {\n    '$route.params.id'(id) {\n      this.setExample(find(this.examples, (example) => example.id === id));\n    },\n  },\n  methods: {\n    onChange(event: JsonFormsChangeEvent) {\n      this.$store.set(\n        'app/monaco@dataModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toDataUri(this.example.id)),\n          event.data ? JSON.stringify(event.data, null, 2) : ''\n        )\n      );\n    },\n    setExample(example: Example): void {\n      if (example) {\n        this.example = {\n          id: example.id,\n          title: example.title,\n          input: {\n            schema: example.input.schema,\n            uischema: example.input.uischema,\n            data: example.input.data,\n          },\n        };\n        this.updateMonacoModels(this.example);\n      }\n    },\n    reloadMonacoSchema() {\n      const example = find(\n        this.examples,\n        (example) => example.id === this.$route.params.id\n      );\n\n      if (example) {\n        this.$store.set(\n          'app/monaco@schemaModel',\n          getMonacoModelForUri(\n            monaco.Uri.parse(this.toSchemaUri(example.id)),\n            example.input.schema\n              ? JSON.stringify(example.input.schema, null, 2)\n              : ''\n          )\n        );\n        this.toast('Original example schema loaded. Apply it to take effect.');\n      }\n    },\n    saveMonacoSchema() {\n      const model = this.monacoSchemaModel as monaco.editor.ITextModel;\n      const example = this.example;\n\n      if (model && example) {\n        // TODO: is there a better way how to get errors including the error message from monaco editor ?\n        const hasError =\n          model\n            .getAllDecorations()\n            .filter((d) => d.options.className === 'squiggly-error')\n            .map((e) => e).length > 0;\n\n        const modelValue = model.getValue();\n        if (modelValue && !hasError) {\n          const newJson: Record<string, any> = JSON.parse(modelValue);\n          example.input.schema = newJson;\n\n          this.toast('New schema applied');\n        } else if (hasError) {\n          this.toast('Error: schema is invalid');\n        }\n      }\n    },\n    reloadMonacoUiSchema() {\n      const example = find(\n        this.examples,\n        (example) => example.id === this.$route.params.id\n      );\n\n      if (example) {\n        this.$store.set(\n          'app/monaco@uischemaModel',\n          getMonacoModelForUri(\n            monaco.Uri.parse(this.toUiSchemaUri(example.id)),\n            example.input.uischema\n              ? JSON.stringify(example.input.uischema, null, 2)\n              : ''\n          )\n        );\n        this.toast(\n          'Original example UI schema loaded. Apply it to take effect.'\n        );\n      }\n    },\n    saveMonacoUiSchema() {\n      const model = this.monacoUiSchemaModel as monaco.editor.ITextModel;\n      const example = this.example;\n\n      if (model && example) {\n        // TODO: is there a better way how to get errors including the error message from monaco editor ?\n        const hasError =\n          model\n            .getAllDecorations()\n            .filter((d) => d.options.className === 'squiggly-error')\n            .map((e) => e).length > 0;\n\n        const modelValue = model.getValue();\n        if (modelValue && !hasError) {\n          const newJson: Record<string, any> = JSON.parse(modelValue);\n          example.input.uischema = newJson;\n          this.toast('New UI schema applied');\n        } else if (hasError) {\n          this.toast('Error: UI schema is invalid');\n        }\n      }\n    },\n    reloadMonacoData() {\n      const example = find(\n        this.examples,\n        (example) => example.id === this.$route.params.id\n      );\n\n      if (example) {\n        this.$store.set(\n          'app/monaco@dataModel',\n          getMonacoModelForUri(\n            monaco.Uri.parse(this.toDataUri(example.id)),\n            example.input.data\n              ? JSON.stringify(example.input.data, null, 2)\n              : ''\n          )\n        );\n        this.toast('Original example data loaded. Apply it to take effect.');\n      }\n    },\n    saveMonacoData() {\n      const model = this.monacoDataModel as monaco.editor.ITextModel;\n      const example = this.example;\n\n      if (model && example) {\n        // do not check for monaco errors just if this is valid JSON becase we want to see when we have validation errors\n\n        const modelValue = model.getValue();\n        if (modelValue) {\n          let newJson: Record<string, any> | undefined = undefined;\n\n          try {\n            newJson = JSON.parse(modelValue);\n          } catch (error) {\n            this.toast(`Error: ${error}`);\n          }\n\n          if (newJson) {\n            example.input.data = newJson;\n            this.toast('New data applied');\n          }\n        }\n      }\n    },\n    registerValidations(editor: EditorApi) {\n      configureJsonSchemaValidation(editor, ['*.schema.json']);\n      configureUISchemaValidation(editor, ['*.uischema.json']);\n      for (let example of examples) {\n        const schema = {\n          ...example.input.schema,\n          title: example.title,\n        };\n\n        if (example && example.input.schema) {\n          configureDataValidation(\n            editor,\n            `inmemory://${this.toSchemaUri(example.id)}`,\n            this.toDataUri(example.id),\n            schema\n          );\n        }\n      }\n    },\n    updateMonacoModels(example) {\n      this.$store.set(\n        'app/monaco@schemaModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toSchemaUri(example.id)),\n          example.input.schema\n            ? JSON.stringify(example.input.schema, null, 2)\n            : ''\n        )\n      );\n      this.$store.set(\n        'app/monaco@uischemaModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toUiSchemaUri(example.id)),\n          example.input.uischema\n            ? JSON.stringify(example.input.uischema, null, 2)\n            : ''\n        )\n      );\n      this.$store.set(\n        'app/monaco@dataModel',\n        getMonacoModelForUri(\n          monaco.Uri.parse(this.toDataUri(example.id)),\n          example.input.data ? JSON.stringify(example.input.data, null, 2) : ''\n        )\n      );\n    },\n    toSchemaUri(id: string): string {\n      return `${id}.schema.json`;\n    },\n    toUiSchemaUri(id: string): string {\n      return `${id}.uischema.json`;\n    },\n    toDataUri(id: string): string {\n      return `${id}.data.json`;\n    },\n    toast(message: string): void {\n      this.snackbar = true;\n      this.snackbarText = message;\n    },\n  },\n  provide() {\n    return {\n      styles: myStyles,\n    };\n  },\n};\n</script>\n\n<style scoped>\n.form {\n  max-width: 500px;\n  flex: 1;\n}\n.container {\n  display: flex;\n}\n.data {\n  flex: 1;\n}\n\n.demo {\n  max-width: 900px;\n}\n</style>\n\n<style>\n/* required class */\n.code-editor {\n}\n\n/* optional class for removing the outline */\n.prism-editor__textarea:focus {\n  outline: none;\n}\n\n.vue-code-hightlight pre {\n  background-color: transparent !important;\n}\n\n.vue-code-hightlight pre code {\n  background-color: transparent !important;\n}\n</style>\n"]}]}