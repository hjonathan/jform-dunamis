{"remainingRequest":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/components/MonacoEditor.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/example/src/components/MonacoEditor.vue","mtime":1645564537319},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/babel-loader/lib/index.js","mtime":1645670388105},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/ts-loader/index.js","mtime":1645670388499},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/cache-loader/dist/cjs.js","mtime":1645670383911},{"path":"/Users/qsrodri/pm4/jsonforms-vuetify-renderers/node_modules/vue-loader/lib/index.js","mtime":1645670389517}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKaW1wb3J0ICogYXMgbW9uYWNvIGZyb20gJ21vbmFjby1lZGl0b3IvZXNtL3ZzL2VkaXRvci9lZGl0b3IuYXBpJzsKaW1wb3J0IHsgUHJvcFR5cGUgfSBmcm9tICd2dWUnOwoKZXhwb3J0IHR5cGUgTW9uYWNvQXBpID0gdHlwZW9mIG1vbmFjbzsKCmV4cG9ydCB7IG1vbmFjbyB9OwoKZnVuY3Rpb24gcHJvY2Vzc1NpemUoc2l6ZTogbnVtYmVyIHwgc3RyaW5nKSB7CiAgcmV0dXJuICEvXlxkKyQvLnRlc3Qoc2l6ZSBhcyBzdHJpbmcpID8gc2l6ZSA6IGAke3NpemV9cHhgOwp9CgppbnRlcmZhY2UgQmFzZUNvbXBvbmVudERhdGEgewogIGVkaXRvcj86IG1vbmFjby5lZGl0b3IuSVN0YW5kYWxvbmVDb2RlRWRpdG9yOwogIHN1YnNjcmlwdGlvbj86IG1vbmFjby5JRGlzcG9zYWJsZTsKICBwcmV2ZW50X3RyaWdnZXJfY2hhbmdlX2V2ZW50PzogYm9vbGVhbjsKfQoKZXhwb3J0IGRlZmF1bHQgewogIHByb3BzOiB7CiAgICB3aWR0aDogeyB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLCBkZWZhdWx0OiAnMTAwJScgfSwKICAgIGhlaWdodDogeyB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLCBkZWZhdWx0OiAnMTAwJScgfSwKICAgIHZhbHVlOiB7IHR5cGU6IE9iamVjdCBhcyBQcm9wVHlwZTxtb25hY28uZWRpdG9yLklUZXh0TW9kZWw+IH0sCiAgICBsYW5ndWFnZTogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICdqYXZhc2NyaXB0JyB9LAogICAgdGhlbWU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAndnMnIH0sCiAgICBvcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4ge307CiAgICAgIH0sCiAgICB9LAogICAgb3ZlcnJpZGVTZXJ2aWNlczogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHt9OwogICAgICB9LAogICAgfSwKICAgIGVkaXRvck1vdW50ZWQ6IHsKICAgICAgdHlwZTogRnVuY3Rpb24gYXMgUHJvcFR5cGU8CiAgICAgICAgKGVkaXRvcjogbW9uYWNvLmVkaXRvci5JU3RhbmRhbG9uZUNvZGVFZGl0b3IsIGFwaTogTW9uYWNvQXBpKSA9PiB2b2lkCiAgICAgID4sCiAgICAgIGRlZmF1bHQ6ICgKICAgICAgICBfZWRpdG9yOiBtb25hY28uZWRpdG9yLklTdGFuZGFsb25lQ29kZUVkaXRvciwKICAgICAgICBfYXBpOiBNb25hY29BcGkKICAgICAgKSA9PiB1bmRlZmluZWQsCiAgICB9LAogICAgZWRpdG9yQmVmb3JlTW91bnQ6IHsKICAgICAgdHlwZTogRnVuY3Rpb24gYXMgUHJvcFR5cGU8KGFwaTogTW9uYWNvQXBpKSA9PiBSZWNvcmQ8c3RyaW5nLCBhbnk+PiwKICAgICAgZGVmYXVsdDogKF9hcGk6IE1vbmFjb0FwaSkgPT4gdW5kZWZpbmVkLAogICAgfSwKICAgIGNsYXNzTmFtZTogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiBmYWxzZSB9LAogIH0sCiAgZGF0YSgpOiBCYXNlQ29tcG9uZW50RGF0YSB7CiAgICByZXR1cm4gewogICAgICBlZGl0b3I6IHVuZGVmaW5lZCwKICAgICAgc3Vic2NyaXB0aW9uOiB1bmRlZmluZWQsCiAgICAgIHByZXZlbnRfdHJpZ2dlcl9jaGFuZ2VfZXZlbnQ6IHVuZGVmaW5lZCwKICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5pbml0TW9uYWNvKCk7CiAgfSwKICB3YXRjaDogewogICAgb3B0aW9uczogewogICAgICBkZWVwOiB0cnVlLAogICAgICBoYW5kbGVyKG9wdGlvbnM6IGFueSwgcHJldk9wdGlvbnM6IGFueSkgewogICAgICAgIGlmICh0aGlzLmVkaXRvciAmJiBvcHRpb25zICE9PSBwcmV2T3B0aW9ucykgewogICAgICAgICAgLy8gRG9uJ3QgcGFzcyBpbiB0aGUgbW9kZWwgb24gdXBkYXRlIGJlY2F1c2UgbW9uYWNvIGNyYXNoZXMgaWYgd2UgcGFzcyB0aGUgbW9kZWwKICAgICAgICAgIC8vIGEgc2Vjb25kIHRpbWUuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L21vbmFjby1lZGl0b3IvaXNzdWVzLzIwMjcKICAgICAgICAgIGNvbnN0IHsgbW9kZWw6IF9tb2RlbCwgLi4ub3B0aW9uc1dpdGhvdXRNb2RlbCB9ID0gb3B0aW9uczsKICAgICAgICAgIHRoaXMuZWRpdG9yLnVwZGF0ZU9wdGlvbnMoewogICAgICAgICAgICAuLi4odGhpcy5jbGFzc05hbWUgPyB7IGV4dHJhRWRpdG9yQ2xhc3NOYW1lOiB0aGlzLmNsYXNzTmFtZSB9IDoge30pLAogICAgICAgICAgICAuLi5vcHRpb25zV2l0aG91dE1vZGVsLAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9LAogICAgfSwKICAgIHZhbHVlKG5ld01vZGVsOiBtb25hY28uZWRpdG9yLklUZXh0TW9kZWwpIHsKICAgICAgaWYgKHRoaXMuZWRpdG9yKSB7CiAgICAgICAgY29uc3QgeyBlZGl0b3IgfSA9IHRoaXM7CgogICAgICAgIGlmICghbmV3TW9kZWwuaXNEaXNwb3NlZCgpKSB7CiAgICAgICAgICBlZGl0b3Iuc2V0TW9kZWwobmV3TW9kZWwpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGxhbmd1YWdlKGxhbmd1YWdlOiBzdHJpbmcsIHByZXY6IHN0cmluZykgewogICAgICBjb25zdCB7IGVkaXRvciB9ID0gdGhpczsKICAgICAgaWYgKGVkaXRvciAmJiBwcmV2ICE9PSBsYW5ndWFnZSkgewogICAgICAgIGNvbnN0IG1vZGVsID0gZWRpdG9yLmdldE1vZGVsKCk7CiAgICAgICAgaWYgKG1vZGVsKSB7CiAgICAgICAgICBtb25hY28uZWRpdG9yLnNldE1vZGVsTGFuZ3VhZ2UobW9kZWwsIGxhbmd1YWdlKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB0aGVtZSh0aGVtZTogc3RyaW5nLCBwcmV2OiBzdHJpbmcpIHsKICAgICAgaWYgKHByZXYgIT09IHRoZW1lKSB7CiAgICAgICAgbW9uYWNvLmVkaXRvci5zZXRUaGVtZSh0aGVtZSk7CiAgICAgIH0KICAgIH0sCiAgICBzdHlsZSgpIHsKICAgICAgY29uc3QgeyBlZGl0b3IgfSA9IHRoaXM7CiAgICAgIGVkaXRvciAmJgogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgIGVkaXRvci5sYXlvdXQoKTsKICAgICAgICB9KTsKICAgIH0sCiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy5kZXN0cm95TW9uYWNvKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgc3R5bGUoKSB7CiAgICAgIGNvbnN0IHsgd2lkdGgsIGhlaWdodCB9ID0gdGhpczsKICAgICAgY29uc3QgZml4ZWRXaWR0aCA9IHByb2Nlc3NTaXplKHdpZHRoKTsKICAgICAgY29uc3QgZml4ZWRIZWlnaHQgPSBwcm9jZXNzU2l6ZShoZWlnaHQpOwogICAgICByZXR1cm4gewogICAgICAgIHdpZHRoOiBmaXhlZFdpZHRoLAogICAgICAgIGhlaWdodDogZml4ZWRIZWlnaHQsCiAgICAgIH07CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgZGVzdHJveU1vbmFjbygpIHsKICAgICAgaWYgKHRoaXMuZWRpdG9yKSB7CiAgICAgICAgdGhpcy5lZGl0b3IuZGlzcG9zZSgpOwogICAgICAgIGNvbnN0IG1vZGVsID0gdGhpcy5lZGl0b3IuZ2V0TW9kZWwoKTsKICAgICAgICBpZiAobW9kZWwpIHsKICAgICAgICAgIG1vZGVsLmRpc3Bvc2UoKTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9uKSB7CiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24uZGlzcG9zZSgpOwogICAgICB9CiAgICB9LAogICAgaW5pdE1vbmFjbygpIHsKICAgICAgY29uc3QgeyBsYW5ndWFnZSwgdGhlbWUsIG92ZXJyaWRlU2VydmljZXMsIGNsYXNzTmFtZSB9ID0gdGhpczsKICAgICAgLy8gQmVmb3JlIGluaXRpYWxpemluZyBtb25hY28gZWRpdG9yCiAgICAgIGNvbnN0IG9wdGlvbnMgPSB7IC4uLnRoaXMub3B0aW9ucywgLi4udGhpcy5lZGl0b3JXaWxsTW91bnQoKSB9OwoKICAgICAgdGhpcy5lZGl0b3IgPSBtb25hY28uZWRpdG9yLmNyZWF0ZSgKICAgICAgICB0aGlzLiRyZWZzLmNvbnRhaW5lckVsZW1lbnQgYXMgSFRNTEVsZW1lbnQsCiAgICAgICAgewogICAgICAgICAgbW9kZWw6IHRoaXMudmFsdWUsCiAgICAgICAgICBsYW5ndWFnZSwKICAgICAgICAgIC4uLihjbGFzc05hbWUgPyB7IGV4dHJhRWRpdG9yQ2xhc3NOYW1lOiBjbGFzc05hbWUgfSA6IHt9KSwKICAgICAgICAgIC4uLm9wdGlvbnMsCiAgICAgICAgICAuLi4odGhlbWUgPyB7IHRoZW1lIH0gOiB7fSksCiAgICAgICAgfSwKICAgICAgICBvdmVycmlkZVNlcnZpY2VzCiAgICAgICk7CiAgICAgIC8vIEFmdGVyIGluaXRpYWxpemluZyBtb25hY28gZWRpdG9yCiAgICAgIHRoaXMuZWRpdG9yRGlkTW91bnQodGhpcy5lZGl0b3IpOwogICAgfSwKICAgIGVkaXRvcldpbGxNb3VudCgpOiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHsKICAgICAgY29uc3Qgb3B0aW9ucyA9IHRoaXMuZWRpdG9yQmVmb3JlTW91bnQobW9uYWNvKTsKICAgICAgcmV0dXJuIG9wdGlvbnMgfHwge307CiAgICB9LAogICAgZWRpdG9yRGlkTW91bnQoZWRpdG9yOiBtb25hY28uZWRpdG9yLklTdGFuZGFsb25lQ29kZUVkaXRvcik6IHZvaWQgewogICAgICB0aGlzLmVkaXRvck1vdW50ZWQoZWRpdG9yLCBtb25hY28pOwoKICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBlZGl0b3Iub25EaWRDaGFuZ2VNb2RlbENvbnRlbnQoKGV2ZW50KSA9PiB7CiAgICAgICAgaWYgKCF0aGlzLnByZXZlbnRfdHJpZ2dlcl9jaGFuZ2VfZXZlbnQpIHsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGVkaXRvci5nZXRWYWx1ZSgpLCBldmVudCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["MonacoEditor.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MonacoEditor.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div\n    ref=\"containerElement\"\n    :style=\"style\"\n    className=\"vue-monaco-editor-container\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nimport { PropType } from 'vue';\n\nexport type MonacoApi = typeof monaco;\n\nexport { monaco };\n\nfunction processSize(size: number | string) {\n  return !/^\\d+$/.test(size as string) ? size : `${size}px`;\n}\n\ninterface BaseComponentData {\n  editor?: monaco.editor.IStandaloneCodeEditor;\n  subscription?: monaco.IDisposable;\n  prevent_trigger_change_event?: boolean;\n}\n\nexport default {\n  props: {\n    width: { type: [String, Number], default: '100%' },\n    height: { type: [String, Number], default: '100%' },\n    value: { type: Object as PropType<monaco.editor.ITextModel> },\n    language: { type: String, default: 'javascript' },\n    theme: { type: String, default: 'vs' },\n    options: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    overrideServices: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    editorMounted: {\n      type: Function as PropType<\n        (editor: monaco.editor.IStandaloneCodeEditor, api: MonacoApi) => void\n      >,\n      default: (\n        _editor: monaco.editor.IStandaloneCodeEditor,\n        _api: MonacoApi\n      ) => undefined,\n    },\n    editorBeforeMount: {\n      type: Function as PropType<(api: MonacoApi) => Record<string, any>>,\n      default: (_api: MonacoApi) => undefined,\n    },\n    className: { type: String, required: false },\n  },\n  data(): BaseComponentData {\n    return {\n      editor: undefined,\n      subscription: undefined,\n      prevent_trigger_change_event: undefined,\n    };\n  },\n  mounted() {\n    this.initMonaco();\n  },\n  watch: {\n    options: {\n      deep: true,\n      handler(options: any, prevOptions: any) {\n        if (this.editor && options !== prevOptions) {\n          // Don't pass in the model on update because monaco crashes if we pass the model\n          // a second time. See https://github.com/microsoft/monaco-editor/issues/2027\n          const { model: _model, ...optionsWithoutModel } = options;\n          this.editor.updateOptions({\n            ...(this.className ? { extraEditorClassName: this.className } : {}),\n            ...optionsWithoutModel,\n          });\n        }\n      },\n    },\n    value(newModel: monaco.editor.ITextModel) {\n      if (this.editor) {\n        const { editor } = this;\n\n        if (!newModel.isDisposed()) {\n          editor.setModel(newModel);\n        }\n      }\n    },\n    language(language: string, prev: string) {\n      const { editor } = this;\n      if (editor && prev !== language) {\n        const model = editor.getModel();\n        if (model) {\n          monaco.editor.setModelLanguage(model, language);\n        }\n      }\n    },\n    theme(theme: string, prev: string) {\n      if (prev !== theme) {\n        monaco.editor.setTheme(theme);\n      }\n    },\n    style() {\n      const { editor } = this;\n      editor &&\n        this.$nextTick(() => {\n          editor.layout();\n        });\n    },\n  },\n  beforeDestroy() {\n    this.destroyMonaco();\n  },\n  computed: {\n    style() {\n      const { width, height } = this;\n      const fixedWidth = processSize(width);\n      const fixedHeight = processSize(height);\n      return {\n        width: fixedWidth,\n        height: fixedHeight,\n      };\n    },\n  },\n  methods: {\n    destroyMonaco() {\n      if (this.editor) {\n        this.editor.dispose();\n        const model = this.editor.getModel();\n        if (model) {\n          model.dispose();\n        }\n      }\n      if (this.subscription) {\n        this.subscription.dispose();\n      }\n    },\n    initMonaco() {\n      const { language, theme, overrideServices, className } = this;\n      // Before initializing monaco editor\n      const options = { ...this.options, ...this.editorWillMount() };\n\n      this.editor = monaco.editor.create(\n        this.$refs.containerElement as HTMLElement,\n        {\n          model: this.value,\n          language,\n          ...(className ? { extraEditorClassName: className } : {}),\n          ...options,\n          ...(theme ? { theme } : {}),\n        },\n        overrideServices\n      );\n      // After initializing monaco editor\n      this.editorDidMount(this.editor);\n    },\n    editorWillMount(): Record<string, any> {\n      const options = this.editorBeforeMount(monaco);\n      return options || {};\n    },\n    editorDidMount(editor: monaco.editor.IStandaloneCodeEditor): void {\n      this.editorMounted(editor, monaco);\n\n      this.subscription = editor.onDidChangeModelContent((event) => {\n        if (!this.prevent_trigger_change_event) {\n          this.$emit('change', editor.getValue(), event);\n        }\n      });\n    },\n  },\n};\n</script>\n"]}]}